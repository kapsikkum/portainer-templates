{
    "version": "2",
    "templates": [
        {
            "type": 1,
            "title": "Adguardhome-sync",
            "name": "Adguardhome-sync",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/adguardhome-sync/config</p>",
            "description": "Adguardhome-sync is a tool to synchronize AdGuardHome config to replica instances.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
            "image": "linuxserver/adguardhome-sync:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CONFIGFILE",
                    "label": "CONFIGFILE",
                    "default": "/config/adguardhome-sync.yaml",
                    "description": "Set a custom config file."
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/adguardhome-sync/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Airsonic-advanced",
            "name": "Airsonic-advanced",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/airsonic-advanced/config<br>mkdir -p /portainer/airsonic-advanced/music<br>mkdir -p /portainer/airsonic-advanced/playlists<br>mkdir -p /portainer/airsonic-advanced/podcasts<br>mkdir -p /portainer/airsonic-advanced/media</p>",
            "description": "Airsonic-advanced is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png",
            "image": "linuxserver/airsonic-advanced:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CONTEXT_PATH",
                    "label": "CONTEXT_PATH",
                    "default": "<URL_BASE>",
                    "description": "For setting url-base in reverse proxy setups."
                },
                {
                    "name": "JAVA_OPTS",
                    "label": "JAVA_OPTS",
                    "default": "<options>",
                    "description": "For passing additional java options."
                }
            ],
            "ports": [
                "4040:4040/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/airsonic-advanced/config"
                },
                {
                    "container": "/music",
                    "bind": "/portainer/airsonic-advanced/music"
                },
                {
                    "container": "/playlists",
                    "bind": "/portainer/airsonic-advanced/playlists"
                },
                {
                    "container": "/podcasts",
                    "bind": "/portainer/airsonic-advanced/podcasts"
                },
                {
                    "container": "/media",
                    "bind": "/portainer/airsonic-advanced/media"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Apprise-api",
            "name": "Apprise-api",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/apprise-api/config</p>",
            "description": "Apprise-api Takes advantage of Apprise through your network with a user-friendly API. * Send notifications to more then 65+ services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
            "categories": [
                "Notifications"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
            "image": "linuxserver/apprise-api:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8000:8000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/apprise-api/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Audacity",
            "name": "Audacity",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/audacity/config</p>",
            "description": "Audacity is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
            "image": "linuxserver/audacity:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/audacity/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Babybuddy",
            "name": "Babybuddy",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/babybuddy/config</p>",
            "description": "Babybuddy is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.",
            "platform": "linux",
            "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
            "image": "linuxserver/babybuddy:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CSRF_TRUSTED_ORIGINS",
                    "label": "CSRF_TRUSTED_ORIGINS",
                    "default": "http://127.0.0.1:8000,https://babybuddy.domain.com",
                    "description": "Add any address you'd like to access babybuddy at (comma separated, no spaces)"
                }
            ],
            "ports": [
                "8000:8000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/babybuddy/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Bazarr",
            "name": "Bazarr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/bazarr/config<br>mkdir -p /portainer/bazarr/movies<br>mkdir -p /portainer/bazarr/tv</p>",
            "description": "Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png",
            "image": "linuxserver/bazarr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "6767:6767/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/bazarr/config"
                },
                {
                    "container": "/movies",
                    "bind": "/portainer/bazarr/movies"
                },
                {
                    "container": "/tv",
                    "bind": "/portainer/bazarr/tv"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Beets",
            "name": "Beets",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/beets/config<br>mkdir -p /portainer/beets/music<br>mkdir -p /portainer/beets/downloads</p>",
            "description": "Beets is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png",
            "image": "linuxserver/beets:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8337:8337/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/beets/config"
                },
                {
                    "container": "/music",
                    "bind": "/portainer/beets/music"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/beets/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Blender",
            "name": "Blender",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/blender/config</p>",
            "description": "Blender is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. This image does not support GPU rendering out of the box only accelerated workspace experience",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png",
            "image": "linuxserver/blender:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SUBFOLDER",
                    "label": "SUBFOLDER",
                    "default": "/",
                    "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
                },
                {
                    "name": "KEYBOARD",
                    "label": "KEYBOARD",
                    "default": "en-us-qwerty",
                    "description": "See the keyboard layouts section for more information and options."
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/blender/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Boinc",
            "name": "Boinc",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/boinc/config</p>",
            "description": "BOINC is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
            "categories": [
                "Research"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
            "image": "linuxserver/boinc:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PASSWORD",
                    "label": "PASSWORD",
                    "default": "",
                    "description": "Optionally set a password for the gui."
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/boinc/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Booksonic-air",
            "name": "Booksonic-air",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/booksonic-air/config<br>mkdir -p /portainer/booksonic-air/audiobooks<br>mkdir -p /portainer/booksonic-air/podcasts<br>mkdir -p /portainer/booksonic-air/othermedia</p>",
            "description": "Booksonic-air is a platform for accessing the audiobooks you own wherever you are. At the moment the platform consists of: * Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. * Booksonic App - An DSub based Android app for connection to Booksonic-Air servers.",
            "categories": [
                "Audio"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
            "image": "linuxserver/booksonic-air:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CONTEXT_PATH",
                    "label": "CONTEXT_PATH",
                    "default": "url-base",
                    "description": "Base url for use with reverse proxies etc."
                }
            ],
            "ports": [
                "4040:4040/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/booksonic-air/config"
                },
                {
                    "container": "/audiobooks",
                    "bind": "/portainer/booksonic-air/audiobooks"
                },
                {
                    "container": "/podcasts",
                    "bind": "/portainer/booksonic-air/podcasts"
                },
                {
                    "container": "/othermedia",
                    "bind": "/portainer/booksonic-air/othermedia"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Bookstack",
            "name": "Bookstack",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/bookstack/config</p>",
            "description": "Bookstack is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease. Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore. For more information on BookStack visit their website and check it out: https://www.bookstackapp.com",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png",
            "image": "linuxserver/bookstack:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "APP_URL",
                    "label": "APP_URL",
                    "default": "",
                    "description": "for specifying the IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`"
                },
                {
                    "name": "DB_HOST",
                    "label": "DB_HOST",
                    "default": "<yourdbhost>",
                    "description": "for specifying the database host"
                },
                {
                    "name": "DB_PORT",
                    "label": "DB_PORT",
                    "default": "<yourdbport>",
                    "description": "for specifying the database port if not default 3306"
                },
                {
                    "name": "DB_USER",
                    "label": "DB_USER",
                    "default": "<yourdbuser>",
                    "description": "for specifying the database user"
                },
                {
                    "name": "DB_PASS",
                    "label": "DB_PASS",
                    "default": "<yourdbpass>",
                    "description": "for specifying the database password (non-alphanumeric passwords must be properly escaped.)"
                },
                {
                    "name": "DB_DATABASE",
                    "label": "DB_DATABASE",
                    "default": "bookstackapp",
                    "description": "for specifying the database to be used"
                }
            ],
            "ports": [
                "6875:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/bookstack/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Budge",
            "name": "Budge",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/budge/config</p>",
            "description": "Budge is an open source 'budgeting with envelopes' personal finance app.",
            "platform": "linux",
            "logo": "",
            "image": "linuxserver/budge:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/budge/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Calibre",
            "name": "Calibre",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/calibre/config</p>",
            "description": "Calibre is a powerful and easy to use e-book manager. Users say it\u2019s outstanding and a must-have. It\u2019ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It\u2019s also completely free and open source and great for both casual users and computer experts.",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png",
            "image": "linuxserver/calibre:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PASSWORD",
                    "label": "PASSWORD",
                    "default": "",
                    "description": "Optionally set a password for the gui."
                },
                {
                    "name": "CLI_ARGS",
                    "label": "CLI_ARGS",
                    "default": "",
                    "description": "Optionally pass cli start arguments to calibre."
                }
            ],
            "ports": [
                "8080:8080/tcp",
                "8081:8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/calibre/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Calibre-web",
            "name": "Calibre-web",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/calibre-web/config<br>mkdir -p /portainer/calibre-web/books</p>",
            "description": "Calibre-web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. It is also possible to integrate google drive and edit metadata and your calibre library through the app itself. This software is a fork of library and licensed under the GPL v3 License.",
            "categories": [
                "Books"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png",
            "image": "linuxserver/calibre-web:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "DOCKER_MODS",
                    "label": "DOCKER_MODS",
                    "default": "linuxserver/mods:universal-calibre",
                    "description": "#optional & **x86-64 only** Adds the ability to perform ebook conversion"
                },
                {
                    "name": "OAUTHLIB_RELAX_TOKEN_SCOPE",
                    "label": "OAUTHLIB_RELAX_TOKEN_SCOPE",
                    "default": "1",
                    "description": "Optionally set this to allow Google OAUTH to work"
                }
            ],
            "ports": [
                "8083:8083/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/calibre-web/config"
                },
                {
                    "container": "/books",
                    "bind": "/portainer/calibre-web/books"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Changedetection.io",
            "name": "Changedetection.io",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/changedetection.io/config</p>",
            "description": "Changedetection.io provides free, open-source web page monitoring, notification and change detection.",
            "platform": "linux",
            "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/changedetection-icon.png",
            "image": "linuxserver/changedetection.io:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "BASE_URL",
                    "label": "BASE_URL",
                    "default": "",
                    "description": "Specify the full URL (including protocol) when running behind a reverse proxy"
                }
            ],
            "ports": [
                "5000:5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/changedetection.io/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Code-server",
            "name": "Code-server",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/code-server/config</p>",
            "description": "Code-server is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome.",
            "categories": [
                "Development"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png",
            "image": "linuxserver/code-server:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PASSWORD",
                    "label": "PASSWORD",
                    "default": "password",
                    "description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth."
                },
                {
                    "name": "HASHED_PASSWORD",
                    "label": "HASHED_PASSWORD",
                    "default": "",
                    "description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below."
                },
                {
                    "name": "SUDO_PASSWORD",
                    "label": "SUDO_PASSWORD",
                    "default": "password",
                    "description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password."
                },
                {
                    "name": "SUDO_PASSWORD_HASH",
                    "label": "SUDO_PASSWORD_HASH",
                    "default": "",
                    "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`."
                },
                {
                    "name": "PROXY_DOMAIN",
                    "label": "PROXY_DOMAIN",
                    "default": "code-server.my.domain",
                    "description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation](https://github.com/cdr/code-server/blob/master/docs/FAQ.md#sub-domains)"
                },
                {
                    "name": "DEFAULT_WORKSPACE",
                    "label": "DEFAULT_WORKSPACE",
                    "default": "/config/workspace",
                    "description": "If this optional variable is set, code-server will open this directory by default"
                }
            ],
            "ports": [
                "8443:8443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/code-server/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Cops",
            "name": "Cops",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/cops/config<br>mkdir -p /portainer/cops/books</p>",
            "description": "Cops by S\u00e9bastien Lucas, stands for Calibre OPDS (and HTML) Php Server. COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices. Changes in your Calibre library are reflected immediately in your COPS pages. See : COPS's home for more details. Don't forget to check the Wiki. ## Why? (taken from the author's site) In my opinion Calibre is a marvelous tool but is too big and has too much dependencies to be used for its content server. That's the main reason why I coded this OPDS server. I needed a simple tool to be installed on a small server (Seagate Dockstar in my case). I initially thought of Calibre2OPDS but as it generate static file no search was possible. Later I added an simple HTML catalog that should be usable on my Kobo. So COPS's main advantages are : * No need for many dependencies. * No need for a lot of CPU or RAM. * Not much code. * Search is available. * With Dropbox / owncloud it's very easy to have an up to date OPDS server. * It was fun to code. If you want to use the OPDS feed don't forget to specify feed.php at the end of your URL.",
            "categories": [
                "Books"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png",
            "image": "linuxserver/cops:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/cops/config"
                },
                {
                    "container": "/books",
                    "bind": "/portainer/cops/books"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Daapd",
            "name": "Daapd",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/daapd/config<br>mkdir -p /portainer/daapd/music</p>",
            "description": "Daapd (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), Chromecast, MPD and internet radio.",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-git.png",
            "image": "linuxserver/daapd:latest",
            "network": "host",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/daapd/config"
                },
                {
                    "container": "/music",
                    "bind": "/portainer/daapd/music"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Darktable",
            "name": "Darktable",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/darktable/config</p>",
            "description": "darktable is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
            "categories": [
                "Productivity"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
            "image": "linuxserver/darktable:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/darktable/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Davos",
            "name": "Davos",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/davos/config<br>mkdir -p /portainer/davos/download</p>",
            "description": "Davos is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.",
            "categories": [
                "Productivity"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/davos/master/docs/list.PNG",
            "image": "linuxserver/davos:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/davos/config"
                },
                {
                    "container": "/download",
                    "bind": "/portainer/davos/download"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Ddclient",
            "name": "Ddclient",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/ddclient/config</p>",
            "description": "Ddclient is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
            "categories": [
                "Networking"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
            "image": "linuxserver/ddclient:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/ddclient/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Deluge",
            "name": "Deluge",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/deluge/config<br>mkdir -p /portainer/deluge/downloads</p>",
            "description": "Deluge is a lightweight, Free Software, cross-platform BitTorrent client. * Full Encryption * WebUI * Plugin System * Much more...",
            "categories": [
                "File Management"
            ],
            "platform": "linux",
            "logo": "https://avatars2.githubusercontent.com/u/6733935?v=3&s=200",
            "image": "linuxserver/deluge:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "DELUGE_LOGLEVEL",
                    "label": "DELUGE_LOGLEVEL",
                    "default": "error",
                    "description": "set the loglevel output when running Deluge, default is info for deluged and warning for delgued-web"
                }
            ],
            "ports": [
                "8112:8112/tcp",
                "6881:6881/tcp",
                "6881:6881/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/deluge/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/deluge/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Digikam",
            "name": "Digikam",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/digikam/config</p>",
            "description": "digiKam: Professional Photo Management with the Power of Open Source",
            "categories": [
                "Photography"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
            "image": "linuxserver/digikam:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SUBFOLDER",
                    "label": "SUBFOLDER",
                    "default": "/",
                    "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
                },
                {
                    "name": "KEYBOARD",
                    "label": "KEYBOARD",
                    "default": "en-us-qwerty",
                    "description": "See the keyboard layouts section for more information and options."
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/digikam/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Dillinger",
            "name": "Dillinger",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/dillinger/config</p>",
            "description": "Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
            "categories": [
                "Development"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png",
            "image": "linuxserver/dillinger:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/dillinger/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Diskover",
            "name": "Diskover",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/diskover/config<br>mkdir -p /portainer/diskover/data</p>",
            "description": "Diskover is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
            "categories": [
                "Productivity"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
            "image": "linuxserver/diskover:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "ES_HOST",
                    "label": "ES_HOST",
                    "default": "elasticsearch",
                    "description": "ElasticSearch host (optional)"
                },
                {
                    "name": "ES_PORT",
                    "label": "ES_PORT",
                    "default": "9200",
                    "description": "ElasticSearch port (optional)"
                },
                {
                    "name": "ES_USER",
                    "label": "ES_USER",
                    "default": "elastic",
                    "description": "ElasticSearch username (optional)"
                },
                {
                    "name": "ES_PASS",
                    "label": "ES_PASS",
                    "default": "changeme",
                    "description": "ElasticSearch password (optional)"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/diskover/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/diskover/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Docker-compose",
            "name": "Docker-compose",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/docker-compose/config</p>",
            "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/docker-compose for details.",
            "platform": "linux",
            "logo": "",
            "image": "linuxserver/docker-compose:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/docker-compose/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Dokuwiki",
            "name": "Dokuwiki",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/dokuwiki/config</p>",
            "description": "Dokuwiki is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
            "categories": [
                "Productivity"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
            "image": "linuxserver/dokuwiki:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/dokuwiki/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Domoticz",
            "name": "Domoticz",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/domoticz/config</p>",
            "description": "Domoticz is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.",
            "categories": [
                "Automation"
            ],
            "platform": "linux",
            "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
            "image": "linuxserver/domoticz:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "WEBROOT",
                    "label": "WEBROOT",
                    "default": "domoticz",
                    "description": "Sets webroot to domoticz for usage with subfolder reverse proxy. Not needed unless reverse proxying."
                },
                {
                    "name": "DBASE",
                    "label": "DBASE",
                    "default": "<path to database>",
                    "description": "Sets path to database. Do not set unless you know what this does."
                }
            ],
            "ports": [
                "8080:8080/tcp",
                "6144:6144/tcp",
                "1443:1443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/domoticz/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Doplarr",
            "name": "Doplarr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/doplarr/config</p>",
            "description": "Doplarr is an *arr request bot for Discord.'",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png",
            "image": "linuxserver/doplarr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "DISCORD__TOKEN",
                    "label": "DISCORD__TOKEN",
                    "default": "",
                    "description": "Specify your discord bot token."
                },
                {
                    "name": "OVERSEERR__API",
                    "label": "OVERSEERR__API",
                    "default": "",
                    "description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr."
                },
                {
                    "name": "OVERSEERR__URL",
                    "label": "OVERSEERR__URL",
                    "default": "http://localhost:5055",
                    "description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr."
                },
                {
                    "name": "RADARR__API",
                    "label": "RADARR__API",
                    "default": "",
                    "description": "Specify your Radarr API key. Leave blank if using Overseerr."
                },
                {
                    "name": "RADARR__URL",
                    "label": "RADARR__URL",
                    "default": "http://localhost:7878",
                    "description": "Specify your Radarr URL. Leave blank if using Overseerr."
                },
                {
                    "name": "SONARR__API",
                    "label": "SONARR__API",
                    "default": "",
                    "description": "Specify your Sonarr API key. Leave blank if using Overseerr."
                },
                {
                    "name": "SONARR__URL",
                    "label": "SONARR__URL",
                    "default": "http://localhost:8989",
                    "description": "Specify your Sonarr URL. Leave blank if using Overseerr."
                },
                {
                    "name": "DISCORD__MAX_RESULTS",
                    "label": "DISCORD__MAX_RESULTS",
                    "default": "25",
                    "description": "Sets the maximum size of the search results selection"
                },
                {
                    "name": "DISCORD__REQUESTED_MSG_STYLE",
                    "label": "DISCORD__REQUESTED_MSG_STYLE",
                    "default": ":plain",
                    "description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none`"
                },
                {
                    "name": "SONARR__QUALITY_PROFILE",
                    "label": "SONARR__QUALITY_PROFILE",
                    "default": "",
                    "description": "The name of the quality profile to use by default for Sonarr"
                },
                {
                    "name": "RADARR__QUALITY_PROFILE",
                    "label": "RADARR__QUALITY_PROFILE",
                    "default": "",
                    "description": "The name of the quality profile to use by default for Radarr"
                },
                {
                    "name": "SONARR__ROOTFOLDER",
                    "label": "SONARR__ROOTFOLDER",
                    "default": "",
                    "description": "The root folder to use by default for Sonarr"
                },
                {
                    "name": "RADARR__ROOTFOLDER",
                    "label": "RADARR__ROOTFOLDER",
                    "default": "",
                    "description": "The root folder to use by default for Radarr"
                },
                {
                    "name": "SONARR__LANGUAGE_PROFILE",
                    "label": "SONARR__LANGUAGE_PROFILE",
                    "default": "",
                    "description": "The name of the language profile to use by default for Sonarr"
                },
                {
                    "name": "OVERSEERR__DEFAULT_ID",
                    "label": "OVERSEERR__DEFAULT_ID",
                    "default": "",
                    "description": "The Overseerr user id to use by default if there is no associated discord account for the requester"
                },
                {
                    "name": "PARTIAL_SEASONS",
                    "label": "PARTIAL_SEASONS",
                    "default": "true",
                    "description": "Sets whether users can request partial seasons."
                },
                {
                    "name": "LOG_LEVEL",
                    "label": "LOG_LEVEL",
                    "default": ":info",
                    "description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`"
                },
                {
                    "name": "JAVA_OPTS",
                    "label": "JAVA_OPTS",
                    "default": "",
                    "description": "For passing additional java options."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/doplarr/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Doublecommander",
            "name": "Doublecommander",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/doublecommander/config<br>mkdir -p /portainer/doublecommander/data</p>",
            "description": "Double Commander is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
            "categories": [
                "File Management"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
            "image": "linuxserver/doublecommander:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/doublecommander/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/doublecommander/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Duckdns",
            "name": "Duckdns",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/duckdns/config</p>",
            "description": "Duckdns is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
            "image": "linuxserver/duckdns:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SUBDOMAINS",
                    "label": "SUBDOMAINS",
                    "default": "subdomain1,subdomain2",
                    "description": "multiple subdomains allowed, comma separated, no spaces"
                },
                {
                    "name": "TOKEN",
                    "label": "TOKEN",
                    "default": "token",
                    "description": "DuckDNS token"
                },
                {
                    "name": "LOG_FILE",
                    "label": "LOG_FILE",
                    "default": "false",
                    "description": "Set to `true` to log to file (also need to map /config)."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/duckdns/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Duplicati",
            "name": "Duplicati",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/duplicati/config<br>mkdir -p /portainer/duplicati/backups<br>mkdir -p /portainer/duplicati/source</p>",
            "description": "Duplicati works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.",
            "platform": "linux",
            "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/duplicati-icon.png",
            "image": "linuxserver/duplicati:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CLI_ARGS",
                    "label": "CLI_ARGS",
                    "default": "",
                    "description": "Optionally specify any [CLI variables](https://duplicati.readthedocs.io/en/latest/07-other-command-line-utilities/) you want to launch the app with"
                }
            ],
            "ports": [
                "8200:8200/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/duplicati/config"
                },
                {
                    "container": "/backups",
                    "bind": "/portainer/duplicati/backups"
                },
                {
                    "container": "/source",
                    "bind": "/portainer/duplicati/source"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Emby",
            "name": "Emby",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/emby/config<br>mkdir -p /portainer/emby/data/tvshows<br>mkdir -p /portainer/emby/data/movies<br></p>",
            "description": "Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
            "categories": [
                "Home Media"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png",
            "image": "linuxserver/emby:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8096:8096/tcp",
                "8920:8920/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/emby/config"
                },
                {
                    "container": "/data/tvshows",
                    "bind": "/portainer/emby/data/tvshows"
                },
                {
                    "container": "/data/movies",
                    "bind": "/portainer/emby/data/movies"
                },
                {
                    "container": "/opt/vc/lib",
                    "bind": "/opt/vc/lib"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Embystat",
            "name": "Embystat",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/embystat/config</p>",
            "description": "Embystat is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png",
            "image": "linuxserver/embystat:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "6555:6555/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/embystat/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Emulatorjs",
            "name": "Emulatorjs",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/emulatorjs/config<br>mkdir -p /portainer/emulatorjs/data</p>",
            "description": "Emulatorjs - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png",
            "image": "linuxserver/emulatorjs:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SUBFOLDER",
                    "label": "SUBFOLDER",
                    "default": "/",
                    "description": "Specify a subfolder for reverse proxies IE '/FOLDER/'"
                }
            ],
            "ports": [
                "3000:3000/tcp",
                "80:80/tcp",
                "4001:4001/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/emulatorjs/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/emulatorjs/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Endlessh",
            "name": "Endlessh",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/endlessh/config</p>",
            "description": "Endlessh is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
            "platform": "linux",
            "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
            "image": "linuxserver/endlessh:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "MSDELAY",
                    "label": "MSDELAY",
                    "default": "10000",
                    "description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines."
                },
                {
                    "name": "MAXLINES",
                    "label": "MAXLINES",
                    "default": "32",
                    "description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes."
                },
                {
                    "name": "MAXCLIENTS",
                    "label": "MAXCLIENTS",
                    "default": "4096",
                    "description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue."
                },
                {
                    "name": "LOGFILE",
                    "label": "LOGFILE",
                    "default": "false",
                    "description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/config/logs/endlessh` (`/config` needs to be mapped)."
                },
                {
                    "name": "BINDFAMILY",
                    "label": "BINDFAMILY",
                    "default": "",
                    "description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both."
                }
            ],
            "ports": [
                "22:2222/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/endlessh/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Fail2ban",
            "name": "Fail2ban",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/fail2ban/config<br>mkdir -p /portainer/fail2ban/var/log:ro<br>mkdir -p /portainer/fail2ban/remotelogs/airsonic:ro<br>mkdir -p /portainer/fail2ban/remotelogs/apache2:ro<br>mkdir -p /portainer/fail2ban/remotelogs/authelia:ro<br>mkdir -p /portainer/fail2ban/remotelogs/emby:ro<br>mkdir -p /portainer/fail2ban/remotelogs/filebrowser:ro<br>mkdir -p /portainer/fail2ban/remotelogs/homeassistant:ro<br>mkdir -p /portainer/fail2ban/remotelogs/lighttpd:ro<br>mkdir -p /portainer/fail2ban/remotelogs/nextcloud:ro<br>mkdir -p /portainer/fail2ban/remotelogs/nginx:ro<br>mkdir -p /portainer/fail2ban/remotelogs/nzbget:ro<br>mkdir -p /portainer/fail2ban/remotelogs/overseerr:ro<br>mkdir -p /portainer/fail2ban/remotelogs/prowlarr:ro<br>mkdir -p /portainer/fail2ban/remotelogs/radarr:ro<br>mkdir -p /portainer/fail2ban/remotelogs/sabnzbd:ro<br>mkdir -p /portainer/fail2ban/remotelogs/sonarr:ro<br>mkdir -p /portainer/fail2ban/remotelogs/unificontroller:ro<br>mkdir -p /portainer/fail2ban/remotelogs/vaultwarden:ro</p>",
            "description": "Fail2ban is a daemon to ban hosts that cause multiple authentication errors.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/fail2ban-logo.png",
            "image": "linuxserver/fail2ban:latest",
            "network": "host",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/fail2ban/config"
                },
                {
                    "container": "/var/log:ro",
                    "bind": "/portainer/fail2ban/var/log:ro"
                },
                {
                    "container": "/remotelogs/airsonic:ro",
                    "bind": "/portainer/fail2ban/remotelogs/airsonic:ro"
                },
                {
                    "container": "/remotelogs/apache2:ro",
                    "bind": "/portainer/fail2ban/remotelogs/apache2:ro"
                },
                {
                    "container": "/remotelogs/authelia:ro",
                    "bind": "/portainer/fail2ban/remotelogs/authelia:ro"
                },
                {
                    "container": "/remotelogs/emby:ro",
                    "bind": "/portainer/fail2ban/remotelogs/emby:ro"
                },
                {
                    "container": "/remotelogs/filebrowser:ro",
                    "bind": "/portainer/fail2ban/remotelogs/filebrowser:ro"
                },
                {
                    "container": "/remotelogs/homeassistant:ro",
                    "bind": "/portainer/fail2ban/remotelogs/homeassistant:ro"
                },
                {
                    "container": "/remotelogs/lighttpd:ro",
                    "bind": "/portainer/fail2ban/remotelogs/lighttpd:ro"
                },
                {
                    "container": "/remotelogs/nextcloud:ro",
                    "bind": "/portainer/fail2ban/remotelogs/nextcloud:ro"
                },
                {
                    "container": "/remotelogs/nginx:ro",
                    "bind": "/portainer/fail2ban/remotelogs/nginx:ro"
                },
                {
                    "container": "/remotelogs/nzbget:ro",
                    "bind": "/portainer/fail2ban/remotelogs/nzbget:ro"
                },
                {
                    "container": "/remotelogs/overseerr:ro",
                    "bind": "/portainer/fail2ban/remotelogs/overseerr:ro"
                },
                {
                    "container": "/remotelogs/prowlarr:ro",
                    "bind": "/portainer/fail2ban/remotelogs/prowlarr:ro"
                },
                {
                    "container": "/remotelogs/radarr:ro",
                    "bind": "/portainer/fail2ban/remotelogs/radarr:ro"
                },
                {
                    "container": "/remotelogs/sabnzbd:ro",
                    "bind": "/portainer/fail2ban/remotelogs/sabnzbd:ro"
                },
                {
                    "container": "/remotelogs/sonarr:ro",
                    "bind": "/portainer/fail2ban/remotelogs/sonarr:ro"
                },
                {
                    "container": "/remotelogs/unificontroller:ro",
                    "bind": "/portainer/fail2ban/remotelogs/unificontroller:ro"
                },
                {
                    "container": "/remotelogs/vaultwarden:ro",
                    "bind": "/portainer/fail2ban/remotelogs/vaultwarden:ro"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Feed2toot",
            "name": "Feed2toot",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/feed2toot/config</p>",
            "description": "Feed2toot automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/feed2toot-banner.png",
            "image": "linuxserver/feed2toot:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "FEED_LIMIT",
                    "label": "FEED_LIMIT",
                    "default": "5",
                    "description": "Limit number of RSS entries published at each execution."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/feed2toot/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Ffmpeg",
            "name": "Ffmpeg",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/ffmpeg/config</p>",
            "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
            "platform": "linux",
            "logo": "",
            "image": "linuxserver/ffmpeg:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/ffmpeg/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Filezilla",
            "name": "Filezilla",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/filezilla/config</p>",
            "description": "FIleZilla Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
            "image": "linuxserver/filezilla:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/filezilla/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Firefox",
            "name": "Firefox",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/firefox/config</p>",
            "description": "Firefox Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
            "image": "linuxserver/firefox:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/firefox/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Fleet",
            "name": "Fleet",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/fleet/config</p>",
            "description": "Fleet provides an online web interface which displays a set of maintained images from one or more owned repositories.",
            "platform": "linux",
            "logo": "",
            "image": "linuxserver/fleet:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "fleet_admin_authentication_type",
                    "label": "fleet_admin_authentication_type",
                    "default": "DATABASE",
                    "description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES."
                },
                {
                    "name": "fleet_database_url",
                    "label": "fleet_database_url",
                    "default": "jdbc:mariadb://<url>:3306/fleet",
                    "description": "The full JDBC connection string to the Fleet database"
                },
                {
                    "name": "fleet_database_username",
                    "label": "fleet_database_username",
                    "default": "fleet_user",
                    "description": "The username with the relevant GRANT permissions for the database"
                },
                {
                    "name": "fleet_database_password",
                    "label": "fleet_database_password",
                    "default": "dbuserpassword",
                    "description": "The database user's password."
                },
                {
                    "name": "fleet_admin_secret",
                    "label": "fleet_admin_secret",
                    "default": "randomstring",
                    "description": "A string used as part of the password key derivation process."
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/fleet/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Foldingathome",
            "name": "Foldingathome",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/foldingathome/config</p>",
            "description": "Folding@home is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.",
            "platform": "linux",
            "logo": "https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png",
            "image": "linuxserver/foldingathome:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "7396:7396/tcp",
                "36330:36330/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/foldingathome/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Freshrss",
            "name": "Freshrss",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/freshrss/config</p>",
            "description": "Freshrss is a free, self-hostable aggregator for rss feeds.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-banner.png",
            "image": "linuxserver/freshrss:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/freshrss/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Grav",
            "name": "Grav",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/grav/config</p>",
            "description": "Grav is a Fast, Simple, and Flexible, file-based Web-platform.",
            "categories": [
                "Web Platform"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png",
            "image": "linuxserver/grav:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/grav/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Grocy",
            "name": "Grocy",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/grocy/config</p>",
            "description": "Grocy is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility. Keep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging with this proudly Open Source tool For more information on grocy visit their website and check it out: https://grocy.info",
            "platform": "linux",
            "logo": "https://grocy.info/img/grocy_logo.svg",
            "image": "linuxserver/grocy:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "9283:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/grocy/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Guacd",
            "name": "Guacd",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
            "description": "Guacd - Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. This container is only the backend server component needed to use The official or 3rd party HTML5 frontends.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd.png",
            "image": "linuxserver/guacd:latest",
            "ports": [
                "4822:4822/tcp"
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Habridge",
            "name": "Habridge",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/habridge/config</p>",
            "description": "Habridge emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as 'On', 'Off' and 'brightness' commands of the hue protocol. This bridge can control most devices that have a distinct API. In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge. This bridge was built to help put the Internet of Things together. For more information about how to use this software have a look at their Wiki https://github.com/bwssytems/ha-bridge/wiki",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico",
            "image": "linuxserver/habridge:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "SEC_KEY",
                    "label": "SEC_KEY",
                    "default": "<Your Key To Encrypt Security Data>",
                    "description": "Key used to secure communication."
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8080:8080/tcp",
                "50000:50000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/habridge/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Headphones",
            "name": "Headphones",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/headphones/config<br>mkdir -p /portainer/headphones/downloads<br>mkdir -p /portainer/headphones/music</p>",
            "description": "Headphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, \u00b5Torrent and Blackhole.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-banner.png",
            "image": "linuxserver/headphones:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8181:8181/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/headphones/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/headphones/downloads"
                },
                {
                    "container": "/music",
                    "bind": "/portainer/headphones/music"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Healthchecks",
            "name": "Healthchecks",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/healthchecks/config</p>",
            "description": "Healthchecks is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png",
            "image": "linuxserver/healthchecks:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "SITE_ROOT",
                    "label": "SITE_ROOT",
                    "default": "",
                    "description": "The site's top-level URL and the port it listens to if differrent than 80 or 443 (e.g., https://healthchecks.example.com:8000)"
                },
                {
                    "name": "SITE_NAME",
                    "label": "SITE_NAME",
                    "default": "",
                    "description": "The site's name (e.g., 'Example Corp HealthChecks')"
                },
                {
                    "name": "DEFAULT_FROM_EMAIL",
                    "label": "DEFAULT_FROM_EMAIL",
                    "default": "",
                    "description": "From email for alerts"
                },
                {
                    "name": "EMAIL_HOST",
                    "label": "EMAIL_HOST",
                    "default": "",
                    "description": "SMTP host"
                },
                {
                    "name": "EMAIL_PORT",
                    "label": "EMAIL_PORT",
                    "default": "",
                    "description": "SMTP port"
                },
                {
                    "name": "EMAIL_HOST_USER",
                    "label": "EMAIL_HOST_USER",
                    "default": "",
                    "description": "SMTP user"
                },
                {
                    "name": "EMAIL_HOST_PASSWORD",
                    "label": "EMAIL_HOST_PASSWORD",
                    "default": "",
                    "description": "SMTP password"
                },
                {
                    "name": "EMAIL_USE_TLS",
                    "label": "EMAIL_USE_TLS",
                    "default": "",
                    "description": "Use TLS for SMTP (`True` or `False`)"
                },
                {
                    "name": "SUPERUSER_EMAIL",
                    "label": "SUPERUSER_EMAIL",
                    "default": "",
                    "description": "Superuser email"
                },
                {
                    "name": "SUPERUSER_PASSWORD",
                    "label": "SUPERUSER_PASSWORD",
                    "default": "",
                    "description": "Superuser password"
                },
                {
                    "name": "REGENERATE_SETTINGS",
                    "label": "REGENERATE_SETTINGS",
                    "default": "",
                    "description": "Defaults to False. Set to True to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file."
                },
                {
                    "name": "ALLOWED_HOSTS",
                    "label": "ALLOWED_HOSTS",
                    "default": "",
                    "description": "Array of valid hostnames for the server `['test.com','test2.com']` (default: `['*']`)"
                },
                {
                    "name": "APPRISE_ENABLED",
                    "label": "APPRISE_ENABLED",
                    "default": "",
                    "description": "Defaults to False. A boolean that turns on/off the Apprise integration (https://github.com/caronc/apprise)"
                },
                {
                    "name": "DEBUG",
                    "label": "DEBUG",
                    "default": "",
                    "description": "Defaults to True. Debug mode relaxes CSRF protections and increases logging verbosity but should be disabled for production instances as it will impact performance and security."
                },
                {
                    "name": "INTEGRATIONS_ALLOW_PRIVATE_IPS",
                    "label": "INTEGRATIONS_ALLOW_PRIVATE_IPS",
                    "default": "",
                    "description": "Defaults to False. Set to True to allow integrations to connect to private IP addresses."
                },
                {
                    "name": "PING_EMAIL_DOMAIN",
                    "label": "PING_EMAIL_DOMAIN",
                    "default": "",
                    "description": "The domain to use for generating ping email addresses."
                },
                {
                    "name": "SECRET_KEY",
                    "label": "SECRET_KEY",
                    "default": "",
                    "description": "A secret key used for cryptographic signing. Will generate a secure value if one is not supplied"
                },
                {
                    "name": "SITE_LOGO_URL",
                    "label": "SITE_LOGO_URL",
                    "default": "",
                    "description": "Full URL to custom site logo"
                }
            ],
            "ports": [
                "8000:8000/tcp",
                "2525:2525/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/healthchecks/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Hedgedoc",
            "name": "Hedgedoc",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/hedgedoc/config</p>",
            "description": "HedgeDoc gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
            "categories": [
                "Documentation"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png",
            "image": "linuxserver/hedgedoc:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "DB_HOST",
                    "label": "DB_HOST",
                    "default": "<hostname or ip>",
                    "description": "Host address of mysql database"
                },
                {
                    "name": "DB_PORT",
                    "label": "DB_PORT",
                    "default": "3306",
                    "description": "Port to access mysql database default is 3306"
                },
                {
                    "name": "DB_USER",
                    "label": "DB_USER",
                    "default": "hedgedoc",
                    "description": "Database user"
                },
                {
                    "name": "DB_PASS",
                    "label": "DB_PASS",
                    "default": "<secret password>",
                    "description": "Database password"
                },
                {
                    "name": "DB_NAME",
                    "label": "DB_NAME",
                    "default": "hedgedoc",
                    "description": "Database name"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CMD_DOMAIN",
                    "label": "CMD_DOMAIN",
                    "default": "localhost",
                    "description": "The address the gui will be accessed at (ie. `192.168.1.1` or `hedgedoc.domain.com`)."
                },
                {
                    "name": "CMD_URL_ADDPORT",
                    "label": "CMD_URL_ADDPORT",
                    "default": "false",
                    "description": "Set to `true` if using a port other than `80` or `443`."
                },
                {
                    "name": "CMD_PROTOCOL_USESSL",
                    "label": "CMD_PROTOCOL_USESSL",
                    "default": "false",
                    "description": "Set to `true` if accessing over https via reverse proxy."
                },
                {
                    "name": "CMD_PORT",
                    "label": "CMD_PORT",
                    "default": "3000",
                    "description": "If you wish to access hedgedoc at a port different than 80, 443 or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change the port mapping accordingly (5000:5000)."
                },
                {
                    "name": "CMD_ALLOW_ORIGIN",
                    "label": "CMD_ALLOW_ORIGIN",
                    "default": "['localhost']",
                    "description": "Comma-separated list of allowed hostnames"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/hedgedoc/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Heimdall",
            "name": "Heimdall",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/heimdall/config</p>",
            "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way. Simplicity is the key to Heimdall. Why not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-banner.png",
            "image": "linuxserver/heimdall:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/heimdall/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Homeassistant",
            "name": "Homeassistant",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/homeassistant/config</p>",
            "description": "Home Assistant Core - Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
            "categories": [
                "Home Automation"
            ],
            "platform": "linux",
            "logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
            "image": "linuxserver/homeassistant:latest",
            "network": "host",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8123:8123/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/homeassistant/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Htpcmanager",
            "name": "Htpcmanager",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/htpcmanager/config</p>",
            "description": "Htpcmanager is a front end for many htpc related applications.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png",
            "image": "linuxserver/htpcmanager:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8085:8085/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/htpcmanager/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Ipfs",
            "name": "Ipfs",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/ipfs/config</p>",
            "description": "Ipfs - A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.",
            "categories": [
                "P2P"
            ],
            "platform": "linux",
            "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Ipfs-logo-1000-ice-text.png/480px-Ipfs-logo-1000-ice-text.png",
            "image": "linuxserver/ipfs:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp",
                "4001:4001/tcp",
                "5001:5001/tcp",
                "8080:8080/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/ipfs/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Jackett",
            "name": "Jackett",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/jackett/config<br>mkdir -p /portainer/jackett/downloads</p>",
            "description": "Jackett works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-banner.png",
            "image": "linuxserver/jackett:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "AUTO_UPDATE",
                    "label": "AUTO_UPDATE",
                    "default": "true",
                    "description": "Allow Jackett to update inside of the container (currently recommended by Jackett and enabled by default)"
                },
                {
                    "name": "RUN_OPTS",
                    "label": "RUN_OPTS",
                    "default": "<run options here>",
                    "description": "Optionally specify additional arguments to be passed."
                }
            ],
            "ports": [
                "9117:9117/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/jackett/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/jackett/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Jellyfin",
            "name": "Jellyfin",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/jellyfin/config<br>mkdir -p /portainer/jellyfin/data/tvshows<br>mkdir -p /portainer/jellyfin/data/movies</p>",
            "description": "Jellyfin is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true",
            "image": "linuxserver/jellyfin:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "JELLYFIN_PublishedServerUrl",
                    "label": "JELLYFIN_PublishedServerUrl",
                    "default": "192.168.0.5",
                    "description": "Set the autodiscovery response domain or IP address."
                }
            ],
            "ports": [
                "8096:8096/tcp",
                "8920:8920/tcp",
                "7359:7359/udp",
                "1900:1900/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/jellyfin/config"
                },
                {
                    "container": "/data/tvshows",
                    "bind": "/portainer/jellyfin/data/tvshows"
                },
                {
                    "container": "/data/movies",
                    "bind": "/portainer/jellyfin/data/movies"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Jenkins-builder",
            "name": "Jenkins-builder",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/jenkins-builder/config</p>",
            "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/jenkins-builder for details.",
            "platform": "linux",
            "logo": "",
            "image": "linuxserver/jenkins-builder:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/jenkins-builder/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Kasm",
            "name": "Kasm",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/kasm/opt<br>mkdir -p /portainer/kasm/profiles<br><br></p>",
            "description": "Kasm Workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections. The rendering of the graphical-based containers is powered by the open-source project KasmVNC.",
            "platform": "linux",
            "logo": "https://kasm-ci.s3.amazonaws.com/kasm_wide.png",
            "image": "linuxserver/kasm:latest",
            "privileged": true,
            "env": [
                {
                    "name": "KASM_PORT",
                    "label": "KASM_PORT",
                    "default": "443",
                    "description": "Specify the port you bind to the outside for Kasm Workspaces."
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "DOCKER_HUB_USERNAME",
                    "label": "DOCKER_HUB_USERNAME",
                    "default": "USER",
                    "description": "Optionally specify a DockerHub Username to pull private images."
                },
                {
                    "name": "DOCKER_HUB_PASSWORD",
                    "label": "DOCKER_HUB_PASSWORD",
                    "default": "PASS",
                    "description": "Optionally specify a DockerHub password to pull private images."
                }
            ],
            "ports": [
                "3000:3000/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/opt",
                    "bind": "/portainer/kasm/opt"
                },
                {
                    "container": "/profiles",
                    "bind": "/portainer/kasm/profiles"
                },
                {
                    "container": "/dev/input",
                    "bind": "/dev/input"
                },
                {
                    "container": "/run/udev/data",
                    "bind": "/run/udev/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Kdenlive",
            "name": "Kdenlive",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/kdenlive/config</p>",
            "description": "Kdenlive is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png",
            "image": "linuxserver/kdenlive:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SUBFOLDER",
                    "label": "SUBFOLDER",
                    "default": "/",
                    "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
                },
                {
                    "name": "KEYBOARD",
                    "label": "KEYBOARD",
                    "default": "en-us-qwerty",
                    "description": "See the keyboard layouts section for more information and options."
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/kdenlive/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Lazylibrarian",
            "name": "Lazylibrarian",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/lazylibrarian/config<br>mkdir -p /portainer/lazylibrarian/downloads<br>mkdir -p /portainer/lazylibrarian/books</p>",
            "description": "Lazylibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. This container is based on the DobyTang fork.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png",
            "image": "linuxserver/lazylibrarian:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "DOCKER_MODS",
                    "label": "DOCKER_MODS",
                    "default": "linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg",
                    "description": "Allows additional functionality to be added, e.g. the Calibredb import program (optional, more info below)"
                }
            ],
            "ports": [
                "5299:5299/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/lazylibrarian/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/lazylibrarian/downloads"
                },
                {
                    "container": "/books",
                    "bind": "/portainer/lazylibrarian/books"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Ldap-auth",
            "name": "Ldap-auth",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
            "description": "Ldap-auth software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user\u2019s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
            "platform": "linux",
            "logo": "https://jumpcloud.com/wp-content/uploads/2016/12/LDAP_Logo-1420591101.jpg",
            "image": "linuxserver/ldap-auth:latest",
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "FERNETKEY",
                    "label": "FERNETKEY",
                    "default": "",
                    "description": "Optionally define a custom fernet key, has to be base64-encoded 32-byte (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)"
                },
                {
                    "name": "CERTFILE",
                    "label": "CERTFILE",
                    "default": "",
                    "description": "Point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon"
                },
                {
                    "name": "KEYFILE",
                    "label": "KEYFILE",
                    "default": "",
                    "description": "Point this to the private key file, matching the certificate file referred to in CERTFILE"
                }
            ],
            "ports": [
                "8888:8888/tcp",
                "9000:9000/tcp"
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Libreoffice",
            "name": "Libreoffice",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/libreoffice/config</p>",
            "description": "LibreOffice is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
            "categories": [
                "Productivity"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
            "image": "linuxserver/libreoffice:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/libreoffice/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Librespeed",
            "name": "Librespeed",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/librespeed/config</p>",
            "description": "Librespeed is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/librespeed/speedtest/master/.logo/logo3.png",
            "image": "linuxserver/librespeed:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PASSWORD",
                    "label": "PASSWORD",
                    "default": "PASSWORD",
                    "description": "Set the password for the results database."
                },
                {
                    "name": "CUSTOM_RESULTS",
                    "label": "CUSTOM_RESULTS",
                    "default": "false",
                    "description": "(optional) set to `true` to enable custom results page in `/config/www/results/index.php`."
                },
                {
                    "name": "DB_TYPE",
                    "label": "DB_TYPE",
                    "default": "sqlite",
                    "description": "Defaults to `sqlite`, can also be set to `mysql` or `postgresql`."
                },
                {
                    "name": "DB_NAME",
                    "label": "DB_NAME",
                    "default": "DB_NAME",
                    "description": "Database name. Required for mysql and pgsql."
                },
                {
                    "name": "DB_HOSTNAME",
                    "label": "DB_HOSTNAME",
                    "default": "DB_HOSTNAME",
                    "description": "Database address. Required for mysql and pgsql."
                },
                {
                    "name": "DB_USERNAME",
                    "label": "DB_USERNAME",
                    "default": "DB_USERNAME",
                    "description": "Database username. Required for mysql and pgsql."
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "DB_PASSWORD",
                    "default": "DB_PASSWORD",
                    "description": "Database password. Required for mysql and pgsql."
                },
                {
                    "name": "DB_PORT",
                    "label": "DB_PORT",
                    "default": "DB_PORT",
                    "description": "Database port. Required for mysql."
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/librespeed/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Lidarr",
            "name": "Lidarr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/lidarr/config<br>mkdir -p /portainer/lidarr/music<br>mkdir -p /portainer/lidarr/downloads</p>",
            "description": "Lidarr is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
            "platform": "linux",
            "logo": "https://github.com/lidarr/Lidarr/raw/develop/Logo/400.png",
            "image": "linuxserver/lidarr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8686:8686/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/lidarr/config"
                },
                {
                    "container": "/music",
                    "bind": "/portainer/lidarr/music"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/lidarr/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Limnoria",
            "name": "Limnoria",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/limnoria/config</p>",
            "description": "Limnoria A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png",
            "image": "linuxserver/limnoria:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/limnoria/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Lychee",
            "name": "Lychee",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/lychee/config<br>mkdir -p /portainer/lychee/pictures</p>",
            "description": "Lychee is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.' ### UPGRADE WARNING Please note that the v4 upgrade process resets ALL password-protected albums. Any albums that were made public with a password will need to be re-secured.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png",
            "image": "linuxserver/lychee:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "DB_HOST",
                    "label": "DB_HOST",
                    "default": "mariadb",
                    "description": "for specifying the database host"
                },
                {
                    "name": "DB_PORT",
                    "label": "DB_PORT",
                    "default": "3306",
                    "description": "for specifying the database port"
                },
                {
                    "name": "DB_USERNAME",
                    "label": "DB_USERNAME",
                    "default": "lychee",
                    "description": "for specifying the database user"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "DB_PASSWORD",
                    "default": "dbpassword",
                    "description": "for specifying the database password"
                },
                {
                    "name": "DB_DATABASE",
                    "label": "DB_DATABASE",
                    "default": "lychee",
                    "description": "for specifying the database to be used"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/lychee/config"
                },
                {
                    "container": "/pictures",
                    "bind": "/portainer/lychee/pictures"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Mariadb",
            "name": "Mariadb",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/mariadb/config</p>",
            "description": "Mariadb is one of the most popular database servers. Made by the original developers of MySQL.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-git.png",
            "image": "linuxserver/mariadb:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "label": "MYSQL_ROOT_PASSWORD",
                    "default": "ROOT_ACCESS_PASSWORD",
                    "description": "Set this to root password for installation (minimum 4 characters & non-alphanumeric passwords must be properly escaped)."
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "MYSQL_DATABASE",
                    "label": "MYSQL_DATABASE",
                    "default": "USER_DB_NAME",
                    "description": "Specify the name of a database to be created on image startup."
                },
                {
                    "name": "MYSQL_USER",
                    "label": "MYSQL_USER",
                    "default": "MYSQL_USER",
                    "description": "This user will have superuser access to the database specified by MYSQL_DATABASE (do not use root here)."
                },
                {
                    "name": "MYSQL_PASSWORD",
                    "label": "MYSQL_PASSWORD",
                    "default": "DATABASE_PASSWORD",
                    "description": "Set this to the password you want to use for you MYSQL_USER (minimum 4 characters & non-alphanumeric passwords must be properly escaped)."
                },
                {
                    "name": "REMOTE_SQL",
                    "label": "REMOTE_SQL",
                    "default": "http://URL1/your.sql,https://URL2/your.sql",
                    "description": "Set this to ingest sql files from an http/https endpoint (comma seperated array)."
                }
            ],
            "ports": [
                "3306:3306/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/mariadb/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Mastodon",
            "name": "Mastodon",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/mastodon/config</p>",
            "description": "Mastodon is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..",
            "categories": [
                "Social"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png",
            "image": "linuxserver/mastodon:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "LOCAL_DOMAIN",
                    "label": "LOCAL_DOMAIN",
                    "default": "example.com",
                    "description": "This is the unique identifier of your server in the network. It cannot be safely changed later."
                },
                {
                    "name": "REDIS_HOST",
                    "label": "REDIS_HOST",
                    "default": "redis",
                    "description": "Redis server hostname"
                },
                {
                    "name": "REDIS_PORT",
                    "label": "REDIS_PORT",
                    "default": "6379",
                    "description": "Redis port"
                },
                {
                    "name": "DB_HOST",
                    "label": "DB_HOST",
                    "default": "db",
                    "description": "Postgres database hostname"
                },
                {
                    "name": "DB_USER",
                    "label": "DB_USER",
                    "default": "mastodon",
                    "description": "Postgres username"
                },
                {
                    "name": "DB_NAME",
                    "label": "DB_NAME",
                    "default": "mastodon",
                    "description": "Postgres db name"
                },
                {
                    "name": "DB_PASS",
                    "label": "DB_PASS",
                    "default": "mastodon",
                    "description": "Postgres password"
                },
                {
                    "name": "DB_PORT",
                    "label": "DB_PORT",
                    "default": "5432",
                    "description": "Portgres port"
                },
                {
                    "name": "ES_ENABLED",
                    "label": "ES_ENABLED",
                    "default": "false",
                    "description": "Enable or disable Elasticsearch (requires a separate ES instance)"
                },
                {
                    "name": "SECRET_KEY_BASE",
                    "label": "SECRET_KEY_BASE",
                    "default": "",
                    "description": "Browser session secret. Changing it will break all active browser sessions."
                },
                {
                    "name": "OTP_SECRET",
                    "label": "OTP_SECRET",
                    "default": "",
                    "description": "MFA secret. Changing it will break two-factor authentication."
                },
                {
                    "name": "VAPID_PRIVATE_KEY",
                    "label": "VAPID_PRIVATE_KEY",
                    "default": "",
                    "description": "Push notification private key. Changing it will break push notifications."
                },
                {
                    "name": "VAPID_PUBLIC_KEY",
                    "label": "VAPID_PUBLIC_KEY",
                    "default": "",
                    "description": "Push notification public key. Changing it will break push notifications."
                },
                {
                    "name": "SMTP_SERVER",
                    "label": "SMTP_SERVER",
                    "default": "mail.example.com",
                    "description": "SMTP server for email notifications"
                },
                {
                    "name": "SMTP_PORT",
                    "label": "SMTP_PORT",
                    "default": "25",
                    "description": "SMTP server port"
                },
                {
                    "name": "SMTP_LOGIN",
                    "label": "SMTP_LOGIN",
                    "default": "",
                    "description": "SMTP username"
                },
                {
                    "name": "SMTP_PASSWORD",
                    "label": "SMTP_PASSWORD",
                    "default": "",
                    "description": "SMTP password"
                },
                {
                    "name": "SMTP_FROM_ADDRESS",
                    "label": "SMTP_FROM_ADDRESS",
                    "default": "notifications@example.com",
                    "description": "From address for emails send from Mastodon"
                },
                {
                    "name": "S3_ENABLED",
                    "label": "S3_ENABLED",
                    "default": "false",
                    "description": "Enable or disable S3 storage of uploaded files"
                },
                {
                    "name": "WEB_DOMAIN",
                    "label": "WEB_DOMAIN",
                    "default": "mastodon.example.com",
                    "description": "This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See [https://docs.joinmastodon.org/admin/config/#basic](https://docs.joinmastodon.org/admin/config/#basic)"
                },
                {
                    "name": "ES_HOST",
                    "label": "ES_HOST",
                    "default": "es",
                    "description": "Elasticsearch server hostname"
                },
                {
                    "name": "ES_PORT",
                    "label": "ES_PORT",
                    "default": "9200",
                    "description": "Elasticsearch port"
                },
                {
                    "name": "ES_USER",
                    "label": "ES_USER",
                    "default": "elastic",
                    "description": "Elasticsearch username"
                },
                {
                    "name": "ES_PASS",
                    "label": "ES_PASS",
                    "default": "elastic",
                    "description": "Elasticsearch password"
                },
                {
                    "name": "S3_BUCKET",
                    "label": "S3_BUCKET",
                    "default": "",
                    "description": "S3 bucket hostname"
                },
                {
                    "name": "AWS_ACCESS_KEY_ID",
                    "label": "AWS_ACCESS_KEY_ID",
                    "default": "",
                    "description": "S3 bucket access key ID"
                },
                {
                    "name": "AWS_SECRET_ACCESS_KEY",
                    "label": "AWS_SECRET_ACCESS_KEY",
                    "default": "",
                    "description": "S3 bucket secret access key"
                },
                {
                    "name": "S3_ALIAS_HOST",
                    "label": "S3_ALIAS_HOST",
                    "default": "",
                    "description": "Alternate hostname for object fetching if you are front the S3 connections."
                },
                {
                    "name": "SIDEKIQ_ONLY",
                    "label": "SIDEKIQ_ONLY",
                    "default": "false",
                    "description": "Only run the sidekiq service in this container instance. For large scale instances that need better queue handling."
                },
                {
                    "name": "SIDEKIQ_QUEUE",
                    "label": "SIDEKIQ_QUEUE",
                    "default": "",
                    "description": "The name of the sidekiq queue to run in this container. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-queues)."
                },
                {
                    "name": "SIDEKIQ_DEFAULT",
                    "label": "SIDEKIQ_DEFAULT",
                    "default": "false",
                    "description": "Set to `true` on the main container if you're running additional sidekiq instances. It will run the `default` queue."
                },
                {
                    "name": "SIDEKIQ_THREADS",
                    "label": "SIDEKIQ_THREADS",
                    "default": "5",
                    "description": "The number of threads for sidekiq to use. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
                },
                {
                    "name": "DB_POOL",
                    "label": "DB_POOL",
                    "default": "5",
                    "description": "The size of the DB connection pool, must be *at least* the same as `SIDEKIQ_THREADS`. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads)."
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/mastodon/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Medusa",
            "name": "Medusa",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/medusa/config<br>mkdir -p /portainer/medusa/downloads<br>mkdir -p /portainer/medusa/tv</p>",
            "description": "Medusa is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png",
            "image": "linuxserver/medusa:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8081:8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/medusa/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/medusa/downloads"
                },
                {
                    "container": "/tv",
                    "bind": "/portainer/medusa/tv"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Minetest",
            "name": "Minetest",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/minetest/config/.minetest</p>",
            "description": "Minetest (server) is a near-infinite-world block sandbox game and a game engine, inspired by InfiniMiner, Minecraft, and the like.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
            "image": "linuxserver/minetest:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CLI_ARGS",
                    "label": "CLI_ARGS",
                    "default": "'--gameid minetest --port 30000'",
                    "description": "Optionally specify any [CLI variables](https://wiki.minetest.net/Command_line) you want to launch the app with"
                }
            ],
            "ports": [
                "30000:30000/udp"
            ],
            "volumes": [
                {
                    "container": "/config/.minetest",
                    "bind": "/portainer/minetest/config/.minetest"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Minisatip",
            "name": "Minisatip",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/minisatip/config</p>",
            "description": "Minisatip is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png",
            "image": "linuxserver/minisatip:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "RUN_OPTS",
                    "label": "RUN_OPTS",
                    "default": "",
                    "description": "Specify specific run params for minisatip"
                }
            ],
            "ports": [
                "8875:8875/tcp",
                "554:554/tcp",
                "1900:1900/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/minisatip/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Mstream",
            "name": "Mstream",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/mstream/config<br>mkdir -p /portainer/mstream/music</p>",
            "description": "Mstream is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream-icon.png",
            "image": "linuxserver/mstream:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/mstream/config"
                },
                {
                    "container": "/music",
                    "bind": "/portainer/mstream/music"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Mylar3",
            "name": "Mylar3",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/mylar3/config<br>mkdir -p /portainer/mylar3/comics<br>mkdir -p /portainer/mylar3/downloads</p>",
            "description": "Mylar3 is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
            "image": "linuxserver/mylar3:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                }
            ],
            "ports": [
                "8090:8090/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/mylar3/config"
                },
                {
                    "container": "/comics",
                    "bind": "/portainer/mylar3/comics"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/mylar3/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Mysql-workbench",
            "name": "Mysql-workbench",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/mysql-workbench/config</p>",
            "description": "MySQL Workbench is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
            "image": "linuxserver/mysql-workbench:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/mysql-workbench/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Nano",
            "name": "Nano",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/nano/config</p>",
            "description": "Nano is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.",
            "platform": "linux",
            "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
            "image": "linuxserver/nano:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PEER_HOST",
                    "label": "PEER_HOST",
                    "default": "localhost",
                    "description": "Default peer host (can be overidden with an array by command line options)"
                },
                {
                    "name": "LIVE_GENESIS_PUB",
                    "label": "LIVE_GENESIS_PUB",
                    "default": "GENESIS_PUBLIC",
                    "description": "Genesis block public key"
                },
                {
                    "name": "LIVE_GENESIS_ACCOUNT",
                    "label": "LIVE_GENESIS_ACCOUNT",
                    "default": "nano_xxxxxx",
                    "description": "Genesis block account"
                },
                {
                    "name": "LIVE_GENESIS_WORK",
                    "label": "LIVE_GENESIS_WORK",
                    "default": "WORK_FOR_BLOCK",
                    "description": "Genesis block proof of work"
                },
                {
                    "name": "LIVE_GENESIS_SIG",
                    "label": "LIVE_GENESIS_SIG",
                    "default": "BLOCK_SIGNATURE",
                    "description": "Genesis block signature"
                },
                {
                    "name": "CLI_OPTIONS",
                    "label": "CLI_OPTIONS",
                    "default": "--config node.enable_voting=true",
                    "description": "Node run command cli args"
                },
                {
                    "name": "LMDB_BOOTSTRAP_URL",
                    "label": "LMDB_BOOTSTRAP_URL",
                    "default": "http://example.com/Nano_64_version_20.7z",
                    "description": "HTTP/HTTPS endpoint to download a 7z file with the data.ldb to bootstrap to this node"
                }
            ],
            "ports": [
                "8075:8075/tcp",
                "7076:3000/tcp",
                "7077:3001/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/nano/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Nano-wallet",
            "name": "Nano-wallet",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
            "description": "Nano-wallet is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions. This container is a simple nginx wrapper for the light wallet located here. You will need to pass a valid RPC host when accessing this container.",
            "platform": "linux",
            "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
            "image": "linuxserver/nano-wallet:latest",
            "ports": [
                "80:80/tcp"
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Netbootxyz",
            "name": "Netbootxyz",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/netbootxyz/config<br>mkdir -p /portainer/netbootxyz/assets</p>",
            "description": "Netbootxyz is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
            "platform": "linux",
            "logo": "https://netboot.xyz/images/netboot.xyz.gif",
            "image": "linuxserver/netbootxyz:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "MENU_VERSION",
                    "label": "MENU_VERSION",
                    "default": "1.9.9",
                    "description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)"
                },
                {
                    "name": "PORT_RANGE",
                    "label": "PORT_RANGE",
                    "default": "30000:30010",
                    "description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)"
                },
                {
                    "name": "SUBFOLDER",
                    "label": "SUBFOLDER",
                    "default": "/",
                    "description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)"
                }
            ],
            "ports": [
                "3000:3000/tcp",
                "69:69/udp",
                "8080:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/netbootxyz/config"
                },
                {
                    "container": "/assets",
                    "bind": "/portainer/netbootxyz/assets"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Netbox",
            "name": "Netbox",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/netbox/config</p>",
            "description": "Netbox is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg",
            "image": "linuxserver/netbox:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SUPERUSER_EMAIL",
                    "label": "SUPERUSER_EMAIL",
                    "default": "<SUPERUSER_EMAIL>",
                    "description": "Email address for `admin` account"
                },
                {
                    "name": "SUPERUSER_PASSWORD",
                    "label": "SUPERUSER_PASSWORD",
                    "default": "<SUPERUSER_PASSWORD>",
                    "description": "Password for `admin` account"
                },
                {
                    "name": "ALLOWED_HOST",
                    "label": "ALLOWED_HOST",
                    "default": "<ALLOWED_HOST>",
                    "description": "The hostname you will use to access the app (i.e., netbox.example.com)"
                },
                {
                    "name": "DB_NAME",
                    "label": "DB_NAME",
                    "default": "<DB_NAME>",
                    "description": "Database name (default: netbox)"
                },
                {
                    "name": "DB_USER",
                    "label": "DB_USER",
                    "default": "<DB_USER>",
                    "description": "Database user"
                },
                {
                    "name": "DB_PASSWORD",
                    "label": "DB_PASSWORD",
                    "default": "<DB_PASSWORD>",
                    "description": "Database password"
                },
                {
                    "name": "DB_HOST",
                    "label": "DB_HOST",
                    "default": "<DB_HOST>",
                    "description": "Database host (default: postgres)"
                },
                {
                    "name": "DB_PORT",
                    "label": "DB_PORT",
                    "default": "<DB_PORT>",
                    "description": "Database port (defaul: 5432)"
                },
                {
                    "name": "REDIS_HOST",
                    "label": "REDIS_HOST",
                    "default": "<REDIS_HOST>",
                    "description": "Redis host (default: redis)"
                },
                {
                    "name": "REDIS_PORT",
                    "label": "REDIS_PORT",
                    "default": "<REDIS_PORT>",
                    "description": "Redis port number (default: 6379)"
                },
                {
                    "name": "REDIS_PASSWORD",
                    "label": "REDIS_PASSWORD",
                    "default": "<REDIS_PASSWORD>",
                    "description": "Redis password (default: none)"
                },
                {
                    "name": "REDIS_DB_TASK",
                    "label": "REDIS_DB_TASK",
                    "default": "<REDIS_DB_TASK>",
                    "description": "Redis database ID for tasks (default: 0)"
                },
                {
                    "name": "REDIS_DB_CACHE",
                    "label": "REDIS_DB_CACHE",
                    "default": "<REDIS_DB_CACHE>",
                    "description": "Redis database ID for caching (default: 1)"
                },
                {
                    "name": "BASE_PATH",
                    "label": "BASE_PATH",
                    "default": "<BASE_PATH>",
                    "description": "The path you will use to access the app (i.e., /netbox, optional, default: none)"
                },
                {
                    "name": "REMOTE_AUTH_ENABLED",
                    "label": "REMOTE_AUTH_ENABLED",
                    "default": "<REMOTE_AUTH_ENABLED>",
                    "description": "Enable remote authentication (optional, default: False)"
                },
                {
                    "name": "REMOTE_AUTH_BACKEND",
                    "label": "REMOTE_AUTH_BACKEND",
                    "default": "<REMOTE_AUTH_BACKEND>",
                    "description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend)"
                },
                {
                    "name": "REMOTE_AUTH_HEADER",
                    "label": "REMOTE_AUTH_HEADER",
                    "default": "<REMOTE_AUTH_HEADER>",
                    "description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER)"
                },
                {
                    "name": "REMOTE_AUTH_AUTO_CREATE_USER",
                    "label": "REMOTE_AUTH_AUTO_CREATE_USER",
                    "default": "<REMOTE_AUTH_AUTO_CREATE_USER>",
                    "description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False)"
                },
                {
                    "name": "REMOTE_AUTH_DEFAULT_GROUPS",
                    "label": "REMOTE_AUTH_DEFAULT_GROUPS",
                    "default": "<REMOTE_AUTH_DEFAULT_GROUPS>",
                    "description": "The list of groups to assign a new user account when created using remote authentication (optional, default: [])"
                },
                {
                    "name": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
                    "label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
                    "default": "<REMOTE_AUTH_DEFAULT_PERMISSIONS>",
                    "description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {})"
                }
            ],
            "ports": [
                "8000:8000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/netbox/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Nextcloud",
            "name": "Nextcloud",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/nextcloud/config<br>mkdir -p /portainer/nextcloud/data</p>",
            "description": "Nextcloud gives you access to all your files wherever you are. Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
            "image": "linuxserver/nextcloud:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/nextcloud/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/nextcloud/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Nginx",
            "name": "Nginx",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/nginx/config</p>",
            "description": "Nginx is a simple webserver with php support. The config files reside in /config for easy user customization.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-banner.png",
            "image": "linuxserver/nginx:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/nginx/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Ngircd",
            "name": "Ngircd",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/ngircd/config</p>",
            "description": "Ngircd is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
            "image": "linuxserver/ngircd:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "6667:6667/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/ngircd/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Nntp2nntp",
            "name": "Nntp2nntp",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/nntp2nntp/config</p>",
            "description": "Nntp2nntp proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast. ## Warning Whilst we know of no nntp2nntp security issues the upstream code for this project has received no changes since 06.08.15 and is likely abandoned permanently. For this reason we strongly recommend you do not make this application public facing and if you must do so other layers of security and SSL should be considered an absolute bare minimum requirement. We see this proxy being used primarily on a LAN so that all the users NNTP applications can share a common set of internal credentials allowing for central managment of the upstream account e.g change provider, server, thread limits for all applications with one global config change.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png",
            "image": "linuxserver/nntp2nntp:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "<yourUID>",
                    "description": "specify your UID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "<yourGID>",
                    "description": "specify your GID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "1563:1563/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/nntp2nntp/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Nzbget",
            "name": "Nzbget",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/nzbget/config<br>mkdir -p /portainer/nzbget/downloads</p>",
            "description": "Nzbget is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nzbget-banner.png",
            "image": "linuxserver/nzbget:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "NZBGET_USER",
                    "label": "NZBGET_USER",
                    "default": "nzbget",
                    "description": "Specify the user for web authentication."
                },
                {
                    "name": "NZBGET_PASS",
                    "label": "NZBGET_PASS",
                    "default": "tegbzn6789",
                    "description": "Specify the password for web authentication."
                }
            ],
            "ports": [
                "6789:6789/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/nzbget/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/nzbget/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Nzbhydra2",
            "name": "Nzbhydra2",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/nzbhydra2/config<br>mkdir -p /portainer/nzbhydra2/downloads</p>",
            "description": "Nzbhydra2 is a meta search application for NZB indexers, the 'spiritual successor' to NZBmegasearcH, and an evolution of the original application NZBHydra. It provides easy access to a number of raw and newznab based indexers. The application NZBHydra 2 is replacing NZBHydra 1 and supports migrating from V1. Be wary that there may be some compatibility issues for those migrating from V1 to V2, so ensure you back up your old configuration before moving over to the new version. NOTE: The last version that supports migration is linuxserver/nzbhydra2:v2.10.2-ls49",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
            "image": "linuxserver/nzbhydra2:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "5076:5076/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/nzbhydra2/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/nzbhydra2/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Ombi",
            "name": "Ombi",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/ombi/config</p>",
            "description": "Ombi allows you to host your own Plex Request and user management system. If you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface! Manage all your requests for Movies and TV with ease, leave notes for the user and get notification when a user requests something. Allow your users to post issues against their requests so you know there is a problem with the audio etc. Even automatically send them weekly newsletters of new content that has been added to your Plex server!",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png",
            "image": "linuxserver/ombi:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "BASE_URL",
                    "label": "BASE_URL",
                    "default": "/ombi",
                    "description": "Subfolder can optionally be defined as an env variable for reverse proxies. Keep in mind that once this value is defined, the gui setting for base url no longer works. To use the gui setting, remove this env variable."
                }
            ],
            "ports": [
                "3579:3579/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/ombi/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Openssh-server",
            "name": "Openssh-server",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/openssh-server/config</p>",
            "description": "Openssh-server is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.",
            "platform": "linux",
            "logo": "https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png",
            "image": "linuxserver/openssh-server:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PUBLIC_KEY",
                    "label": "PUBLIC_KEY",
                    "default": "yourpublickey",
                    "description": "Optional ssh public key, which will automatically be added to authorized_keys."
                },
                {
                    "name": "PUBLIC_KEY_FILE",
                    "label": "PUBLIC_KEY_FILE",
                    "default": "/path/to/file",
                    "description": "Optionally specify a file containing the public key (works with docker secrets)."
                },
                {
                    "name": "PUBLIC_KEY_DIR",
                    "label": "PUBLIC_KEY_DIR",
                    "default": "/path/to/directory/containing/_only_/pubkeys",
                    "description": "Optionally specify a directory containing the public keys (works with docker secrets)."
                },
                {
                    "name": "PUBLIC_KEY_URL",
                    "label": "PUBLIC_KEY_URL",
                    "default": "https://github.com/username.keys",
                    "description": "Optionally specify a URL containing the public key."
                },
                {
                    "name": "SUDO_ACCESS",
                    "label": "SUDO_ACCESS",
                    "default": "false",
                    "description": "Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access."
                },
                {
                    "name": "PASSWORD_ACCESS",
                    "label": "PASSWORD_ACCESS",
                    "default": "false",
                    "description": "Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well."
                },
                {
                    "name": "USER_PASSWORD",
                    "label": "USER_PASSWORD",
                    "default": "password",
                    "description": "Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access."
                },
                {
                    "name": "USER_PASSWORD_FILE",
                    "label": "USER_PASSWORD_FILE",
                    "default": "/path/to/file",
                    "description": "Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets)."
                },
                {
                    "name": "USER_NAME",
                    "label": "USER_NAME",
                    "default": "linuxserver.io",
                    "description": "Optionally specify a user name (Default:`linuxserver.io`)"
                }
            ],
            "ports": [
                "2222:2222/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/openssh-server/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Openvscode-server",
            "name": "Openvscode-server",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/openvscode-server/config</p>",
            "description": "Openvscode-server provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
            "image": "linuxserver/openvscode-server:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "CONNECTION_TOKEN",
                    "label": "CONNECTION_TOKEN",
                    "default": "",
                    "description": "Optional security token for accessing the Web UI (ie. `supersecrettoken`)."
                },
                {
                    "name": "CONNECTION_SECRET",
                    "label": "CONNECTION_SECRET",
                    "default": "",
                    "description": "Optional path to a file inside the container that contains the security token for accessing the Web UI (ie. `/path/to/file`). Overrides `CONNECTION_TOKEN`."
                },
                {
                    "name": "SUDO_PASSWORD",
                    "label": "SUDO_PASSWORD",
                    "default": "password",
                    "description": "If this optional variable is set, user will have sudo access in the openvscode-server terminal with the specified password."
                },
                {
                    "name": "SUDO_PASSWORD_HASH",
                    "label": "SUDO_PASSWORD_HASH",
                    "default": "",
                    "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`."
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/openvscode-server/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Oscam",
            "name": "Oscam",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/oscam/config</p>",
            "description": "Oscam is an Open Source Conditional Access Module software used for descrambling DVB transmissions using smart cards. It's both a server and a client.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/oscam-logo.png",
            "image": "linuxserver/oscam:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8888:8888/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/oscam/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Overseerr",
            "name": "Overseerr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/overseerr/config</p>",
            "description": "Overseerr is a request management and media discovery tool built to work with your existing Plex ecosystem.",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png",
            "image": "linuxserver/overseerr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "5055:5055/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/overseerr/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Papermerge",
            "name": "Papermerge",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/papermerge/config<br>mkdir -p /portainer/papermerge/data</p>",
            "description": "Papermerge is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.'",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png",
            "image": "linuxserver/papermerge:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "REDIS_URL",
                    "label": "REDIS_URL",
                    "default": "",
                    "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py"
                }
            ],
            "ports": [
                "8000:8000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/papermerge/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/papermerge/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Phpmyadmin",
            "name": "Phpmyadmin",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/phpmyadmin/config</p>",
            "description": "Phpmyadmin is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
            "categories": [
                "System Tools"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
            "image": "linuxserver/phpmyadmin:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PMA_ARBITRARY",
                    "label": "PMA_ARBITRARY",
                    "default": "1",
                    "description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup)"
                },
                {
                    "name": "PMA_ABSOLUTE_URI",
                    "label": "PMA_ABSOLUTE_URI",
                    "default": "https://phpmyadmin.example.com",
                    "description": "Set the URL you will use to access the web frontend"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/phpmyadmin/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Pidgin",
            "name": "Pidgin",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/pidgin/config</p>",
            "description": "Pidgin is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
            "image": "linuxserver/pidgin:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/pidgin/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Piwigo",
            "name": "Piwigo",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/piwigo/config<br>mkdir -p /portainer/piwigo/gallery</p>",
            "description": "Piwigo is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-banner.png",
            "image": "linuxserver/piwigo:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/piwigo/config"
                },
                {
                    "container": "/gallery",
                    "bind": "/portainer/piwigo/gallery"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Plex",
            "name": "Plex",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/plex/config<br>mkdir -p /portainer/plex/tv<br>mkdir -p /portainer/plex/movies</p>",
            "description": "Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
            "platform": "linux",
            "logo": "http://the-gadgeteer.com/wp-content/uploads/2015/10/plex-logo-e1446990678679.png",
            "image": "linuxserver/plex:latest",
            "network": "host",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "VERSION",
                    "label": "VERSION",
                    "default": "docker",
                    "description": "Set whether to update plex or not - see Application Setup section."
                },
                {
                    "name": "PLEX_CLAIM",
                    "label": "PLEX_CLAIM",
                    "default": "",
                    "description": "Optionally you can obtain a claim token from https://plex.tv/claim and input here. Keep in mind that the claim tokens expire within 4 minutes."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/plex/config"
                },
                {
                    "container": "/tv",
                    "bind": "/portainer/plex/tv"
                },
                {
                    "container": "/movies",
                    "bind": "/portainer/plex/movies"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Plex-meta-manager",
            "name": "Plex-meta-manager",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/plex-meta-manager/config</p>",
            "description": "Plex-meta-manager is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.",
            "categories": [
                "Media Management"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png",
            "image": "linuxserver/plex-meta-manager:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "PMM_CONFIG",
                    "label": "PMM_CONFIG",
                    "default": "/config/config.yml",
                    "description": "Specify a custom config file to use."
                },
                {
                    "name": "PMM_TIME",
                    "label": "PMM_TIME",
                    "default": "03:00",
                    "description": "Comma-separated list of times to update each day. Format: `HH:MM`."
                },
                {
                    "name": "PMM_RUN",
                    "label": "PMM_RUN",
                    "default": "False",
                    "description": "Set to `True` to run without the scheduler."
                },
                {
                    "name": "PMM_TEST",
                    "label": "PMM_TEST",
                    "default": "False",
                    "description": "Set to `True` to run in debug mode with only collections that have `test: true`."
                },
                {
                    "name": "PMM_NO_MISSING",
                    "label": "PMM_NO_MISSING",
                    "default": "False",
                    "description": "Set to `True` to run without any of the missing movie/show functions."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/plex-meta-manager/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Projectsend",
            "name": "Projectsend",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/projectsend/config<br>mkdir -p /portainer/projectsend/data</p>",
            "description": "Projectsend is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.",
            "platform": "linux",
            "logo": "http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png",
            "image": "linuxserver/projectsend:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "MAX_UPLOAD",
                    "label": "MAX_UPLOAD",
                    "default": "5000",
                    "description": "To set maximum upload size (in MB), default if unset is 5000."
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/projectsend/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/projectsend/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Prowlarr",
            "name": "Prowlarr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/prowlarr/config</p>",
            "description": "Prowlarr is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png",
            "image": "linuxserver/prowlarr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "9696:9696/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/prowlarr/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Pwndrop",
            "name": "Pwndrop",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/pwndrop/config</p>",
            "description": "Pwndrop is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
            "image": "linuxserver/pwndrop:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SECRET_PATH",
                    "label": "SECRET_PATH",
                    "default": "/pwndrop",
                    "description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui."
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/pwndrop/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Pydio-cells",
            "name": "Pydio-cells",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/pydio-cells/config</p>",
            "description": "Pydio-cells is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png",
            "image": "linuxserver/pydio-cells:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "EXTERNALURL",
                    "label": "EXTERNALURL",
                    "default": "yourdomain.url",
                    "description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT)."
                },
                {
                    "name": "SERVER_IP",
                    "label": "SERVER_IP",
                    "default": "0.0.0.0",
                    "description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy)."
                }
            ],
            "ports": [
                "8080:8080/tcp",
                "33060:33060/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/pydio-cells/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Pyload-ng",
            "name": "Pyload-ng",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/pyload-ng/config<br>mkdir -p /portainer/pyload-ng/downloads</p>",
            "description": "pyLoad is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
            "platform": "linux",
            "logo": "https://pyload.net/img/banner.png",
            "image": "linuxserver/pyload-ng:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8000:8000/tcp",
                "9666:9666/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/pyload-ng/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/pyload-ng/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Pylon",
            "name": "Pylon",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/pylon/config<br>mkdir -p /portainer/pylon/code</p>",
            "description": "Pylon is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
            "image": "linuxserver/pylon:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "GITURL",
                    "label": "GITURL",
                    "default": "https://github.com/linuxserver/docker-pylon.git",
                    "description": "Specify a git repo to checkout on first startup"
                },
                {
                    "name": "PYUSER",
                    "label": "PYUSER",
                    "default": "myuser",
                    "description": "Specify a basic auth user."
                },
                {
                    "name": "PYPASS",
                    "label": "PYPASS",
                    "default": "mypass",
                    "description": "Specify a basic auth password."
                }
            ],
            "ports": [
                "3131:3131/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/pylon/config"
                },
                {
                    "container": "/code",
                    "bind": "/portainer/pylon/code"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Qbittorrent",
            "name": "Qbittorrent",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/qbittorrent/config<br>mkdir -p /portainer/qbittorrent/downloads</p>",
            "description": "The Qbittorrent project aims to provide an open-source software alternative to \u00b5Torrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
            "platform": "linux",
            "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png",
            "image": "linuxserver/qbittorrent:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "WEBUI_PORT",
                    "label": "WEBUI_PORT",
                    "default": "8080",
                    "description": "for changing the port of the webui, see below for explanation"
                }
            ],
            "ports": [
                "8080:8080/tcp",
                "6881:6881/tcp",
                "6881:6881/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/qbittorrent/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/qbittorrent/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Qdirstat",
            "name": "Qdirstat",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/qdirstat/config<br>mkdir -p /portainer/qdirstat/data</p>",
            "description": "QDirStat Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png",
            "image": "linuxserver/qdirstat:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/qdirstat/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/qdirstat/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Quassel-core",
            "name": "Quassel-core",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/quassel-core/config</p>",
            "description": "Quassel-core is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.",
            "platform": "linux",
            "logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
            "image": "linuxserver/quassel-core:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "RUN_OPTS",
                    "label": "RUN_OPTS",
                    "default": "--config-from-environment",
                    "description": "Custom CLI options for Quassel"
                }
            ],
            "ports": [
                "4242:4242/tcp",
                "113:10113/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/quassel-core/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Quassel-web",
            "name": "Quassel-web",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/quassel-web/config</p>",
            "description": "Quassel-web is a web client for Quassel. Note that a Quassel-Core instance is required, we have a container available here.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png",
            "image": "linuxserver/quassel-web:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "QUASSEL_CORE",
                    "label": "QUASSEL_CORE",
                    "default": "192.168.1.10",
                    "description": "specify the URL or IP address of your Quassel Core instance"
                },
                {
                    "name": "QUASSEL_PORT",
                    "label": "QUASSEL_PORT",
                    "default": "4242",
                    "description": "specify the port of your Quassel Core instance"
                },
                {
                    "name": "URL_BASE",
                    "label": "URL_BASE",
                    "default": "/quassel",
                    "description": "Specify a url-base in reverse proxy setups ie. `/quassel`"
                }
            ],
            "ports": [
                "64443:64443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/quassel-web/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Radarr",
            "name": "Radarr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/radarr/config<br>mkdir -p /portainer/radarr/movies<br>mkdir -p /portainer/radarr/downloads</p>",
            "description": "Radarr - A fork of Sonarr to work with movies \u00e0 la Couchpotato.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
            "image": "linuxserver/radarr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "7878:7878/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/radarr/config"
                },
                {
                    "container": "/movies",
                    "bind": "/portainer/radarr/movies"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/radarr/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Raneto",
            "name": "Raneto",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/raneto/config</p>",
            "description": "Raneto - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png",
            "image": "linuxserver/raneto:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/raneto/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Rdesktop",
            "name": "Rdesktop",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p><br>mkdir -p /portainer/rdesktop/config</p>",
            "description": "Rdesktop - Containers containing full desktop environments in many popular flavors for Alpine, Ubuntu, Arch, and Fedora accessible via RDP.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png",
            "image": "linuxserver/rdesktop:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3389:3389/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                },
                {
                    "container": "/config",
                    "bind": "/portainer/rdesktop/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Remmina",
            "name": "Remmina",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/remmina/config</p>",
            "description": "Remmina is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
            "image": "linuxserver/remmina:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/remmina/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Requestrr",
            "name": "Requestrr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/requestrr/config</p>",
            "description": "Requestrr is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png",
            "image": "linuxserver/requestrr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "4545:4545/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/requestrr/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Resilio-sync",
            "name": "Resilio-sync",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/resilio-sync/config<br>mkdir -p /portainer/resilio-sync/downloads<br>mkdir -p /portainer/resilio-sync/sync</p>",
            "description": "Resilio-sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.",
            "platform": "linux",
            "logo": "https://www.resilio.com/img/individual/freeproduct.jpg",
            "image": "linuxserver/resilio-sync:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8888:8888/tcp",
                "55555:55555/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/resilio-sync/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/resilio-sync/downloads"
                },
                {
                    "container": "/sync",
                    "bind": "/portainer/resilio-sync/sync"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Rsnapshot",
            "name": "Rsnapshot",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/rsnapshot/config<br>mkdir -p /portainer/rsnapshot/.snapshots<br>mkdir -p /portainer/rsnapshot/data</p>",
            "description": "Rsnapshot is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.'",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png",
            "image": "linuxserver/rsnapshot:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/rsnapshot/config"
                },
                {
                    "container": "/.snapshots",
                    "bind": "/portainer/rsnapshot/.snapshots"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/rsnapshot/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Sabnzbd",
            "name": "Sabnzbd",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/sabnzbd/config<br>mkdir -p /portainer/sabnzbd/downloads<br>mkdir -p /portainer/sabnzbd/incomplete-downloads</p>",
            "description": "Sabnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-banner.png",
            "image": "linuxserver/sabnzbd:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8080:8080/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/sabnzbd/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/sabnzbd/downloads"
                },
                {
                    "container": "/incomplete-downloads",
                    "bind": "/portainer/sabnzbd/incomplete-downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Sickchill",
            "name": "Sickchill",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/sickchill/config<br>mkdir -p /portainer/sickchill/downloads<br>mkdir -p /portainer/sickchill/tv</p>",
            "description": "Sickchill is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickchill-banner.png",
            "image": "linuxserver/sickchill:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8081:8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/sickchill/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/sickchill/downloads"
                },
                {
                    "container": "/tv",
                    "bind": "/portainer/sickchill/tv"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Sickgear",
            "name": "Sickgear",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/sickgear/config<br>mkdir -p /portainer/sickgear/tv<br>mkdir -p /portainer/sickgear/downloads</p>",
            "description": "SickGear provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.. For more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png",
            "image": "linuxserver/sickgear:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8081:8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/sickgear/config"
                },
                {
                    "container": "/tv",
                    "bind": "/portainer/sickgear/tv"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/sickgear/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Smokeping",
            "name": "Smokeping",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/smokeping/config<br>mkdir -p /portainer/smokeping/data</p>",
            "description": "Smokeping keeps track of your network latency. For a full example of what this application is capable of visit UCDavis.",
            "platform": "linux",
            "logo": "https://camo.githubusercontent.com/e0694ef783e3fd1d74e6776b28822ced01c7cc17/687474703a2f2f6f73732e6f6574696b65722e63682f736d6f6b6570696e672f696e632f736d6f6b6570696e672d6c6f676f2e706e67",
            "image": "linuxserver/smokeping:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/smokeping/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/smokeping/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Snapdrop",
            "name": "Snapdrop",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/snapdrop/config</p>",
            "description": "Snapdrop A local file sharing in your browser. Inspired by Apple's Airdrop.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png",
            "image": "linuxserver/snapdrop:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/snapdrop/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Snipe-it",
            "name": "Snipe-it",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/snipe-it/config</p>",
            "description": "Snipe-it makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
            "platform": "linux",
            "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png",
            "image": "linuxserver/snipe-it:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "APP_URL",
                    "label": "APP_URL",
                    "default": "http://localhost:8080",
                    "description": "Hostname or IP and port if applicable, be sure to define https/http"
                },
                {
                    "name": "MYSQL_PORT_3306_TCP_ADDR",
                    "label": "MYSQL_PORT_3306_TCP_ADDR",
                    "default": "",
                    "description": "Mysql hostname or IP to use"
                },
                {
                    "name": "MYSQL_PORT_3306_TCP_PORT",
                    "label": "MYSQL_PORT_3306_TCP_PORT",
                    "default": "",
                    "description": "Mysql port to use"
                },
                {
                    "name": "MYSQL_DATABASE",
                    "label": "MYSQL_DATABASE",
                    "default": "",
                    "description": "Mysql database to use"
                },
                {
                    "name": "MYSQL_USER",
                    "label": "MYSQL_USER",
                    "default": "",
                    "description": "Mysql user to use"
                },
                {
                    "name": "MYSQL_PASSWORD",
                    "label": "MYSQL_PASSWORD",
                    "default": "",
                    "description": "Mysql password to use"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8080:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/snipe-it/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Sonarr",
            "name": "Sonarr",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/sonarr/config<br>mkdir -p /portainer/sonarr/tv<br>mkdir -p /portainer/sonarr/downloads</p>",
            "description": "Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-banner.png",
            "image": "linuxserver/sonarr:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8989:8989/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/sonarr/config"
                },
                {
                    "container": "/tv",
                    "bind": "/portainer/sonarr/tv"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/sonarr/downloads"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Sqlitebrowser",
            "name": "Sqlitebrowser",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/sqlitebrowser/config</p>",
            "description": "DB Browser for SQLite is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
            "image": "linuxserver/sqlitebrowser:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/sqlitebrowser/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Swag",
            "name": "Swag",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/swag/config</p>",
            "description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt\u2122) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
            "platform": "linux",
            "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif",
            "image": "linuxserver/swag:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "URL",
                    "label": "URL",
                    "default": "yourdomain.url",
                    "description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns)."
                },
                {
                    "name": "VALIDATION",
                    "label": "VALIDATION",
                    "default": "http",
                    "description": "Certbot validation method to use, options are `http` or `dns` (`dns` method also requires `DNSPLUGIN` variable set)."
                },
                {
                    "name": "SUBDOMAINS",
                    "label": "SUBDOMAINS",
                    "default": "www,",
                    "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this *exactly* to `wildcard` (wildcard cert is available via `dns` validation only)"
                },
                {
                    "name": "CERTPROVIDER",
                    "label": "CERTPROVIDER",
                    "default": "",
                    "description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt."
                },
                {
                    "name": "DNSPLUGIN",
                    "label": "DNSPLUGIN",
                    "default": "cloudflare",
                    "description": "Required if `VALIDATION` is set to `dns`. Options are `acmedns`, `aliyun`, `azure`, `cloudflare`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `do`, `domeneshop`, `duckdns`, `dynu`, `gandi`, `gehirn`, `godaddy`, `google`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `porkbun`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip`, and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`."
                },
                {
                    "name": "PROPAGATION",
                    "label": "PROPAGATION",
                    "default": "",
                    "description": "Optionally override (in seconds) the default propagation time for the dns plugins."
                },
                {
                    "name": "EMAIL",
                    "label": "EMAIL",
                    "default": "",
                    "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL)."
                },
                {
                    "name": "ONLY_SUBDOMAINS",
                    "label": "ONLY_SUBDOMAINS",
                    "default": "false",
                    "description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`"
                },
                {
                    "name": "EXTRA_DOMAINS",
                    "label": "EXTRA_DOMAINS",
                    "default": "",
                    "description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`"
                },
                {
                    "name": "STAGING",
                    "label": "STAGING",
                    "default": "false",
                    "description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes."
                }
            ],
            "ports": [
                "443:443/tcp",
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/swag/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Synclounge",
            "name": "Synclounge",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
            "description": "Synclounge is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png",
            "image": "linuxserver/synclounge:latest",
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "AUTH_LIST",
                    "label": "AUTH_LIST",
                    "default": "plexuser1,plexuser2,email1,machineid1",
                    "description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces."
                },
                {
                    "name": "AUTOJOIN_ENABLED",
                    "label": "AUTOJOIN_ENABLED",
                    "default": "false",
                    "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set to `true` to let users autojoin the server and a room (specified by the `AUTOJOIN_ROOM` var)."
                },
                {
                    "name": "AUTOJOIN_ROOM",
                    "label": "AUTOJOIN_ROOM",
                    "default": "roomname",
                    "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set the room name for auto joining (requires `AUTOJOIN_ENABLED` set to `true`)."
                }
            ],
            "ports": [
                "8088:8088/tcp"
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Syncthing",
            "name": "Syncthing",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/syncthing/config<br>mkdir -p /portainer/syncthing/data1<br>mkdir -p /portainer/syncthing/data2</p>",
            "description": "Syncthing replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-banner.png",
            "image": "linuxserver/syncthing:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8384:8384/tcp",
                "22000:22000/tcp",
                "22000:22000/udp",
                "21027:21027/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/syncthing/config"
                },
                {
                    "container": "/data1",
                    "bind": "/portainer/syncthing/data1"
                },
                {
                    "container": "/data2",
                    "bind": "/portainer/syncthing/data2"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Syslog-ng",
            "name": "Syslog-ng",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/syslog-ng/config<br></p>",
            "description": "syslog-ng allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.",
            "categories": [
                "System Tools"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png",
            "image": "linuxserver/syslog-ng:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "514:5514/udp",
                "601:6601/tcp",
                "6514:6514/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/syslog-ng/config"
                },
                {
                    "container": "/var/log",
                    "bind": "/var/log"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Tautulli",
            "name": "Tautulli",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/tautulli/config</p>",
            "description": "Tautulli is a python based web application for monitoring, analytics and notifications for Plex Media Server.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png",
            "image": "linuxserver/tautulli:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "8181:8181/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/tautulli/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Thelounge",
            "name": "Thelounge",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/thelounge/config</p>",
            "description": "Thelounge (a fork of shoutIRC) is a web IRC client that you host on your own server.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true",
            "image": "linuxserver/thelounge:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "9000:9000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/thelounge/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Transmission",
            "name": "Transmission",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/transmission/config<br>mkdir -p /portainer/transmission/downloads<br>mkdir -p /portainer/transmission/watch</p>",
            "description": "Transmission is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, \u00b5TP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission.png",
            "image": "linuxserver/transmission:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "TRANSMISSION_WEB_HOME",
                    "label": "TRANSMISSION_WEB_HOME",
                    "default": "/combustion-release/",
                    "description": "Specify an alternative UI options are [`/combustion-release/`](https://github.com/Secretmapper/combustion), [`/transmission-web-control/`](https://github.com/ronggang/transmission-web-control), [`/kettu/`](https://github.com/endor/kettu), [`/flood-for-transmission/`](https://github.com/johman10/flood-for-transmission), and [`/transmissionic/`](https://github.com/6c65726f79/Transmissionic)."
                },
                {
                    "name": "USER",
                    "label": "USER",
                    "default": "username",
                    "description": "Specify an optional username for the interface"
                },
                {
                    "name": "PASS",
                    "label": "PASS",
                    "default": "password",
                    "description": "Specify an optional password for the interface"
                },
                {
                    "name": "WHITELIST",
                    "label": "WHITELIST",
                    "default": "iplist",
                    "description": "Specify an optional list of comma separated ip whitelist. Fills rpc-whitelist setting."
                },
                {
                    "name": "PEERPORT",
                    "label": "PEERPORT",
                    "default": "peerport",
                    "description": "Specify an optional port for torrent TCP/UDP connections. Fills peer-port setting."
                },
                {
                    "name": "HOST_WHITELIST",
                    "label": "HOST_WHITELIST",
                    "default": "dnsname list",
                    "description": "Specify an optional list of comma separated dns name whitelist. Fills rpc-host-whitelist setting."
                }
            ],
            "ports": [
                "9091:9091/tcp",
                "51413:51413/tcp",
                "51413:51413/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/transmission/config"
                },
                {
                    "container": "/downloads",
                    "bind": "/portainer/transmission/downloads"
                },
                {
                    "container": "/watch",
                    "bind": "/portainer/transmission/watch"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Tvheadend",
            "name": "Tvheadend",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/tvheadend/config<br>mkdir -p /portainer/tvheadend/recordings</p>",
            "description": "Tvheadend works as a proxy server: is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT>IP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT>IP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tvheadend-big.png",
            "image": "linuxserver/tvheadend:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "RUN_OPTS",
                    "label": "RUN_OPTS",
                    "default": "",
                    "description": "Optionally specify additional arguments to be passed. See Additional runtime parameters."
                }
            ],
            "ports": [
                "9981:9981/tcp",
                "9982:9982/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/tvheadend/config"
                },
                {
                    "container": "/recordings",
                    "bind": "/portainer/tvheadend/recordings"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Ubooquity",
            "name": "Ubooquity",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/ubooquity/config<br>mkdir -p /portainer/ubooquity/books<br>mkdir -p /portainer/ubooquity/comics<br>mkdir -p /portainer/ubooquity/files</p>",
            "description": "Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-banner.png",
            "image": "linuxserver/ubooquity:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "MAXMEM",
                    "label": "MAXMEM",
                    "default": "<maxmem>",
                    "description": "To set the maximum memory. ( ex: set '1000' for 1GB )"
                }
            ],
            "ports": [
                "2202:2202/tcp",
                "2203:2203/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/ubooquity/config"
                },
                {
                    "container": "/books",
                    "bind": "/portainer/ubooquity/books"
                },
                {
                    "container": "/comics",
                    "bind": "/portainer/ubooquity/comics"
                },
                {
                    "container": "/files",
                    "bind": "/portainer/ubooquity/files"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Unifi-controller",
            "name": "Unifi-controller",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/unifi-controller/config</p>",
            "description": "The Unifi-controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
            "categories": [
                "Networking"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
            "image": "linuxserver/unifi-controller:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "MEM_LIMIT",
                    "label": "MEM_LIMIT",
                    "default": "1000",
                    "description": "Optionally change the Java memory limit (in Megabytes). Set to `default` to reset to default"
                },
                {
                    "name": "MEM_STARTUP",
                    "label": "MEM_STARTUP",
                    "default": "1000",
                    "description": "Optionally change the Java initial/minimum memory (in Megabytes). Set to `default` to reset to default"
                }
            ],
            "ports": [
                "8443:8443/tcp",
                "3478:3478/udp",
                "10001:10001/udp",
                "8080:8080/tcp",
                "1900:1900/udp",
                "8843:8843/tcp",
                "8880:8880/tcp",
                "6789:6789/tcp",
                "5514:5514/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/unifi-controller/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Webgrabplus",
            "name": "Webgrabplus",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/webgrabplus/config<br>mkdir -p /portainer/webgrabplus/data</p>",
            "description": "Webgrabplus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
            "platform": "linux",
            "logo": "http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg",
            "image": "linuxserver/webgrabplus:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/webgrabplus/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/webgrabplus/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Webtop",
            "name": "Webtop",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/webtop/config<br></p>",
            "description": "Webtop - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
            "categories": [
                "Utilities"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
            "image": "linuxserver/webtop:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SUBFOLDER",
                    "label": "SUBFOLDER",
                    "default": "/",
                    "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"
                },
                {
                    "name": "KEYBOARD",
                    "label": "KEYBOARD",
                    "default": "en-us-qwerty",
                    "description": "See the keyboard layouts section for more information and options."
                },
                {
                    "name": "TITLE",
                    "label": "TITLE",
                    "default": "Webtop",
                    "description": "String which will be used as page/tab title in the web browser."
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/webtop/config"
                },
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Wikijs",
            "name": "Wikijs",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/wikijs/config<br>mkdir -p /portainer/wikijs/data</p>",
            "description": "Wikijs A modern, lightweight and powerful wiki app built on NodeJS.",
            "platform": "linux",
            "logo": "https://static.requarks.io/logo/wikijs-full.svg",
            "image": "linuxserver/wikijs:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/wikijs/config"
                },
                {
                    "container": "/data",
                    "bind": "/portainer/wikijs/data"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Wireguard",
            "name": "Wireguard",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/wireguard/config<br></p>",
            "description": "WireGuard\u00ae is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
            "platform": "linux",
            "logo": "https://www.wireguard.com/img/wireguard.svg",
            "image": "linuxserver/wireguard:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                },
                {
                    "name": "SERVERURL",
                    "label": "SERVERURL",
                    "default": "wireguard.domain.com",
                    "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically"
                },
                {
                    "name": "SERVERPORT",
                    "label": "SERVERPORT",
                    "default": "51820",
                    "description": "External port for docker host. Used in server mode."
                },
                {
                    "name": "PEERS",
                    "label": "PEERS",
                    "default": "1",
                    "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)"
                },
                {
                    "name": "PEERDNS",
                    "label": "PEERDNS",
                    "default": "auto",
                    "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward."
                },
                {
                    "name": "INTERNAL_SUBNET",
                    "label": "INTERNAL_SUBNET",
                    "default": "10.13.13.0",
                    "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode."
                },
                {
                    "name": "ALLOWEDIPS",
                    "label": "ALLOWEDIPS",
                    "default": "0.0.0.0/0",
                    "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1."
                },
                {
                    "name": "PERSISTENTKEEPALIVE_PEERS",
                    "label": "PERSISTENTKEEPALIVE_PEERS",
                    "default": "",
                    "description": "Set to `all` or a list of comma separated peers (ie. `1,4,laptop`) for the wireguard server to send keepalive packets to listed peers every 25 seconds. Useful if server is accessed via domain name and has dynamic IP. Used only in server mode."
                },
                {
                    "name": "LOG_CONFS",
                    "label": "LOG_CONFS",
                    "default": "true",
                    "description": "Generated QR codes will be displayed in the docker log. Set to `false` to skip log output."
                }
            ],
            "ports": [
                "51820:51820/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/wireguard/config"
                },
                {
                    "container": "/lib/modules",
                    "bind": "/lib/modules"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Wireshark",
            "name": "Wireshark",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/wireshark/config</p>",
            "description": "Wireshark is the world\u2019s foremost and widely-used network protocol analyzer. It lets you see what\u2019s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
            "image": "linuxserver/wireshark:latest",
            "network": "host",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "3000:3000/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/wireshark/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Xbackbone",
            "name": "Xbackbone",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/xbackbone/config</p>",
            "description": "Xbackbone is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
            "image": "linuxserver/xbackbone:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp",
                "443:443/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/xbackbone/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Yq",
            "name": "Yq",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/yq/config</p>",
            "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/yq for details.",
            "platform": "linux",
            "logo": "",
            "image": "linuxserver/yq:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "80:80/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/yq/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "type": 1,
            "title": "Znc",
            "name": "Znc",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/znc/config</p>",
            "description": "Znc is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
            "platform": "linux",
            "logo": "http://wiki.znc.in/resources/assets/wiki.png",
            "image": "linuxserver/znc:latest",
            "env": [
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "1000",
                    "description": "for UserID"
                },
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "1000",
                    "description": "for GroupID"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney"
                }
            ],
            "ports": [
                "6501:6501/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/portainer/znc/config"
                }
            ],
            "restart_policy": "unless-stopped"
        },
        {
            "categories": [
                "Other"
            ],
            "description": "AdGuard Home is a network-wide software for blocking ads & tracking. After you set it up, it\u2019ll cover ALL your home devices, and you don\u2019t need any client-side software for that. With the rise of Internet-Of-Things and connected devices, it becomes more and more important to be able to control your whole network.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": "adguard home"
                }
            ],
            "image": "adguard/adguardhome:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/adguard.png",
            "name": "adguard",
            "platform": "linux",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "68:68/tcp",
                "68:68/udp",
                "80:80/tcp",
                "443:443/tcp",
                "853:853/tcp",
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Adguard",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Adguard/Workdir",
                    "container": "/opt/adguardhome/work"
                },
                {
                    "bind": "/portainer/Files/AppData/Adguard/Conf",
                    "container": "/opt/adguardhome/conf"
                }
            ]
        },
        {
            "categories": [
                "Music"
            ],
            "description": "Airsonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": "airsonic"
                },
                {
                    "label": "JAVA_OPTS",
                    "name": "JAVA_OPTS",
                    "set": "-Xms256m -Xmx512m"
                }
            ],
            "image": "linuxserver/airsonic:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/airsonic-logo.png",
            "name": "airsonic",
            "platform": "linux",
            "ports": [
                "4040:4040/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Airsonic",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Music",
                    "container": "/music"
                },
                {
                    "bind": "/portainer/Files/AppData/Airsonic/Playlists",
                    "container": "/playlists"
                },
                {
                    "bind": "/portainer/Podcasts",
                    "container": "/podcasts"
                },
                {
                    "bind": "/portainer/Files/AppData/Airsonic/Media",
                    "container": "/media"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Airsonic/",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Books",
                "Other"
            ],
            "description": "Booksonic is a server and an app for streaming your audiobooks to any pc or android phone. Most of the functionality is also availiable on other platforms that have apps for subsonic.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "booksonic",
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH"
                }
            ],
            "image": "linuxserver/booksonic:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/booksonic.png",
            "name": "booksonic",
            "platform": "linux",
            "ports": [
                "4040:4040/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Booksonic",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Books",
                    "container": "/books"
                },
                {
                    "bind": "/portainer/Files/Podcasts",
                    "container": "/podcast"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Booksonic",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Books"
            ],
            "description": "Calibre Web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/calibre-web:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/calibre-web-icon.png",
            "name": "calibre-web",
            "note": "Configuration <ul><li><b>/config</b> - Where Calibre-web should store it's database</li><li><b>/books</b> - Path to your calibre library metadata.db file</li></ul>",
            "platform": "linux",
            "ports": [
                "8083:8083/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Calibre Web",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Books",
                    "container": "/books"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Calibre-web",
                    "container": "/config"
                }
            ]
        },
        {
            "category": [
                "Other",
                "Tools",
                "Photo"
            ],
            "description": "Chevereto is a powerful and fast image hosting script that allows you to create your very own full featured image hosting website in just minutes. Please note that this offers only the free Chevereto version..",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "CHEVERETO_DB_HOST",
                    "name": "CHEVERETO_DB_HOST",
                    "set": ""
                },
                {
                    "label": "CHEVERETO_DB_USERNAME",
                    "name": "CHEVERETO_DB_USERNAME",
                    "set": ""
                },
                {
                    "label": "CHEVERETO_DB_PASSWORD",
                    "name": "CHEVERETO_DB_PASSWORD",
                    "set": ""
                },
                {
                    "label": "CHEVERETO_DB_NAME",
                    "name": "CHEVERETO_DB_NAME",
                    "set": ""
                },
                {
                    "label": "CHEVERETO_DB_PREFIX",
                    "name": "CHEVERETO_DB_PREFIX",
                    "set": ""
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "nmtan/chevereto:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/Chevereto.png",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "title": "Chevereto",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/www/html/images"
                }
            ]
        },
        {
            "categories": [
                "Development"
            ],
            "description": "Cloud9 Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "https://github.com/linuxserver/docker-cloud9.git",
                    "description": "Specify a git repo to checkout on first startup",
                    "label": "GITURL",
                    "name": "GITURL"
                },
                {
                    "default": "",
                    "description": "Optionally specify a username for http auth",
                    "label": "USERNAME",
                    "name": "USERNAME"
                },
                {
                    "default": "",
                    "description": "Optionally specify a password for http auth (if USERNAME and PASSWORD are not set, there will be no http auth)",
                    "label": "PASSWORD",
                    "name": "PASSWORD"
                }
            ],
            "image": "linuxserver/cloud9:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cloud9.png",
            "name": "Cloud9",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/cloud9/config<br>mkdir -p /portainer/cloud9/code<br></p>",
            "platform": "linux",
            "ports": [
                "8000:8000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Cloud9",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/cloud9/config",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/cloud9/code",
                    "container": "/code"
                },
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Media"
            ],
            "description": "Couchpotato is an automatic NZB and torrent downloader. You can keep a movies I want list and it will search for NZBs/torrents of these movies every X hours. Once a movie is found, it will send it to SABnzbd or download the torrent to a specified directory.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "linuxserver/couchpotato:latest",
            "logo": "https://couchpota.to/media/images/full.png",
            "name": "Couchpotato",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/couchpotato/config<br>mkdir -p /portainer/couchpotato/downloads<br>mkdir -p /portainer/couchpotato/movies</p>",
            "platform": "linux",
            "ports": [
                "5050:5050/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Couchpotato",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/couchpotato/config",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/couchpotato/downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/couchpotato/movies",
                    "container": "/movies"
                }
            ]
        },
        {
            "description": "Kanzi, formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "kanzi",
                    "description": "Specify an invocation name for this skill, use either kanzi or kod.",
                    "label": "INVOCATION_NAME",
                    "name": "INVOCATION_NAME"
                },
                {
                    "default": "https://server.com/kanzi/",
                    "description": "Specify the URL at which the webserver is reachable either `https://kanzi.server.com/` or `https://server.com/kanzi/` Note the trailing slash **MUST** be included.",
                    "label": "URL_ENDPOINT",
                    "name": "URL_ENDPOINT"
                }
            ],
            "image": "linuxserver/kanzi:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi.png",
            "name": "Kanzi",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/kanzi/config</p>",
            "platform": "linux",
            "ports": [
                "8000:8000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Kanzi",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/kanzi/config",
                    "container": "/config"
                }
            ]
        },
        {
            "description": "Muximux is a lightweight portal to view & manage your HTPC apps without having to run anything more than a PHP enabled webserver. With Muximux you don't need to keep multiple tabs open, or bookmark the URL to all of your apps.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "linuxserver/muximux:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/muximux-icon.png",
            "name": "Muximux",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/muximux/config</p>",
            "platform": "linux",
            "ports": [
                "80:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Muximux",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/muximux/config",
                    "container": "/config"
                }
            ]
        },
        {
            "description": "Paperless-ng is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents.'",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "",
                    "description": "Specify an external redis instance to use. Can optionally include a port (`redis:6379`) and/or db (`redis/foo`). If left blank or not included, will use a built-in redis instance. If changed after initial setup will also require manual modification of /config/settings.py",
                    "label": "REDIS_URL",
                    "name": "REDIS_URL"
                }
            ],
            "image": "linuxserver/paperless-ng:latest",
            "logo": "",
            "name": "Paperless-ng",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/paperless-ng/config<br>mkdir -p /portainer/paperless-ng/data</p>",
            "platform": "linux",
            "ports": [
                "8000:8000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Paperless-ng",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/paperless-ng/config",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/paperless-ng/data",
                    "container": "/data"
                }
            ]
        },
        {
            "description": "Photoshow is gallery software at its easiest, it doesn't even require a database.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "linuxserver/photoshow:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/photoshow-icon.png",
            "name": "Photoshow",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/photoshow/config<br>mkdir -p /portainer/photoshow/Pictures:ro<br>mkdir -p /portainer/photoshow/Thumbs</p>",
            "platform": "linux",
            "ports": [
                "80:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Photoshow",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/photoshow/config",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/photoshow/Pictures:ro",
                    "container": "/Pictures:ro"
                },
                {
                    "bind": "/portainer/photoshow/Thumbs",
                    "container": "/Thumbs"
                }
            ]
        },
        {
            "categories": [
                "Productivity"
            ],
            "description": "Pixapop is an open-source single page application to view your photos in the easiest way possible.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "admin",
                    "description": "Specify a username to enable authentication.",
                    "label": "APP_USERNAME",
                    "name": "APP_USERNAME"
                },
                {
                    "default": "admin",
                    "description": "Specify a password to enable authentication.",
                    "label": "APP_PASSWORD",
                    "name": "APP_PASSWORD"
                }
            ],
            "image": "linuxserver/pixapop:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pixapop.png",
            "name": "Pixapop",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/pixapop/config<br>mkdir -p /portainer/pixapop/photos</p>",
            "platform": "linux",
            "ports": [
                "80:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pixapop",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/pixapop/config",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/pixapop/photos",
                    "container": "/photos"
                }
            ]
        },
        {
            "description": "Pyload is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "linuxserver/pyload:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pyload-icon.png",
            "name": "Pyload",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/pyload/config<br>mkdir -p /portainer/pyload/downloads</p>",
            "platform": "linux",
            "ports": [
                "8000:8000/tcp",
                "7227:7227/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pyload",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/pyload/config",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/pyload/downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "description": "Scrutiny WebUI for smartd S.M.A.R.T monitoring. Scrutiny is a Hard Drive Health Dashboard & Monitoring solution, merging manufacturer provided S.M.A.R.T metrics with real-world failure rates from Backblaze.",
            "env": [
                {
                    "default": "1000",
                    "description": "for GroupID",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "description": "for UserID",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "Australia/Sydney",
                    "description": "Specify a timezone to use for example Australia/Sydney",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "http://localhost:8080",
                    "description": "# optional - API endpoint of the scrutiny UI. Do not change unless using as a remote collector",
                    "label": "SCRUTINY_API_ENDPOINT",
                    "name": "SCRUTINY_API_ENDPOINT"
                },
                {
                    "default": "true",
                    "description": "# optional - Run the web service.",
                    "label": "SCRUTINY_WEB",
                    "name": "SCRUTINY_WEB"
                },
                {
                    "default": "true",
                    "description": "# optional - Run the metrics collector.",
                    "label": "SCRUTINY_COLLECTOR",
                    "name": "SCRUTINY_COLLECTOR"
                }
            ],
            "image": "linuxserver/scrutiny:latest",
            "logo": "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/docs/dashboard.png",
            "name": "Scrutiny",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /portainer/scrutiny/config<br></p>",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Scrutiny",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/scrutiny/config",
                    "container": "/config"
                },
                {
                    "bind": "/run/udev:ro",
                    "container": "/run/udev:ro"
                }
            ]
        },
        {
            "description": "Taisun is an application for a Docker enabled device with an emphasis on providing a web based interface for managing a single server. Taisun allows you to: - Deploy and manage web based virtual desktops. - Deploy Taisun specific stacks of applications - Browse available images on popular Docker repositories - Import a Docker project from any git repository and start developing on your choice of web based IDE or full Linux desktop - Spinup a developer container based on popular frameworks and work from a web based IDE - Single click remote server access to Taisun and your Docker applications",
            "image": "linuxserver/taisun:latest",
            "logo": "https://raw.githubusercontent.com/Taisun-Docker/taisun/master/public/favicon/apple-icon-180x180.png",
            "name": "Taisun",
            "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p></p>",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Taisun",
            "type": 1,
            "volumes": [
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "category": [
                "Music"
            ],
            "description": "Libresonic is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room. /music = Location of music. /media = Location of other media. /podcasts = Location of podcasts. /playlists = Location for playlists storage. CONTEXT_PATH is for setting url-base in reverse proxy setups - (optional) Default user/pass is admin/admin",
            "env": [
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": ""
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/libresonic:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/libresonic.png",
            "platform": "linux",
            "ports": [
                "4040/tcp"
            ],
            "title": "libresonic",
            "type": 1,
            "volumes": [
                {
                    "container": "/music"
                },
                {
                    "container": "/playlists"
                },
                {
                    "container": "/podcasts"
                },
                {
                    "container": "/media"
                },
                {
                    "container": "/config"
                }
            ]
        },
        {
            "category": [
                "Music",
                "Other",
                "Tools"
            ],
            "description": "MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public.",
            "env": [
                {
                    "label": "BRAINZCODE",
                    "name": "BRAINZCODE",
                    "set": ""
                },
                {
                    "label": "WEBADDRESS",
                    "name": "WEBADDRESS",
                    "set": ""
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/musicbrainz:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/musicbrainz-icon.png",
            "platform": "linux",
            "ports": [
                "5000/tcp"
            ],
            "title": "musicbrainz",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/data"
                }
            ]
        },
        {
            "category": [
                "Web",
                "Books",
                "Tools"
            ],
            "description": "A WebApp Comic Reader for your favorite digital comics. Reach and read your comic library from any web connected device with a modern web browser",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                }
            ],
            "image": "linuxserver/gazee:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/gazee-logo.png",
            "platform": "linux",
            "ports": [
                "4242/tcp"
            ],
            "title": "gazee",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/comics"
                },
                {
                    "container": "/mylar"
                }
            ]
        },
        {
            "category": [
                "Productivity"
            ],
            "description": "Codiad is a web-based IDE framework with a small footprint and minimal requirements.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/codiad:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/codiad-icon.png",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "title": "codiad",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                }
            ]
        },
        {
            "category": [
                "Video"
            ],
            "description": "Headless installation of Kodi\u00ef\u00bf\u00bd (formerly known as XBMC\u00ef\u00bf\u00bd), to enable library updates.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/kodi-headless:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/kodi-icon.png",
            "platform": "linux",
            "ports": [
                "8080/tcp",
                "9777/udp"
            ],
            "title": "kodi-headless",
            "type": 1,
            "volumes": [
                {
                    "container": "/config/.kodi"
                }
            ]
        },
        {
            "category": [
                "Cloud",
                "Other"
            ],
            "description": "Pydio (formerly AjaXplorer) is a mature open source software solution for file sharing and synchronization. With intuitive user interfaces (web / mobile / desktop), Pydio provides enterprise-grade features to gain back control and privacy of your data: user directory connectors, legacy filesystems drivers, comprehensive admin interface, and much more.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/pydio:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/pydio-icon.png",
            "platform": "linux",
            "ports": [
                "443/tcp"
            ],
            "title": "pydio",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/data"
                }
            ]
        },
        {
            "category": [
                "Other"
            ],
            "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
            "env": [
                {
                    "label": "INTERFACE",
                    "name": "INTERFACE",
                    "set": "eth0"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/openvpn-as:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/openvpn-as-icon.png",
            "platform": "linux",
            "ports": [
                "943/tcp",
                "9443/tcp",
                "1194/udp"
            ],
            "title": "openvpn-as",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                }
            ]
        },
        {
            "category": [
                "Downloaders",
                "Books"
            ],
            "description": "An automated Comic Book downloader (cbr/cbz) for use with SABnzbd, NZBGet and torrents.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/mylar:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/mylar-icon.png",
            "platform": "linux",
            "ports": [
                "8090/tcp"
            ],
            "title": "mylar",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/downloads"
                },
                {
                    "container": "/comics"
                }
            ]
        },
        {
            "category": [
                "Tools",
                "Web"
            ],
            "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\nBefore running this container, make sure that the url and subdomains are properly forwarded to this container's host.\nPort 443 on the internet side of the router should be forwarded to this container's port 443.\nIf you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\nThe container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \nIt also detects changes to the DHLEVEL parameter and replaces the dhparams file.\nIf you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd ",
            "env": [
                {
                    "label": "EMAIL",
                    "name": "EMAIL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "URL",
                    "name": "URL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "SUBDOMAINS",
                    "name": "SUBDOMAINS",
                    "set": "www,"
                },
                {
                    "label": "ONLY_SUBDOMAINS",
                    "name": "ONLY_SUBDOMAINS",
                    "set": "false"
                },
                {
                    "label": "DHLEVEL",
                    "name": "DHLEVEL",
                    "set": "2048"
                },
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "VALIDATION",
                    "name": "VALIDATION",
                    "set": "http"
                },
                {
                    "label": "DNSPLUGIN",
                    "name": "DNSPLUGIN",
                    "set": "http"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/letsencrypt:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/letsencrypt.png",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "title": "letsencrypt",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                }
            ]
        },
        {
            "category": [
                "Downloaders"
            ],
            "description": "Popular torrent client with a webui for ease of use.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/rutorrent:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/rutorrent-icon.png",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "51413/tcp",
                "6881/udp"
            ],
            "title": "rutorrent",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/downloads"
                }
            ]
        },
        {
            "category": [
                "Other",
                "Tools"
            ],
            "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "organizrtools/organizr:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/organizr-icon.png",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "title": "Organizr",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Authentication"
            ],
            "description": "An open-source authentication and authorization server providing 2-factor authentication and single sign-on (SSO) for your applications via a web portal.",
            "env": [
                {
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "authelia/authelia:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/authelia.png",
            "name": "authelia",
            "note": "Requires a configuration.yml file in order to work. Documentation is available <a href='https://docs.authelia.com/deployment/deployment-ha'>here</a>.",
            "platform": "linux",
            "ports": [
                "9091:9091/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Authelia",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Authelia",
                    "container": "/etc/authelia/"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal.",
            "image": "vaultwarden/server:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/bitwarden.png",
            "name": "vaultwarden",
            "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
            "platform": "linux",
            "ports": [
                ":80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Vaultwarden",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Vaultwarden",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "ave recipes in seconds with plain text formatting and create beatiful recipe pages with automated ease.",
            "image": "gregyankovoy/chowdown:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/chowdown.png",
            "name": "Chowdown",
            "platform": "linux",
            "ports": [
                "4000:4000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Chowdown",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Chowdown",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Another application bookmark dashboard, with fun features.",
            "image": "rmountjoy/dashmachine:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/dashmachine_logo.png",
            "name": "dashmachine",
            "platform": "linux",
            "ports": [
                "5000:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "DashMachine",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Dashmachine",
                    "container": "/dashmachine/dashmachine/user_data"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Music"
            ],
            "description": "Deemix is a deezer downloader built from the ashes of Deezloader Remix.",
            "image": "registry.gitlab.com/bockiii/deemix-docker",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/deemix.png",
            "name": "deemix",
            "note": "Deemix may take a few minutes to install. Be sure to check the logs for details. Refer to <a href='https://notabug.org/RemixDevs/DeezloaderRemix/wiki/Login+via+userToken'>this page</a> for userToken details.",
            "platform": "linux",
            "ports": [
                "6595:6595/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "DeeMix",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/DeeMix",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Web File Browser which can be used as a middleware or standalone app.",
            "image": "80x86/filebrowser:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/filebrowser.png",
            "name": "filebrowser",
            "note": "The default user and password is admin/admin.",
            "platform": "linux",
            "ports": [
                "8082:8082/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "FileBrowser",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/FileBrowser",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Config",
                    "container": "/myfiles"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A clientless remote desktop gateway.",
            "image": "oznu/guacamole:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/guacamole.png",
            "name": "guacamole",
            "note": "The default login will be guacadmin/guacadmin. It is common practice to add a new admin user and remove the default user for Guacamole.",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Guacamole",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Guacamole",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A dead simple static HOMepage for your servER to keep your s ervices on hand, from a simple yaml configuration file.",
            "image": "b4bz/homer:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/homer.png",
            "name": "homer",
            "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer",
            "platform": "linux",
            "ports": [
                "8902:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Homer",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Homer/assets",
                    "container": "/www/assets"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Homer",
                    "container": "/www/config.yml"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Productivity",
                "Tools",
                "Other",
                "Web"
            ],
            "description": "Invoices, Expenses and Tasks built with Laravel and Flutter.",
            "env": [
                {
                    "default": "invoice.my.domain",
                    "label": "URL",
                    "name": "URL"
                },
                {
                    "label": "APP_KEY",
                    "name": "APP_KEY"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "DATABASE_PASSWORD",
                    "name": "DATABASE_PASSWORD"
                },
                {
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/invoice_ninja.png",
            "name": "invoice_ninja",
            "note": "The database user is invoice_ninja and the database is ninja_db. Please generate an app key following the documentation <a href='https://github.com/invoiceninja/dockerfiles'>here</a>. ",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/invoice-ninja.yml",
                "url": "https://github.com/Qballjos/portainer_templates"
            },
            "title": "Invoice Ninja",
            "type": 3
        },
        {
            "categories": [
                "Other"
            ],
            "description": "McMyAdmin 2 is the leading web control panel and administration console for Minecraft servers.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/mcmyadmin2:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/mcmyadmin-icon.png",
            "name": "mcmyadmin2",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp",
                "25565:25565/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "McMyAdmin 2",
            "type": 1,
            "volumes": [
                {
                    "container": "/minecraft"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Voice",
                "Chat"
            ],
            "description": "Mumble is a voicechat program for gamers written on top of Qt and Opus. Murmur is the server backend for Mumble.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "goofball222/murmur:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/Mumble-logo.png",
            "name": "murmur",
            "platform": "linux",
            "ports": [
                "64738:64738/tcp",
                "64738:64738/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Murmur",
            "type": 1,
            "volumes": [
                {
                    "bind": "/etc/localtime:ro",
                    "container": "/etc/localtime"
                },
                {
                    "bind": "/portainer/Files/Config/Murmur",
                    "container": "/opt/murmur/config"
                },
                {
                    "bind": "/portainer/Files/Murmur/data",
                    "container": "/opt/murmur/data"
                },
                {
                    "bind": "/portainer/Files/Murmur/log",
                    "container": "/opt/murmur/log"
                }
            ]
        },
        {
            "categories": [
                "Proxy",
                "Tools"
            ],
            "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt.",
            "env": [
                {
                    "default": "/data/database.sqlite",
                    "label": "DB_SQLITE_FILE",
                    "name": "DB_SQLITE_FILE"
                }
            ],
            "image": "jc21/nginx-proxy-manager",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/proxy_mgr.png",
            "name": "nginx-proxy-manager",
            "platform": "linux",
            "ports": [
                "80:80/tcp",
                "81:81/tcp",
                "443:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Nginx Proxy Manager",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/data",
                    "container": "/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Nginx-Proxy/letsencrypt",
                    "container": "/etc/letsencrypt"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Productivity",
                "Tools",
                "Other",
                "Web"
            ],
            "description": "ownCloud is a self-hosted file sync and share server. It provides access to your data through a web interface, sync clients or WebDAV while providing a platform to view, sync and share across devices easily\u2014all under your control. ownCloud\u2019s open architecture is extensible via a simple but powerful API for applications and plugins and it works with any storage.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "OWNCLOUD_DOMAIN",
                    "name": "OWNCLOUD_DOMAIN"
                },
                {
                    "label": "DB_PASSWORD",
                    "name": "DB_PASSWORD"
                },
                {
                    "label": "ADMIN_USERNAME",
                    "name": "ADMIN_USERNAME"
                },
                {
                    "label": "ADMIN_PASSWORD",
                    "name": "ADMIN_PASSWORD"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/docker-library/docs/9d36b4ed7cabc35dbd3849272ba2bd7abe482172/owncloud/logo.png",
            "name": "Owncloud",
            "note": "The database user is owncloud and the database is owncloud.",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/owncloud.yml",
                "url": "https://github.com/Qballjos/portainer_templates"
            },
            "title": "Owncloud",
            "type": 3
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Petio is a third party companion app available to Plex server owners to allow their users to request, review and discover content.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/petio-icon.png",
            "name": "Petio",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/petio.yml",
                "url": "https://github.com/Qballjos/portainer_templates"
            },
            "title": "Petio",
            "type": 3
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole.",
            "image": "pihole/pihole:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/pihole.png",
            "name": "pihole",
            "note": "When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
            "platform": "linux",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "1010:80/tcp",
                "4443:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pi-Hole",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole",
                    "container": "/etc/pihole"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
                    "container": "/etc/dnsmasq.d"
                }
            ]
        },
        {
            "categories": [
                "Downloaders",
                "Other",
                "Video",
                "Tools"
            ],
            "description": "Simple automated way for users to request new content for Plex.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "URL_BASE",
                    "name": "URL_BASE",
                    "set": ""
                }
            ],
            "image": "linuxserver/plexrequests:latest",
            "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/plexrequests-icon.png",
            "name": "plexrequests",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Plex Requests",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PlexRequests",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Email",
                "Productivity",
                "Tools",
                "Other"
            ],
            "description": "This is an unofficial Docker container of the ProtonMail Bridge. Some of the scripts are based on Hendrik Meyer's work.",
            "image": "shenxn/protonmail-bridge:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/protonmail-bridge.png",
            "name": "protonmail-bridge",
            "note": "Please refer to the documentation <a href='https://hub.docker.com/r/shenxn/protonmail-bridge'/>here</a> to set this up.",
            "platform": "linux",
            "ports": [
                "143/tcp",
                "25/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "ProtonMail Bridge",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/ProtonMail-Bridge",
                    "container": "/root"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A one-of-a-kind resume builder that's not out to get your data. Completely secure, customizable, portable, open-source and free forever.",
            "image": "amruthpillai/reactive-resume:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/reactiveresume.png",
            "name": "reactive-resume",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Reactive-Resume",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/ReactiveResume",
                    "container": "/usr/src/app"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Shiori is a simple bookmarks manager written in Go language. Intended as a simple clone of Pocket. You can use it as command line application or as web application.",
            "image": "radhifadlillah/shiori:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/shiori-icon.png",
            "name": "shiori",
            "platform": "linux",
            "ports": [
                "8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Shiori",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Shiori",
                    "container": "/srv/shiori"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Self-hosted snippet manager.",
            "image": "snowmean/snibox-sqlite:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/snibox.png",
            "name": "Snibox",
            "note": "Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
            "platform": "linux",
            "ports": [
                "3010:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Snibox",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Snibox",
                    "container": "/app/db/database"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A unique, non-linear notebook wiki.",
            "image": "mazzolino/tiddlywiki:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tiddlywiki.png",
            "name": "tiddlywiki",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "TiddlyWiki",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/TiddlyWiki",
                    "container": "/var/lib/tiddlywiki"
                }
            ]
        },
        {
            "categories": [
                "Other"
            ],
            "description": "Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "lunik1/tt-rss:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/tt-rss-icon.png",
            "name": "tt-rss",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Tiny Tiny RSS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/tt-rss",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "VPN",
                "Tools"
            ],
            "description": "This container contains OpenVPN and Transmission with a configuration where Transmission is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "MULLVAD",
                    "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
                    "label": "OPENVPN_PROVIDER",
                    "name": "OPENVPN_PROVIDER"
                },
                {
                    "default": "",
                    "label": "OPENVPN_USERNAME",
                    "name": "OPENVPN_USERNAME"
                },
                {
                    "default": "",
                    "label": "OPENVPN_PASSWORD",
                    "name": "OPENVPN_PASSWORD"
                },
                {
                    "default": "192.168.0.0/24",
                    "label": "LOCAL_NETWORK",
                    "name": "LOCAL_NETWORK"
                }
            ],
            "image": "haugene/transmission-openvpn:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/transmission-icon.png",
            "name": "transmission-openvpn",
            "note": "List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
            "platform": "linux",
            "ports": [
                "9091:9091/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Transmission-OpenVPN",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Downloads",
                    "container": "/data"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Maintenance"
            ],
            "description": "With watchtower you can update the running version of your containerized app simply by pushing a new image to the Docker Hub or your own image registry. Watchtower will pull down your new image, gracefully shut down your existing container and restart it with the same options that were used when it was deployed initially.",
            "image": "containrrr/watchtower:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/watchtower.png",
            "name": "watchtower",
            "note": "It is recommended to manually update your containers but we're including this for those of you that don't care",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Watchtower",
            "type": 1,
            "volumes": [
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Self-hosted, ad-free, privacy-respecting Google metasearch engine.",
            "image": "benbusby/whoogle-search:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/whoogle.png",
            "name": "whoogle",
            "platform": "linux",
            "ports": [
                "5001:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Whoogle",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Whoogle",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A web interface for managing docker containers with an emphasis on templating to provide 1 click deployments. Think of it like a decentralized app store for servers that anyone can make packages for.",
            "image": "selfhostedpro/yacht:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/Yacht/master/readme_media/Yacht_logo_1_dark.png",
            "name": "yacht",
            "platform": "linux",
            "ports": [
                "8001:8000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Yacht",
            "type": 1,
            "volumes": [
                {
                    "bind": "yacht",
                    "container": "/config"
                },
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Downloaders"
            ],
            "description": "YoutubeDL-Material is a Material Design frontend for youtube-dl. It's coded using Angular 9 for the frontend, and Node.js on the backend.",
            "image": "tzahi12345/youtubedl-material:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/ytdlm.png",
            "name": "youtubedl-material",
            "platform": "linux",
            "ports": [
                "17442:17442/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "YouTubeDL-Material",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/YTDLM",
                    "container": "/app/appdata"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Video",
                    "container": "/app/video"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Subscriptions",
                    "container": "/app/subscriptions"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Users",
                    "container": "/app/users"
                },
                {
                    "bind": "/portainer/Files/AppData/Youtube/Audio",
                    "container": "/app/audio"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "This is a Bitwarden server API implementation written in Rust compatible with upstream Bitwarden clients*, perfect for self-hosted deployment where running the official resource-heavy service might not be ideal..",
            "image": "bitwardenrs/server:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/bitwarden.png",
            "name": "bitwardenrs",
            "note": "This project is not associated with the Bitwarden project nor 8bit Solutions LLC.",
            "platform": "linux",
            "ports": [
                ":80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Bitwarden RS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Bitwarden-rs",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "webserver"
            ],
            "description": "HTTP/2 web server with automatic HTTPS",
            "image": "abiosoft/caddy:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp",
                "2015/tcp"
            ],
            "title": "Caddy",
            "type": 1,
            "volumes": [
                {
                    "container": "/root/.caddy"
                }
            ]
        },
        {
            "categories": [
                "database"
            ],
            "description": "CockroachDB cluster",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
            "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/cockroachdb/docker-stack.yml",
                "url": "https://github.com/mikestraney/portainer-templates"
            },
            "title": "CockroachDB",
            "type": 2
        },
        {
            "categories": [
                "development"
            ],
            "description": "ColdFusion (CFML) CLI",
            "env": [
                {
                    "name": "CFENGINE",
                    "set": "lucee@4.5"
                }
            ],
            "image": "ortussolutions/commandbox:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
            "platform": "linux",
            "ports": [
                "8080/tcp",
                "8443/tcp"
            ],
            "title": "CommandBox",
            "type": 1
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "Open-source modular CMS",
            "env": [
                {
                    "name": "express",
                    "set": "true"
                },
                {
                    "name": "install",
                    "set": "true"
                },
                {
                    "name": "CFENGINE",
                    "set": "lucee@4.5"
                }
            ],
            "image": "ortussolutions/contentbox:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
            "platform": "linux",
            "ports": [
                "8080/tcp",
                "8443/tcp"
            ],
            "title": "ContentBox",
            "type": 1,
            "volumes": [
                {
                    "container": "/data/contentbox/db"
                },
                {
                    "container": "/app/includes/shared/media"
                }
            ]
        },
        {
            "categories": [
                "database"
            ],
            "description": "An open-source distributed SQL database",
            "image": "crate:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
            "platform": "linux",
            "ports": [
                "4200/tcp",
                "4300/tcp"
            ],
            "title": "CrateDB",
            "type": 1,
            "volumes": [
                {
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Monitoring"
            ],
            "description": "Collect events and metrics",
            "env": [
                {
                    "label": "Datadog API key",
                    "name": "DD_API_KEY"
                }
            ],
            "image": "datadog/agent:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
            "platform": "linux",
            "title": "Datadog agent",
            "type": 1,
            "volumes": [
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock",
                    "readonly": true
                },
                {
                    "bind": "/sys/fs/cgroup",
                    "container": "/host/sys/fs/cgroup",
                    "readonly": true
                },
                {
                    "bind": "/proc",
                    "container": "/host/proc",
                    "readonly": true
                }
            ]
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "Open-source content management framework",
            "image": "drupal:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "title": "Drupal",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/www/html"
                }
            ]
        },
        {
            "categories": [
                "database"
            ],
            "description": "Open-source search and analytics engine",
            "image": "elasticsearch:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
            "platform": "linux",
            "ports": [
                "9200/tcp",
                "9300/tcp"
            ],
            "title": "Elasticsearch",
            "type": 1,
            "volumes": [
                {
                    "container": "/usr/share/elasticsearch/data"
                }
            ]
        },
        {
            "categories": [
                "blog"
            ],
            "description": "Free and open-source blogging platform",
            "image": "ghost:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
            "note": "Access the blog management interface under <code>/ghost/</code>.",
            "platform": "linux",
            "ports": [
                "2368/tcp"
            ],
            "title": "Ghost",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/lib/ghost/content"
                }
            ]
        },
        {
            "categories": [
                "development",
                "project-management"
            ],
            "description": "Open-source end-to-end software development platform",
            "image": "gitlab/gitlab-ce:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
            "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp",
                "22/tcp"
            ],
            "title": "Gitlab CE",
            "type": 1,
            "volumes": [
                {
                    "container": "/etc/gitlab"
                },
                {
                    "container": "/var/log/gitlab"
                },
                {
                    "container": "/var/opt/gitlab"
                }
            ]
        },
        {
            "categories": [
                "Video",
                "Music",
                "Other"
            ],
            "description": "HTPC Manaager, a front end for many htpc related applications. Hellowlol version.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/htpcmanager:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/htpcmanager-icon.png",
            "name": "htpcmanager",
            "platform": "linux",
            "ports": [
                "8085:8085/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "HTPC Manager",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/HTPCmanager",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "webserver"
            ],
            "description": "Open-source HTTP server",
            "image": "httpd:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "title": "Httpd",
            "type": 1,
            "volumes": [
                {
                    "container": "/usr/local/apache2/htdocs/"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Create agents that monitor and act on your behalf.",
            "image": "huginn/huginn:latest",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/huginn.png",
            "name": "huginn",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Huginn",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/huginn",
                    "container": "/var/lib/mysql"
                }
            ]
        },
        {
            "categories": [
                "serverless"
            ],
            "description": "Open-source serverless computing platform",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
            "note": "Deploys the IronFunctions API and UI.",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/ironfunctions/docker-stack.yml",
                "url": "https://github.com/mikestraney/portainer-templates"
            },
            "title": "IronFunctions",
            "type": 2
        },
        {
            "categories": [
                "serverless"
            ],
            "description": "Open-source serverless computing platform",
            "image": "iron/functions:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
            "platform": "linux",
            "ports": [
                "8080/tcp"
            ],
            "privileged": true,
            "title": "IronFunctions API",
            "type": 1,
            "volumes": [
                {
                    "container": "/app/data"
                }
            ]
        },
        {
            "categories": [
                "serverless"
            ],
            "description": "Open-source user interface for IronFunctions",
            "env": [
                {
                    "label": "API URL",
                    "name": "API_URL"
                }
            ],
            "image": "iron/functions-ui:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
            "platform": "linux",
            "ports": [
                "4000/tcp"
            ],
            "privileged": true,
            "title": "IronFunctions UI",
            "type": 1,
            "volumes": [
                {
                    "container": "/app/data"
                }
            ]
        },
        {
            "categories": [
                "continuous-integration"
            ],
            "description": "Open-source continuous integration tool",
            "env": [
                {
                    "label": "Jenkins options",
                    "name": "JENKINS_OPTS"
                }
            ],
            "image": "jenkins/jenkins:lts",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
            "platform": "linux",
            "ports": [
                "8080/tcp",
                "50000/tcp"
            ],
            "title": "Jenkins",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/jenkins_home"
                }
            ]
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "Another free and open-source CMS",
            "env": [
                {
                    "label": "MySQL database host",
                    "name": "JOOMLA_DB_HOST",
                    "type": "container"
                },
                {
                    "label": "Database password",
                    "name": "JOOMLA_DB_PASSWORD"
                }
            ],
            "image": "joomla:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "title": "Joomla",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/www/html"
                }
            ]
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "Open-source e-commerce platform",
            "image": "alankent/gsd:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/magento.png",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "3000/tcp",
                "3001/tcp"
            ],
            "title": "Magento 2",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/www/html/"
                }
            ]
        },
        {
            "categories": [
                "marketing"
            ],
            "description": "Open-source marketing automation platform",
            "env": [
                {
                    "label": "MySQL database host",
                    "name": "MAUTIC_DB_HOST",
                    "type": "container"
                },
                {
                    "label": "Database password",
                    "name": "MAUTIC_DB_PASSWORD"
                }
            ],
            "image": "mautic/mautic:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "title": "Mautic",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/www/html"
                }
            ]
        },
        {
            "categories": [
                "OPS"
            ],
            "description": "Microsoft Operations Management Suite Linux agent.",
            "env": [
                {
                    "description": "Azure Workspace ID",
                    "label": "Workspace ID",
                    "name": "AZURE_WORKSPACE_ID"
                },
                {
                    "description": "Azure primary key",
                    "label": "Primary key",
                    "name": "AZURE_PRIMARY_KEY"
                }
            ],
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/microsoft-oms/docker-stack.yml",
                "url": "https://github.com/mikestraney/portainer-templates"
            },
            "title": "Microsoft OMS Agent",
            "type": 2
        },
        {
            "categories": [
                "storage"
            ],
            "command": "server /data",
            "description": "A distributed object storage server built for cloud applications and devops",
            "env": [
                {
                    "label": "Minio access key",
                    "name": "MINIO_ACCESS_KEY"
                },
                {
                    "label": "Minio secret key",
                    "name": "MINIO_SECRET_KEY"
                }
            ],
            "image": "minio/minio:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
            "platform": "linux",
            "ports": [
                "9000/tcp"
            ],
            "title": "Minio",
            "type": 1,
            "volumes": [
                {
                    "container": "/data"
                },
                {
                    "container": "/root/.minio"
                }
            ]
        },
        {
            "categories": [
                "serverless"
            ],
            "description": "Serverless functions made simple",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
            "name": "func",
            "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
            "platform": "linux",
            "repository": {
                "stackfile": "docker-compose.yml",
                "url": "https://github.com/openfaas/faas"
            },
            "title": "OpenFaaS",
            "type": 2
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "WebOps platform and hosting control panel",
            "image": "plesk/plesk:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plesk.png",
            "note": "Default credentials: admin / changeme",
            "platform": "linux",
            "ports": [
                "21/tcp",
                "80/tcp",
                "443/tcp",
                "8880/tcp",
                "8443/tcp",
                "8447/tcp"
            ],
            "title": "Plesk",
            "type": 1
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "A free and open-source CMS built on top of Zope",
            "image": "plone:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
            "platform": "linux",
            "ports": [
                "8080/tcp"
            ],
            "title": "Plone",
            "type": 1,
            "volumes": [
                {
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "portainer"
            ],
            "description": "Manage all the resources in your Swarm cluster",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
            "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/portainer-agent/docker-stack.yml",
                "url": "https://github.com/mikestraney/portainer-templates"
            },
            "title": "Portainer Agent",
            "type": 2
        },
        {
            "categories": [
                "database"
            ],
            "description": "The most advanced open-source database",
            "env": [
                {
                    "label": "Superuser",
                    "name": "POSTGRES_USER"
                },
                {
                    "label": "Superuser password",
                    "name": "POSTGRES_PASSWORD"
                }
            ],
            "image": "postgres:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
            "platform": "linux",
            "ports": [
                "5432/tcp"
            ],
            "title": "PostgreSQL",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/lib/postgresql/data"
                }
            ]
        },
        {
            "categories": [
                "database"
            ],
            "description": "Open-source in-memory data structure store",
            "image": "redis:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
            "platform": "linux",
            "ports": [
                "6379/tcp"
            ],
            "title": "Redis",
            "type": 1,
            "volumes": [
                {
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "project-management"
            ],
            "description": "Open-source project management tool",
            "image": "redmine:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
            "platform": "linux",
            "ports": [
                "3000/tcp"
            ],
            "title": "Redmine",
            "type": 1,
            "volumes": [
                {
                    "container": "/usr/src/redmine/files"
                }
            ]
        },
        {
            "categories": [
                "docker"
            ],
            "description": "Docker image registry",
            "image": "registry:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
            "platform": "linux",
            "ports": [
                "5000/tcp"
            ],
            "title": "Registry",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/lib/registry"
                }
            ]
        },
        {
            "categories": [
                "storage"
            ],
            "description": "Standalone AWS S3 protocol server",
            "env": [
                {
                    "label": "Scality S3 access key",
                    "name": "SCALITY_ACCESS_KEY"
                },
                {
                    "label": "Scality S3 secret key",
                    "name": "SCALITY_SECRET_KEY"
                }
            ],
            "image": "scality/s3server",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
            "platform": "linux",
            "ports": [
                "8000/tcp"
            ],
            "title": "Scality S3",
            "type": 1,
            "volumes": [
                {
                    "container": "/usr/src/app/localData"
                },
                {
                    "container": "/usr/src/app/localMetadata"
                }
            ]
        },
        {
            "categories": [
                "Log Management",
                "Monitoring"
            ],
            "description": "Collect logs, metrics and docker events",
            "env": [
                {
                    "label": "Logs token",
                    "name": "LOGSENE_TOKEN"
                },
                {
                    "label": "SPM monitoring token",
                    "name": "SPM_TOKEN"
                }
            ],
            "image": "sematext/sematext-agent-docker:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
            "name": "sematext-agent",
            "platform": "linux",
            "privileged": true,
            "title": "Sematext Docker Agent",
            "type": 1,
            "volumes": [
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "search-engine"
            ],
            "description": "Open-source enterprise search platform",
            "image": "solr:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
            "platform": "linux",
            "ports": [
                "8983/tcp"
            ],
            "title": "Solr",
            "type": 1,
            "volumes": [
                {
                    "container": "/opt/solr/mydata"
                }
            ]
        },
        {
            "categories": [
                "database"
            ],
            "description": "Microsoft SQL Server on Linux",
            "env": [
                {
                    "name": "ACCEPT_EULA",
                    "set": "Y"
                },
                {
                    "label": "SA password",
                    "name": "SA_PASSWORD"
                }
            ],
            "image": "microsoft/mssql-server-linux:2017-GA",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
            "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
            "platform": "linux",
            "ports": [
                "1433/tcp"
            ],
            "title": "SQL Server",
            "type": 1
        },
        {
            "categories": [
                "database"
            ],
            "description": "Microsoft SQL Server Express for Windows containers",
            "env": [
                {
                    "name": "ACCEPT_EULA",
                    "set": "Y"
                },
                {
                    "label": "SA password",
                    "name": "sa_password"
                }
            ],
            "image": "microsoft/mssql-server-windows-express:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
            "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
            "platform": "windows",
            "ports": [
                "1433/tcp"
            ],
            "title": "SQL Server Express",
            "type": 1,
            "volumes": [
                {
                    "container": "C:/temp/"
                }
            ]
        },
        {
            "categories": [
                "backup"
            ],
            "description": "Open-source network backup",
            "image": "cfstras/urbackup",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/urbackup.png",
            "note": "This application web interface is exposed on the port 55414 inside the container.",
            "platform": "linux",
            "ports": [
                "55413/tcp",
                "55414/tcp",
                "55415/tcp",
                "35622/tcp"
            ],
            "title": "Urbackup",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/urbackup"
                }
            ]
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "Wordpress setup with a MySQL database",
            "env": [
                {
                    "description": "Password used by the MySQL root user.",
                    "label": "Database root password",
                    "name": "MYSQL_DATABASE_PASSWORD"
                }
            ],
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
            "note": "Deploys a Wordpress instance connected to a MySQL database.",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/wordpress/docker-stack.yml",
                "url": "https://github.com/mikestraney/portainer-templates"
            },
            "title": "Wordpress",
            "type": 2
        },
        {
            "categories": [
                "streaming"
            ],
            "description": "Streaming media server",
            "env": [
                {
                    "label": "Agree to Wowza EULA",
                    "name": "WOWZA_ACCEPT_LICENSE",
                    "set": "yes"
                },
                {
                    "label": "License key",
                    "name": "WOWZA_KEY"
                }
            ],
            "image": "sameersbn/wowza:4.1.2-8",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wowza.png",
            "platform": "linux",
            "ports": [
                "1935/tcp",
                "8086/tcp",
                "8087/tcp",
                "8088/tcp"
            ],
            "title": "Wowza",
            "type": 1,
            "volumes": [
                {
                    "container": "/var/lib/wowza"
                }
            ]
        },
        {
            "type": 1,
            "title": "Registry (cache)",
            "description": "Docker image registry configured as a DockerHub pull through cache",
            "categories": [
                "docker"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
            "image": "registry:latest",
            "ports": [
                "5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/registry"
                }
            ],
            "env": [
                {
                    "name": "REGISTRY_PROXY_REMOTEURL",
                    "default": "https://registry-1.docker.io",
                    "preset": true
                }
            ]
        },
        {
            "type": 1,
            "title": "Ubuntu",
            "description": "Debian-based Linux operating system",
            "categories": [
                "operating-system"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
            "image": "ubuntu:latest",
            "interactive": true,
            "command": "/bin/bash"
        },
        {
            "type": 1,
            "title": "NodeJS",
            "description": "JavaScript-based platform for server-side and networking applications",
            "categories": [
                "development"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
            "image": "node:latest",
            "interactive": true,
            "command": "/bin/bash"
        },
        {
            "type": 1,
            "title": "MySQL",
            "description": "The most popular open-source database",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
            "image": "mysql/mysql-server:5.7",
            "env": [
                {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "label": "Root password"
                },
                {
                    "name": "MYSQL_ROOT_HOST",
                    "default": "%",
                    "preset": true
                }
            ],
            "ports": [
                "3306/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/mysql"
                }
            ]
        },
        {
            "type": 1,
            "title": "Mongo",
            "description": "Open-source document-oriented database",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
            "image": "mongo:latest",
            "ports": [
                "27017/tcp"
            ],
            "volumes": [
                {
                    "container": "/data/db"
                }
            ]
        },
        {
            "type": 2,
            "title": "Redis Cluster",
            "description": "Open-source in-memory data structure store - Cluster mode",
            "categories": [
                "database"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/redis-cluster/docker-stack.yaml"
            },
            "env": [
                {
                    "name": "REDIS_PASSWD",
                    "label": "Redis password"
                }
            ]
        },
        {
            "type": 1,
            "title": "RabbitMQ",
            "description": "Highly reliable enterprise messaging system",
            "categories": [
                "messaging"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
            "image": "rabbitmq:latest",
            "ports": [
                "5671/tcp",
                "5672/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/rabbitmq"
                }
            ]
        },
        {
            "type": 1,
            "title": "File browser",
            "description": "A web file manager",
            "note": "Default credentials: admin/admin",
            "categories": [
                "filesystem",
                "storage"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/filebrowser.png",
            "image": "filebrowser/filebrowser:latest",
            "ports": [
                "80/tcp"
            ],
            "volumes": [
                {
                    "container": "/data"
                },
                {
                    "container": "/srv"
                }
            ],
            "command": "--port 80 --database /data/database.db --root /srv"
        },
        {
            "type": 1,
            "title": "Dokku",
            "description": "Dokku setup as a container",
            "categories": [
                "PaaS"
            ],
            "platform": "linux",
            "logo": "",
            "image": "dokku/dokku",
            "ports": [
                "22/tcp",
                "80/tcp",
                "443/tcp"
            ],
            "volumes": [
                {
                    "container": "/mnt/dokku",
                    "bind": "/var/lib/dokku"
                },
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock"
                }
            ],
            "env": [
                {
                    "name": "DOKKU_HOSTNAME",
                    "label": "Dokku hostname",
                    "description": "Global hostname to be registered by Dokku"
                },
                {
                    "name": "DOKKU_HOST_ROOT",
                    "label": "Dokku host root",
                    "default": "/var/lib/dokku/home/dokku",
                    "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
                }
            ]
        },
        {
            "type": 1,
            "title": "Floating License Server",
            "description": "License Server for Softing edgeConnector products",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/floating-license-server:latest",
            "ports": [
                "6200/tcp"
            ],
            "interactive": true,
            "volumes": [
                {
                    "container": "/licsrv/licenses"
                }
            ]
        },
        {
            "type": 1,
            "title": "EdgeConnector Modbus",
            "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
            "image": "softingindustrial/edgeconnector-modbus:latest",
            "ports": [
                "443/tcp",
                "8099/tcp",
                "4897/tcp"
            ]
        },
        {
            "type": 3,
            "title": "OpenAMT",
            "description": "OpenAMT Cloud Toolkit",
            "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
            "categories": [
                "Cloud"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/openamt/docker-compose.yml"
            },
            "env": [
                {
                    "name": "POSTGRES_USER",
                    "label": "Database user"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Database password"
                },
                {
                    "name": "MPS_USER",
                    "label": "MPS user"
                },
                {
                    "name": "MPS_PASSWORD",
                    "label": "MPS password"
                },
                {
                    "name": "MPS_COMMON_NAME",
                    "label": "MPS URL",
                    "description": "Used to connect to the MPS API."
                },
                {
                    "name": "MPS_SECRET",
                    "label": "MPS Secret",
                    "description": "Strong secret key used to log into MPS."
                },
                {
                    "name": "VAULT_SECRET",
                    "label": "Vault secret",
                    "description": "Secret token used to log into Vault (don't include '.' character)."
                }
            ]
        },
        {
            "type": 4,
            "title": "Softing EdgeConnector modbus",
            "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
            "note": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
            "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/stacks/softing-edgeconnector-modbus/docker-compose.yml"
        },
        {
            "type": 3,
            "title": "FDO",
            "description": "FDO",
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/fdo/docker-stack.yml"
            },
            "env": [
                {
                    "name": "owner_api_user",
                    "label": "API Username"
                },
                {
                    "name": "owner_api_password",
                    "label": "API Password"
                }
            ]
        },
        {
            "type": 2,
            "title": "LiveSwitch",
            "description": "A basic LiveSwitch stack with gateway, caching, database and media server",
            "categories": [
                "media"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/liveswitch/docker-stack.yml"
            },
            "env": [
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Postgres password"
                }
            ]
        },
        {
            "type": 3,
            "title": "TOSIBOX Lock for Container",
            "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
            "categories": [
                "edge"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
            "repository": {
                "url": "https://github.com/portainer/templates",
                "stackfile": "stacks/tosibox/docker-compose.yml"
            },
            "env": [
                {
                    "name": "LICENSE_KEY",
                    "label": "License key"
                }
            ]
        },
        {
            "type": 3,
            "title": "Budibase",
            "categories": [
                "Tools"
            ],
            "description": "Build modern business apps in minutes",
            "logo": "https://budibase.com/favicon.ico",
            "platform": "linux",
            "repository": {
                "url": "https://github.com/Budibase/budibase",
                "stackfile": "hosting/docker-compose.yaml"
            },
            "env": [
                {
                    "name": "MAIN_PORT",
                    "label": "Main port",
                    "default": "10000"
                },
                {
                    "name": "JWT_SECRET",
                    "label": "JWT secret",
                    "default": "change-me"
                },
                {
                    "name": "MINIO_ACCESS_KEY",
                    "label": "MinIO access key",
                    "default": "change-me"
                },
                {
                    "name": "MINIO_SECRET_KEY",
                    "label": "MinIO secret key",
                    "default": "change-me"
                },
                {
                    "name": "COUCH_DB_USER",
                    "default": "budibase",
                    "preset": true
                },
                {
                    "name": "COUCH_DB_PASSWORD",
                    "label": "Couch DB password",
                    "default": "change-me"
                },
                {
                    "name": "REDIS_PASSWORD",
                    "label": "Redis password",
                    "default": "change-me"
                },
                {
                    "name": "INTERNAL_API_KEY",
                    "label": "Internal API key",
                    "default": "change-me"
                },
                {
                    "name": "APP_PORT",
                    "default": "4002",
                    "preset": true
                },
                {
                    "name": "WORKER_PORT",
                    "default": "4003",
                    "preset": true
                },
                {
                    "name": "MINIO_PORT",
                    "default": "4004",
                    "preset": true
                },
                {
                    "name": "COUCH_DB_PORT",
                    "default": "4005",
                    "preset": true
                },
                {
                    "name": "REDIS_PORT",
                    "default": "6379",
                    "preset": true
                },
                {
                    "name": "WATCHTOWER_PORT",
                    "default": "6161",
                    "preset": true
                },
                {
                    "name": "BUDIBASE_ENVIRONMENT",
                    "default": "PRODUCTION",
                    "preset": true
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Code-server is VS Code running on a remote server, accessible through the browser.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "GUID"
                },
                {
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "PASSWORD",
                    "name": "PASSWORD"
                },
                {
                    "label": "SUDO_PASSWORD",
                    "name": "SUDO_PASSWORD"
                },
                {
                    "default": "example.my.domain",
                    "label": "PROXY_DOMAIN",
                    "name": "PROXY_DOMAIN"
                }
            ],
            "image": "linuxserver/code-server:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/code-server.png",
            "name": "code-server",
            "platform": "linux",
            "ports": [
                "8443:8443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Code Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Code-Server",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "DNS",
                "Tools"
            ],
            "description": "Duck DNS is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.",
            "env": [
                {
                    "label": "SUBDOMAINS",
                    "name": "SUBDOMAINS",
                    "set": ""
                },
                {
                    "label": "TOKEN",
                    "name": "TOKEN",
                    "set": ""
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/duckdns:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/duckdns.png",
            "name": "duckdns",
            "note": "<b>Configuration</b></br>First, go to duckdns site, register your subdomain and retrieve your token<br/>Then run the docker create command above with your subdomain(s) and token<br/>It will update your IP with the DuckDNS service every 5 minutes",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Duck DNS",
            "type": 1
        },
        {
            "categories": [
                "Video"
            ],
            "description": "Headless installation of Kodi\u2122 (formerly known as XBMC\u2122), to enable library updates.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/kodi-headless:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/kodi-icon.png",
            "name": "kodi-headless",
            "platform": "linux",
            "ports": [
                "8080/tcp",
                "9777/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Kodi Headless",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Kodi",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Web"
            ],
            "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.",
            "env": [
                {
                    "label": "EMAIL",
                    "name": "EMAIL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "URL",
                    "name": "URL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "SUBDOMAINS",
                    "name": "SUBDOMAINS",
                    "set": "www,"
                },
                {
                    "label": "ONLY_SUBDOMAINS",
                    "name": "ONLY_SUBDOMAINS",
                    "set": "false"
                },
                {
                    "label": "DHLEVEL",
                    "name": "DHLEVEL",
                    "set": "2048"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "VALIDATION",
                    "name": "VALIDATION",
                    "set": "http"
                },
                {
                    "label": "DNSPLUGIN",
                    "name": "DNSPLUGIN",
                    "set": "http"
                }
            ],
            "image": "linuxserver/swag:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/letsencrypt.png",
            "name": "letsencrypt / SWAG",
            "note": "Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.<ul><li>- Port 443 on the internet side of the router should be forwarded to this container's port 443.</li><li>- If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains can be www,ftp,cloud</li><li>- The container detects changes to url and subdomains, revokes existing certs and generates new ones during start.</li><li>- It also detects changes to the DHLEVEL parameter and replaces the dhparams file.</li><li>- If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file <code>docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;</code>",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Let's Encrypt / SWAG",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/LetsEncrypt",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Downloaders",
                "Other",
                "Tools"
            ],
            "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/nzbhydra2:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/hydra-icon.png",
            "name": "nzbhydra2",
            "platform": "linux",
            "ports": [
                "5076:5076/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "NZBHydra 2",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Nzbhydra2",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "categories": [
                "Other"
            ],
            "description": "OpenVPN Access Server is a full featured secure network tunneling VPN software solution that integrates OpenVPN server capabilities, enterprise management capabilities, simplified OpenVPN Connect UI, and OpenVPN Client software packages that accommodate Windows, MAC, Linux, Android, and iOS environments.",
            "env": [
                {
                    "label": "INTERFACE",
                    "name": "INTERFACE",
                    "set": "eth0"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/openvpn-as:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/openvpn-as-icon.png",
            "name": "openvpn-as",
            "platform": "linux",
            "ports": [
                "943:943/tcp",
                "9443:9443/tcp",
                "1194:1194/udp"
            ],
            "restart_policy": "unless-stopped",
            "title": "OpenVPN Access Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/OpenVPN-AS",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Messenger"
            ],
            "description": "Quassel IRC is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core - much like the popular combination of screen and a text-based IRC client such as WeeChat, but graphical. Blowfish support and optional web-ui included.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/quassel-core:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/quassel-core-icon.png",
            "name": "quassel-core",
            "platform": "linux",
            "ports": [
                "4242:4242/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Quassel IRC",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Quassel-core",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Backup",
                "Cloud",
                "Other",
                "Tools"
            ],
            "description": "Resilio Sync (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/resilio-sync:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/resilio.png",
            "name": "resilio-sync",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Resilio Sync",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Resilio-Sync",
                    "container": "/config"
                },
                {
                    "container": "/sync"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "categories": [
                "Management",
                "Tools"
            ],
            "description": "The Unifi-controller Controller software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/unifi-controller:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/unifi-icon.png",
            "name": "unifi-controller",
            "platform": "linux",
            "ports": [
                "3478:3478/udp",
                "10001:10001/udp",
                "8080:8080/tcp",
                "8081:8081/tcp",
                "8443:8443/tcp",
                "8843:8843/tcp",
                "8880:8880/tcp",
                "6789:6789/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "UniFi Controller",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Unifi",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "WebGrab+Plus is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/webgrabplus:latest",
            "logo": "https://raw.githubusercontent.com/Qballjos/portainer_templates/master/Images/webgrabplus.png",
            "name": "webgrabplus",
            "note": "Configuration <ul><li><b>/config</b> - This is where WebGrab+Plus will store it's configuration</li><li><b>/data</b> - This is where tv_grab_wg script in the Tvheadend container looks for the guide.xml file.</li></ul>",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "WebGrab+Plus",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/WebGrabPlus",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/WebGrabPlus",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Authentication Server"
            ],
            "description": "Authentik is an open-source Identity Provider focused on flexibility and versatility",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/mycroftwilde/portainer_templates/master/Images/goauthentik.png",
            "name": "Authentik",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/authentik.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Authentik",
            "type": 3
        },
        {
            "categories": [
                "Management Utility Server"
            ],
            "description": "Remote Management Server",
            "env": [
                {
                    "default": "/portainer/Files/AppData/MeshCentral/Config",
                    "label": "Config Container Bind",
                    "name": "CONFIG"
                },
                {
                    "default": "/portainer/Files/AppData/MeshCentral/Files",
                    "label": "Files Container Bind",
                    "name": "FILES"
                },
                {
                    "default": "/portainer/Files/AppData/MeshCentral/Backup",
                    "label": "Backup Container Bind",
                    "name": "BACK"
                },
                {
                    "default": "443",
                    "label": "Container Port 443",
                    "name": "PORT4"
                },
                {
                    "default": "80",
                    "label": "Container Port 80",
                    "name": "PORT8"
                }
            ],
            "logo": "https://raw.githubusercontent.com/mycroftwilde/portainer_templates/master/Images/meshc.png",
            "note": "MeshCentral",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/mesh.yml",
                "url": "https://github.com/mycroftwilde/portainer_templates"
            },
            "title": "MeshCentral",
            "type": 3
        },
        {
            "categories": [
                "Dashboard Server"
            ],
            "description": "Freeboard is a turn-key HTML-based 'engine' for dashboards. Besides a nice looking layout engine, it provides a plugin architecture for creating datasources (which fetch data) and widgets (which display data)\u2014 freeboard then does all the work to connect the two together.",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/freeboard.jpg",
            "name": "freeboard",
            "repository": {
                "stackfile": "Template/Stack/freeboard.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "platform": "linux",
            "ports": [
                "8000:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Freeboard",
            "type": 3
        },
        {
            "categories": [
                "Finance Server"
            ],
            "description": "Ghostfolio is an open source wealth management software built with web technology.",
            "logo": "https://avatars.githubusercontent.com/u/82473144?s=200",
            "name": "Ghostfolio",
            "repository": {
                "stackfile": "Template/Stack/ghostfolio.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "platform": "linux",
            "ports": [
                "3663:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Ghostfolio",
            "type": 3
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "A self-hosted bookmark management tool.",
            "logo": "https://github.com/beromir/Servas/raw/main/docs/images/home.png",
            "name": "Servas",
            "repository": {
                "stackfile": "Template/Stack/servas.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "platform": "linux",
            "ports": [
                "8456:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Servas",
            "type": 3
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "wallabag is a web application allowing you to save web pages for later reading. Click, save and read it when you want.",
            "logo": "https://www.wallabag.org/user/themes/boxify/img/logo-wallabag.svg",
            "name": "Wallabag",
            "repository": {
                "stackfile": "Template/Stack/wallabag.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "platform": "linux",
            "ports": [
                "8234:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Wallabag",
            "type": 3
        },
        {
            "categories": [
                "Network Server"
            ],
            "description": "WIFI / LAN intruder detector",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "jokobsk/pi.alert",
            "logo": "https://raw.githubusercontent.com/pucherot/Pi.Alert/main/docs/img/1_devices.jpg",
            "name": "pi.alert",
            "platform": "linux",
            "ports": [
                "20211:20211/udp"
            ],
            "restart_policy": "always",
            "title": "Pi.alert",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/pi.alert",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Notes Server"
            ],
            "description": "Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases",
            "env": [
                {
                    "default": "/home/node/trilium-data",
                    "label": "TRILIUM_DATA_DIR",
                    "name": "TRILIUM_DATA_DIR"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "image": "zadam/trilium:latest",
            "logo": "https://www.saashub.com/images/app/service_logos/55/2901389fab77/large.png?1561117248",
            "name": "trilium",
            "platform": "linux",
            "ports": [
                "3388:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Trilium",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/trilium-data",
                    "container": "/home/node/trilium-data"
                }
            ]
        },
        {
            "categories": [
                "Smart Home"
            ],
            "description": "A complete and local NVR designed for Home Assistant with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.",
            "logo": "https://raw.githubusercontent.com/blakeblackshear/frigate/master/docs/static/img/frigate.png",
            "name": "frigatenvr",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/frigatenvr.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Frigate NVR",
            "type": 3
        },
        {
            "categories": [
                "Dashboard Server"
            ],
            "description": "Fenrus is a Node application and requires NodeJS to run. Once NodeJS is installed you can run Fenrus",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://user-images.githubusercontent.com/958400/154829266-62206846-c6ef-4718-9910-2b83eb6aa41c.png",
            "name": "Fenrus",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/fenrus.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Fenrus",
            "type": 3
        },
        {
            "categories": [
                "Library Server"
            ],
            "description": "Audiobook Server",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "ghcr.io/advplyr/audiobookshelf:latest",
            "logo": "https://raw.githubusercontent.com/mycroftwilde/portainer_templates/master/Images/AudioBookshelfLogo.png",
            "name": "Audiobookshelf",
            "platform": "linux",
            "ports": [
                "13378:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Audiobookshelf",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Audiobookshelf",
                    "container": "/config"
                },
                {
                    "bind": "/path/to/audiobooks",
                    "container": "/audiobooks"
                },
                {
                    "bind": "/path/to/podcasts",
                    "container": "/podcasts"
                },
                {
                    "bind": "/path/to/Metadata",
                    "container": "/metadata"
                }
            ]
        },
        {
            "categories": [
                "Family App Server"
            ],
            "description": "Vikunja is a self hosted, open-source to-do list application",
            "env": [
                {
                    "default": "192.168.0.2",
                    "label": "IP",
                    "name": "IP"
                },
                {
                    "default": "80",
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://raw.githubusercontent.com/go-vikunja/frontend/main/public/images/icons/android-chrome-192x192.png",
            "note": "Vikunja is a self hosted, open-source to-do list application",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/vikunja.yml",
                "url": "https://github.com/mycroftwilde/portainer_templates"
            },
            "title": "Vikunja",
            "type": 3
        },
        {
            "categories": [
                "Media Server"
            ],
            "description": "Helps you organize your Ahem ...more MATURE Media material....",
            "env": [
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://dashy.to/img/dashy.png",
            "name": "Stash",
            "note": "## Keep configs, scrapers, and plugins here. </p><p> - /portainer/Files/AppData/Config/stash:/root/.stash </p><p> ## Point this at your collection. </p><p> - ./data:/data </p><p> ## This is where your stash's metadata lives </p><p> - /portainer/Files/AppData/Config/stashmeta:/metadata </p><p> ## Any other cache content. </p><p> - /portainer/Files/AppData/Config/stashcache:/cache </p><p> ## Where to store generated content (screenshots,previews,transcodes,sprites) </p><p> - /portainer/Files/AppData/Config/stashgenerated:/generated",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/stash.yml",
                "url": "https://github.com/mycroftwilde/portainer_templates"
            },
            "title": "Stash",
            "type": 3
        },
        {
            "categories": [
                "Chat Server"
            ],
            "description": "Rocket.Chat Server",
            "logo": "https://raw.githubusercontent.com/portapps/rocketchat-portable/master/res/papp.png",
            "note": "Rocket.Chat Server Container",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/rocketchat.yml",
                "url": "https://github.com/mycroftwilde/portainer_templates"
            },
            "title": "Rocket Chat",
            "type": 3
        },
        {
            "categories": [
                "Notes Server"
            ],
            "description": "Joplin is an open-source note-taking app",
            "env": [
                {
                    "default": "22300",
                    "label": "PORT",
                    "name": "PORT"
                },
                {
                    "default": "http://joplin.yourdomain.tld:22300",
                    "label": "URL",
                    "name": "URL"
                }
            ],
            "logo": "https://raw.githubusercontent.com/laurent22/joplin/master/Assets/SquareIcon512.png",
            "note": "Joplin is an open-source note-taking app",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/joplin.yml",
                "url": "https://github.com/mycroftwilde/portainer_templates"
            },
            "title": "Joplin",
            "type": 3
        },
        {
            "categories": [
                "Usenet Server"
            ],
            "description": "Readarr usent server",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "hotio/readarr:nightly",
            "logo": "https://raw.githubusercontent.com/Readarr/Readarr/develop/Logo/128.png",
            "name": "Readerr",
            "platform": "linux",
            "ports": [
                "8787:8787/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Readarr",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Readarr",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/books",
                    "container": "/books"
                }
            ]
        },
        {
            "categories": [
                "Dashboard Server"
            ],
            "description": "MagicMirror2 Server",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "karsten13/magicmirror:latest",
            "logo": "https://github.com/MichMich/MagicMirror/raw/master/.github/header.png",
            "name": "MagicMirror2",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "command": "/bin/bash -c \"npm run server\" && exit 777",
            "title": "MagicMirror2",
            "type": 1,
            "volumes": [
                {
                    "container": "/opt/magic_mirror/config"
                },
                {
                    "container": "/opt/magic_mirror/modules"
                },
                {
                    "container": "/opt/magic_mirror/css"
                }
            ]
        },
        {
            "categories": [
                "Library Server"
            ],
            "description": "Koomga Manga, Comic and E-Book Server",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "gotson/komga:latest",
            "logo": "https://raw.githubusercontent.com/gotson/komga/master/.github/readme-images/app-icon.png",
            "name": "Komga",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Komga",
            "type": 1,
            "volumes": [
                {
                    "container": "/books"
                },
                {
                    "container": "/comics"
                },
                {
                    "container": "/manga"
                },
                {
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Library Server"
            ],
            "description": "Kavita Manga, Comic and E-Book Server",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "kizaing/kavita:latest",
            "logo": "https://raw.githubusercontent.com/Kareadita/Kavita/main/UI/Web/src/assets/images/logo.png",
            "name": "Kavita",
            "platform": "linux",
            "ports": [
                "5000:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Kavita",
            "type": 1,
            "volumes": [
                {
                    "container": "/books"
                },
                {
                    "container": "/comics"
                },
                {
                    "container": "/manga"
                },
                {
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Task Server"
            ],
            "description": "It is a self-hosted monitoring tool like Uptime Robot",
            "image": "louislam/uptime-kuma:latest",
            "logo": "https://images.opencollective.com/uptime-kuma/29c5113/logo/256.png",
            "name": "uptime-kuma",
            "platform": "linux",
            "ports": [
                "3001:3001/tcp"
            ],
            "restart_policy": "always",
            "title": "Uptime Kuma",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/UptimeKuma",
                    "container": "/app/data"
                }
            ]
        },
        {
            "type": 1,
            "title": "Grafana",
            "description": "Metrics Graphing Tool",
            "logo": "https://raw.githubusercontent.com/grafana/grafana/main/docs/logo-horizontal.png",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "categories": [
                "Dashboard Server"
            ],
            "image": "grafana/grafana:latest",
            "ports": [
                "3000/tcp"
            ],
            "network": "bridge",
            "volumes": [
                {
                    "container": "/etc/grafana/grafana.ini"
                },
                {
                    "container": "/var/lib/grafana"
                },
                {
                    "container": "/var/log/grafana"
                }
            ]
        },
        {
            "categories": [
                "Smart Home"
            ],
            "description": "Node-RED provides a browser-based flow editor that makes it easy to wire together flows using the wide range of nodes in the palette.",
            "image": "nodered/node-red",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/node-red-icon.svg",
            "name": "nodered",
            "platform": "linux",
            "ports": [
                "1880:1880/tcp"
            ],
            "restart_policy": "always",
            "title": "Nodered",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Nodered",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Management Utility Server"
            ],
            "description": "draw.io (formerly Diagramly) is free online diagram software. You can use it as a flowchart maker, network diagram software, to create UML online, as an ER diagram tool, to design database schema, to build BPMN online, as a circuit diagram maker, and more. draw.io can import .vsdx, Gliffy\u2122 and Lucidchart\u2122 files.",
            "image": "jgraph/drawio:latest",
            "logo": "https://raw.githubusercontent.com/qwerty00007/portainer_templates/master/Images/draw.io.png",
            "name": "draw.io",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "draw.io",
            "type": 1
        },
        {
            "categories": [
                "Dashboard Server"
            ],
            "description": "Helps you organize your self-hosted services by making them accessible from a single place.",
            "logo": "https://dashy.to/img/dashy.png",
            "name": "Dashy",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/dashy.yml",
                "url": "https://github.com/mycroftwilde/portainer_templates"
            },
            "title": "Dashy",
            "type": 3
        },
        {
            "categories": [
                "Music Server"
            ],
            "description": "Navidrome is an open source web-based music collection server and streamer. It gives you freedom to listen to your music collection from any browser or mobile device. It's like your personal Spotify!",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://github.com/navidrome/navidrome/raw/master/resources/logo-192x192.png",
            "name": "Navidrome",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/navidrome.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Navidrome",
            "type": 3
        },
        {
            "categories": [
                "Dashboard Server"
            ],
            "description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
            "image": "pawelmalak/flame",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/flame.png",
            "name": "flame-dashboard",
            "platform": "linux",
            "ports": [
                "5005:5005/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Flame-Dashboard",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/flame-dashboard",
                    "container": "/app/data"
                }
            ]
        },
        {
            "categories": [
                "Social",
                "Forum"
            ],
            "description": "Zusam is a free and open-source way to self-host private forums for groups of friends.",
            "env": [
                {
                    "default": "email@domain.example",
                    "label": "INIT_USER",
                    "name": "INIT_USER"
                },
                {
                    "default": "initpass zusam",
                    "label": "INIT_PASSWORD",
                    "name": "INIT_PASSWORD"
                }
            ],
            "image": "zusam/zusam",
            "logo": "https://github.com/zusam/zusam/raw/master/app/src/assets/zusam_logo.png",
            "name": "Zusam",
            "platform": "linux",
            "ports": [
                "4180:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Zus.am",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Zusam",
                    "container": "/zusam/data"
                }
            ]
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "The recipe manager that allows you to manage your ever growing collection of digital recipes.",
            "image": "vabene1111/recipes:latest",
            "logo": "https://docs.tandoor.dev/logo_color.svg",
            "name": "Tandoor",
            "platform": "linux",
            "ports": [
                "3280:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Tandoor",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Tandoor",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "Koillection is a self-hosted collection manager created to keep track of physical (mostly) collections of any kind like books, DVDs, stamps, games..",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "PORT",
                    "name": "PORT"
                }
            ],
            "logo": "https://user-images.githubusercontent.com/20560781/80213166-0e560e00-8639-11ea-944e-4f79fdbcef55.png",
            "name": "Koillection",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/koillection.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Koillection",
            "type": 3
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "Eufy Security Web Socket. Edit container and add username & password.",
            "env": [
                {
                    "default": "InputUSER-email",
                    "label": "USERNAME",
                    "name": "USERNAME"
                },
                {
                    "default": "InputPWD",
                    "label": "PASSWORD",
                    "name": "PASSWORD"
                }
            ],
            "image": "bropat/eufy-security-ws:latest",
            "logo": "https://github.com/bropat/eufy-security-ws/raw/master/docs/_media/eufy-security-ws.png",
            "name": "eufy-security-ws",
            "platform": "linux",
            "ports": [
                "3993:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Eufy Security WS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/eufy-security-ws",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "Dozzle is a small lightweight application with a web based interface to monitor Docker logs. It doesn\u2019t store any log files. It is for live monitoring of your container logs only.",
            "image": "amir20/dozzle:latest",
            "logo": "https://dozzle.dev/favicon.ico",
            "name": "dozzle",
            "platform": "linux",
            "ports": [
                "8888:8080/tcp"
            ],
            "restart_policy": "always",
            "title": "Dozzle",
            "type": 1,
            "volumes": [
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Social"
            ],
            "description": "Monica is a great open source personal relationship management system to organize the interactions with your loved ones.",
            "image": "monica",
            "logo": "https://raw.githubusercontent.com/docker-library/docs/b962028212dbd77c9531dbcf8d5a81db79d4a735/monica/logo.svg",
            "name": "monica",
            "platform": "linux",
            "ports": [
                "7777:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Monica",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/monica",
                    "container": "/var/www/html/storage"
                }
            ]
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "Teleport allows engineers and security professionals to unify access for SSH servers, Kubernetes clusters, web applications, and databases across all environments.",
            "logo": "https://bookface-images.s3.amazonaws.com/logos/386100350818400a035ac8e0caa84111de3316eb.png",
            "name": "teleport",
            "repository": {
                "stackfile": "Template/Stack/teleport.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "platform": "linux",
            "restart_policy": "always",
            "title": "Teleport",
            "type": 3
        },
        {
            "categories": [
                "Dashboard",
                "Crypto",
                "Finance"
            ],
            "description": "Cryptofolio is an open-source, and self-hosted solution for tracking your cryptocurrency holdings. It features a web interface, an Android mobile app, and a cross-platform desktop application for Windows, macOS, and Linux.",
            "image": "xtrendence/cryptofolio:latest",
            "logo": "https://i.imgur.com/5v8lzea.png",
            "name": "cryptofolio",
            "platform": "linux",
            "ports": [
                "7280:80/tcp"
            ],
            "restart_policy": "always",
            "title": "Cryptofolio",
            "type": 1
        },
        {
            "categories": [
                "Network"
            ],
            "description": "Self-hosted website change detection monitoring.",
            "image": "dgtlmoon/changedetection.io",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/changedetection-custom.png",
            "name": "changedetection",
            "platform": "linux",
            "restart_policy": "always",
            "title": "Change Detection",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/changedetection",
                    "container": "/datastore"
                }
            ]
        },
        {
            "categories": [
                "Presentation"
            ],
            "description": "It is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free | Production Mode",
            "image": "cloudogu/reveal.js",
            "logo": "https://pbs.twimg.com/profile_images/1260911777929400325/_ClbHpsz_400x400.jpg",
            "name": "revealjs",
            "platform": "linux",
            "ports": [
                "6060:8080/tcp"
            ],
            "restart_policy": "always",
            "title": "Reveal.js",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/revealjs/docs/slides",
                    "container": "/reveal/docs/slides"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/revealjs/scripts/test",
                    "container": "/resources"
                }
            ]
        },
        {
            "categories": [
                "Network"
            ],
            "description": "An easy to use Status Page for your websites and applications. Statping will automatically fetch the application and render a beautiful status page with tons of features for you to build an even better status page.",
            "image": "statping/statping:latest",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/statping.png",
            "name": "statping",
            "platform": "linux",
            "ports": [
                "4040:8080/tcp"
            ],
            "restart_policy": "always",
            "title": "Statping",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/statping",
                    "container": "/app"
                }
            ]
        },
        {
            "categories": [
                "Network"
            ],
            "description": "Network UPS Tools server",
            "image": "upshift/nut-upsd",
            "logo": "",
            "name": "nuts",
            "platform": "linux",
            "ports": [
                "3493:3493/tcp"
            ],
            "restart_policy": "always",
            "title": "NUTS",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/nuts",
                    "container": "/app"
                }
            ]
        },
        {
            "categories": [
                "Tools"
            ],
            "description": "Your Budgets, Calendars, Meals, Inventory, Tasks, and so much more in one simple app.For everyone in your household.On all of your devices.In the cloud or self-hosted",
            "logo": "https://homechart.app/images/homechart.min.776793e5e4334866f0799e8a84b8448efb1b06cb2762b2bb20f99068ac36136c.png",
            "name": "homechart",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/homechart.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Homechart",
            "type": 3
        },
        {
            "categories": [
                "Messenger"
            ],
            "description": "Ferdi is a messaging browser that allows you to combine your favourite messaging services into one application",
            "logo": "https://raw.githubusercontent.com/getferdi/server/master/logo.png",
            "name": "ferdi-server",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/ferdiserver.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Ferdi Server",
            "type": 3
        },
        {
            "categories": [
                "Other"
            ],
            "description": "Snippet Box is a simple self-hosted app for organizing your code snippets. It allows you to easily create, edit, browse and manage your snippets in various languages.",
            "logo": "https://raw.githubusercontent.com/getferdi/server/master/logo.png",
            "name": "snippet-box",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/snippetbox.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Snippet Box",
            "type": 3
        },
        {
            "categories": [
                "Social"
            ],
            "description": "LittleLink is an open source DIY self-hosted alternative to services like Linktree and many.link. ",
            "logo": "https://littlelink.io/images/avatar@2x.png",
            "name": "littlelink-server",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/littlelink.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "ports": [
                "3000:3000/tcp"
            ],
            "title": "Littlelink Server",
            "type": 3
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "A perfect Aria2 Docker image. Out of the box, just add download tasks and don't need to think about anything else.",
            "logo": "https://imgcdn.p3terx.com/post/20201113041845.jpg",
            "name": "aria2-pro",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/aria2pro.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Aria2 Pro",
            "type": 3
        },
        {
            "categories": [
                "Photos",
                "AI"
            ],
            "description": "PhotoPrism is an AI-powered app for browsing, organizing & sharing your photo collection. It makes use of the latest technologies to tag and find pictures automatically without getting in your way.| Copy as Custom stack and EDIT environment variables.",
            "logo": "https://photoprism.app/static/img/logo.svg",
            "name": "photoprism",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/photoprism.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Photoprism",
            "type": 3
        },
        {
            "categories": [
                "Network"
            ],
            "description": "IPerf3 Docker Build for Network Performance and Bandwidth Testing",
            "logo": "",
            "name": "iperf",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/iperf.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "iperf",
            "type": 3
        },
        {
            "categories": [
                "Docker"
            ],
            "description": "Lazytainer monitors network traffic to containers. If there is traffic, the container runs, otherwise the container is stopped/paused.",
            "logo": "",
            "name": "lazytainer",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/lazytainer.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Lazytainer",
            "type": 3
        },
        {
            "categories": [
                "Dashboard"
            ],
            "description": "Homepage is a new dashboard implementation that creates a super fast static site.",
            "logo": "https://raw.githubusercontent.com/benphelps/homepage/main/images/preview.png",
            "name": "homepage",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/homepage.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Homepage",
            "type": 3
        },
        {
            "categories": [
                "Finance"
            ],
            "description": "I hate money is a web application made to ease shared budget management. It keeps track of who bought what, when, and for whom; and helps to settle the bills.",
            "logo": "",
            "name": "ihatemoney",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/ihatemoney.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "I hate money",
            "type": 3
        },
        {
            "categories": [
                "Finance"
            ],
            "description": "OpenBudgeteer is a budgeting app based on the Bucket Budgeting Principle and inspired by YNAB and Buckets.",
            "logo": "https://github.com/TheAxelander/OpenBudgeteer/raw/master/assets/banner.png",
            "name": "openbudgeteer",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/openbudgeteer.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "OpenBudgeteer",
            "type": 3
        },
        {
            "categories": [
                "Multimedia"
            ],
            "description": "Fireshare: Share your game clips, videos, or other media via unique links.",
            "logo": "https://github.com/ShaneIsrael/fireshare/raw/main/app/client/src/assets/logo.png",
            "name": "fireshare",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/fireshare.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Fireshare",
            "type": 3
        },
        {
            "categories": [
                "Downloading"
            ],
            "description": "Peer-to-peer file transfers in your browser",
            "logo": "https://raw.githubusercontent.com/kern/filepizza/master/src/static/images/wordmark.png",
            "name": "filepizza",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/filepizza.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Filepizza",
            "type": 3
        },
        {
            "categories": [
                "Dashboard"
            ],
            "description": "Jump is yet another self-hosted startpage for your server designed to be simple, stylish, fast and secure.",
            "logo": "",
            "name": "jump",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/jump.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Jump",
            "type": 3
        },
        {
            "categories": [
                "Productivity"
            ],
            "description": "Hasty Paste is a fast and minimal paste bin, written in Python using Quart.",
            "logo": "",
            "name": "hasty-paste",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/hasty-paste.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Hasty-Paste",
            "type": 3
        },
        {
            "categories": [
                "Wiki"
            ],
            "description": "Xwiki s a free wiki software platform written in Java with a design emphasis on extensibility. XWiki is an enterprise wiki.",
            "logo": "https://upload.wikimedia.org/wikipedia/commons/e/e2/Logo-xwikiorange.svg",
            "name": "xwiki",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/xwiki.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Xwiki",
            "type": 3
        },
        {
            "categories": [
                "Productivity"
            ],
            "description": "Leantime is an open source project management solution to make your ideas reality.",
            "logo": "https://s3-us-west-2.amazonaws.com/leantime-website/wp-content/uploads/2022/07/24022056/logo-large.png",
            "name": "leantime",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/leantime.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Leantime",
            "type": 3
        },
        {
            "categories": [
                "Entertainment"
            ],
            "description": "Jellyseerr is a free and open source fork of Overseerr for managing requests for your media library. It integrates with your existing services, such as Sonarr, Radarr, and Jellyfin!",
            "logo": "https://raw.githubusercontent.com/Fallenbagel/jellyseerr/develop/public/logo_full.svg",
            "name": "jellyseer",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/jellyseer.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Jellyseer",
            "type": 3
        },
        {
            "categories": [
                "Productivity"
            ],
            "description": "Trudesk is an Open Source Help Desk Software and Ticketing System",
            "logo": "https://trudesk.io/wp-content/uploads/2019/10/logo-med.png",
            "name": "trudesk",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/trudesk.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Trudesk",
            "type": 3
        },
        {
            "categories": [
                "System"
            ],
            "description": "Dashdot is a modern server dashboard, running on the latest tech, designed with glassmorphism in mind. It is intended to be used for smaller VPS and private servers.",
            "logo": "https://github.com/MauriceNino/dashdot/raw/main/.github/images/banner_muted.png",
            "name": "dashdot",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/dashdot.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Dashdot",
            "type": 3
        },
        {
            "categories": [
                "Productivity"
            ],
            "description": "Open source no-code database and Airtable alternative.Create your own online database without technical experience. Our user friendly no-code tool gives you the powers of a developer without leaving your browser.",
            "logo": "https://baserow.io/_nuxt/img/logo.1421f77.svg",
            "name": "Baserow",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/baserow.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Baserow",
            "type": 3
        },
        {
            "categories": [
                "Smart Home"
            ],
            "description": "BroadlinkManager is a Flask powerd, easy to use system that hepls you to work with Broadlink Devices.",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/broadlink.png",
            "name": "broadlink-manager",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/broadlink-manager.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Broadlink Manager",
            "type": 3
        },
        {
            "categories": [
                "Smart Home"
            ],
            "description": "HomeKit support for the impatient.",
            "logo": "https://raw.githubusercontent.com/homebridge/branding/master/logos/homebridge-color-round-stylized.png",
            "name": "homebridge",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/homebridge.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Homebridge",
            "type": 3
        },
        {
            "categories": [
                "Analytics"
            ],
            "description": "Umami is a simple, easy to use, self-hosted web analytics solution. The goal is to provide you with a friendlier, privacy-focused alternative to Google Analytics and a free, open-sourced alternative to paid solutions",
            "logo": "https://icons.duckduckgo.com/ip3/umami.is.ico",
            "name": "umami",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/umami.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "ports": [
                "3000:3000/tcp"
            ],
            "title": "Umami.is",
            "type": 3
        },
        {
            "categories": [
                "Analytics"
            ],
            "description": "Google Analytics alternative that protects your data and your customers' privacy",
            "logo": "https://gallery.ncnet.nl/upload/2020/05/22/20200522171613-9205fa32.png",
            "name": "matomo",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/matomo.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "ports": [
                "8282:80/tcp"
            ],
            "title": "Matomo",
            "type": 3
        },
        {
            "categories": [
                "Other"
            ],
            "description": "Simple room management system for n.eko. Self hosted rabb.it alternative. --Please add .env file as stated in neko.yml",
            "logo": "https://raw.githubusercontent.com/m1k1o/neko/master/docs/_media/logo.png",
            "name": "neko",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/neko.yml",
                "url": "https://github.com/TheLustriVA/xneo1_portainer_templates"
            },
            "title": "Neko",
            "type": 3
        },
        {
            "type": 2,
            "title": "NextcloudStack",
            "description": "Nextcloud setup with a MySQL database",
            "note": "Deploys a Nextcloud instance connected to a MySQL database.",
            "categories": [
                "Cloud"
            ],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/mikestraney/portainer-templates/master/Images/nextcloud-icon.png",
            "repository": {
                "url": "https://github.com/mikestraney/portainer-templates",
                "stackfile": "stacks/nextcloud/docker-stack.yml"
            },
            "env": [
                {
                    "label": "MYSQL_PASSWORD",
                    "name": "mypassword",
                    "description": "password for sql"
                },
                {
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "myrpassword",
                    "description": "root password for sql"
                }
            ]
        },
        {
            "type": 1,
            "title": "Odoo",
            "description": "Open-source business apps",
            "categories": [
                "project-management"
            ],
            "platform": "linux",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/odoo.png",
            "image": "odoo:latest",
            "env": [
                {
                    "name": "HOST",
                    "label": "PostgreSQL database host",
                    "type": "container"
                },
                {
                    "name": "USER",
                    "label": "Database user"
                },
                {
                    "name": "PASSWORD",
                    "label": "Database password"
                }
            ],
            "ports": [
                "8069/tcp"
            ],
            "volumes": [
                {
                    "container": "/var/lib/odoo"
                },
                {
                    "container": "/mnt/extra-addons"
                }
            ]
        },
        {
            "categories": [
                "CCTV"
            ],
            "description": "UniFi Video is a powerful and flexible, integrated IP video management surveillance system designed to work with Ubiquiti\u2019s UniFi Video Camera product line. UniFi Video has an intuitive, configurable, and feature\u2011packed user interface with advanced features such as motion detection, auto\u2011discovery, user\u2011level security, storage management, reporting, and mobile device support.",
            "env": [
                {
                    "default": "99",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "002",
                    "label": "UMASK",
                    "name": "UMASK"
                },
                {
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH",
                    "set": "UniFi Video"
                }
            ],
            "image": "pducharme/unifi-video-controller:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/UniFiVideo-logo.png",
            "name": "UniFi Video",
            "platform": "linux",
            "ports": [
                "1935:1935/tcp",
                "7444:7444/tcp",
                "7447:7447/tcp",
                "6666:6666/tcp",
                "7442:7442/tcp",
                "7080:7080/tcp",
                "7443:7443/tcp",
                "7445:7445/tcp",
                "7446:7446/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "UniFi Video",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/UnifFiVideo/Recordings/",
                    "container": "/recordings"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/UniFiVideo/",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "VPN",
                "Tools"
            ],
            "description": "This container contains OpenVPN and Deluge with a configuration where Deluge is running only when OpenVPN has an active tunnel. It bundles configuration files for many popular VPN providers to make the setup easier.",
            "env": [
                {
                    "default": "1001",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1001",
                    "label": "PGID",
                    "name": "PUID"
                },
                {
                    "default": "MULLVAD",
                    "description": "see https://github.com/sgtsquiggs/docker-deluge-openvpn",
                    "label": "OPENVPN_PROVIDER",
                    "name": "OPENVPN_PROVIDER"
                },
                {
                    "label": "OPENVPN_USERNAME",
                    "name": "OPENVPN_USERNAME"
                },
                {
                    "label": "OPENVPN_PASSWORD",
                    "name": "OPENVPN_PASSWORD"
                }
            ],
            "image": "sgtsquiggs/deluge-openvpn:latest",
            "name": "deluge-openvpn",
            "platform": "linux",
            "ports": [
                "8112:8112/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Deluge openvpn",
            "type": 1,
            "volumes": [
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/downloads"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/DelugeOpenVPN/config",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Downloaders"
            ],
            "description": "Cardigann, a server for adding extra indexers to Sonarr, SickRage and CouchPotato via Torznab and TorrentPotato proxies. Behind the scenes Cardigann logs in and runs searches and then transforms the results into a compatible format.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/cardigann:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/cardigann.png",
            "name": "cardigann",
            "platform": "linux",
            "ports": [
                "5060:5060/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Cardigann",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Cardigann",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "VPN",
                "Tools",
                "Other",
                "Web"
            ],
            "description": "Pritunl container built on Alpine Linux. Supports IPv6 and running behind a reverse proxy. This container requires an external Mongo DB and should be run via Docker Compose or other orchestration.",
            "env": [
                {
                    "default": "false",
                    "label": "REVERSE_PROXY",
                    "name": "REVERSE_PROXY"
                },
                {
                    "label": "PRITUNL_OPTS",
                    "name": "PRITUNL_OPTS"
                },
                {
                    "default": "mongodb://mongo:27017/pritunl",
                    "label": "MONGODB_URI",
                    "name": "MONGODB_URI"
                },
                {
                    "default": "false",
                    "label": "WIREGUARD",
                    "name": "WIREGUARD"
                }
            ],
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/pritunl/Images/pritunl.png",
            "name": "pritunl",
            "note": "Documentation on this containier can be found here: <a href=https://hub.docker.com/r/goofball222/pritunl>https://hub.docker.com/r/goofball222/pritunl</a>",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/pritunl.yml",
                "url": "https://github.com/SelfhostedPro/selfhosted_templates"
            },
            "title": "Pritunl",
            "type": 3
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Organizr allows you to setup Tabs that will be loaded all in one webpage. You can then work on your server with ease.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "organizrtools/organizr-v2:php-fpm",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/organizr-icon.png",
            "name": "organizr-v2",
            "platform": "linux",
            "ports": [
                "80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Organizr v2",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Organizr",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Web"
            ],
            "description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\nBefore running this container, make sure that the url and subdomains are properly forwarded to this container's host.\nPort 443 on the internet side of the router should be forwarded to this container's port 443.\nIf you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\nThe container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \nIt also detects changes to the DHLEVEL parameter and replaces the dhparams file.\nIf you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd ",
            "env": [
                {
                    "label": "EMAIL",
                    "name": "EMAIL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "URL",
                    "name": "URL",
                    "set": "-Xms256m -Xmx512m"
                },
                {
                    "label": "SUBDOMAINS",
                    "name": "SUBDOMAINS",
                    "set": "www,"
                },
                {
                    "label": "ONLY_SUBDOMAINS",
                    "name": "ONLY_SUBDOMAINS",
                    "set": "false"
                },
                {
                    "label": "DHLEVEL",
                    "name": "DHLEVEL",
                    "set": "2048"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "label": "VALIDATION",
                    "name": "VALIDATION",
                    "set": "http"
                },
                {
                    "label": "DNSPLUGIN",
                    "name": "DNSPLUGIN",
                    "set": "http"
                }
            ],
            "image": "linuxserver/letsencrypt:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/letsencrypt.png",
            "name": "letsencrypt",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Let's Encrypt",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/LetsEncrypt",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Security"
            ],
            "description": "Dradis Framework: Collaboration and reporting for IT Security teams http://dradisframework.org",
            "image": "raesene/dradis:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/dradis-logo.png",
            "name": "dradis",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Dradis",
            "type": 1
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Management"
            ],
            "description": "Peppermint is a free and open source tickeg management solution with a range of features",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "100",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "5001",
                    "label": "PORT",
                    "name": "PORT"
                },
                {
                    "default": "peppermint",
                    "label": "DB_USERNAME",
                    "name": "DB_USERNAME"
                },
                {
                    "default": "1234",
                    "label": "DB_PASSWORD",
                    "name": "DB_PASSWORD"
                },
                {
                    "default": "postgres",
                    "label": "DB_HOST",
                    "name": "DB_HOST"
                }
            ],
            "image": "pepperlabs/peppermint:latest",
            "logo": "https://raw.githubusercontent.com/Peppermint-Lab/peppermint/master/public/logo.svg",
            "name": "Peppermint",
            "platform": "linux",
            "ports": [
                "5001:5001/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Peppermint",
            "type": 1,
            "volumes": [
                {
                    "bind": "/srv/dev-disk-by-label-media/Files/AppData/Config/peppermint",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "ArchiveBox is a powerful, self-hosted internet archiving solution to collect, save, and view sites you want to preserve offline.",
            "env": [
                {
                    "default": "*",
                    "label": "ALLOWED_HOSTS",
                    "name": "ALLOWED_HOSTS"
                },
                {
                    "default": "750m",
                    "label": "MEDIA_MAX_SIZE",
                    "name": "MEDIA_MAX_SIZE"
                },
                {
                    "default": "true",
                    "label": "PUBLIC_INDEX",
                    "name": "PUBLIC_INDEX"
                },
                {
                    "default": "true",
                    "label": "PUBLIC_SNAPSHOTS",
                    "name": "PUBLIC_SNAPSHOTS"
                },
                {
                    "default": "false",
                    "label": "PUBLIC_ADD_VIEW",
                    "name": "PUBLIC_ADD_VIEW"
                }
            ],
            "image": "archivebox/archivebox:master",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/archivebox.png",
            "name": "archivebox",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://archivebox.io/\" target=\"_blank\">https://archivebox.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki/Docker\" target=\"_blank\">https://github.com/ArchiveBox/ArchiveBox/wiki/Docker</a><br><br><br>By default an admin user is not created. You can do so by launching a shell in the container and executing 'archivebox manage createsuperuser'. Documentation is Available <a href='https://github.com/ArchiveBox/ArchiveBox/wiki'>here</a>.",
            "platform": "linux",
            "ports": [
                "8002:8000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Archivebox",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/archivebox",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "DNS",
                "Tools"
            ],
            "description": "Cloudflare DDNS - A small and fast DDNS updater for Cloudflare.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "",
                    "label": "CF_API_TOKEN",
                    "name": "CF_API_TOKEN"
                },
                {
                    "default": "",
                    "label": "DOMAINS (Comma Separated List)",
                    "name": "DOMAINS"
                },
                {
                    "default": "true",
                    "label": "PROXIED",
                    "name": "PROXIED"
                }
            ],
            "image": "favonia/cloudflare-ddns:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/cloudflare-ddns.png",
            "name": "cloudflare-ddns",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/\" target=\"_blank\">https://www.cloudflare.com/en-gb/learning/dns/glossary/dynamic-dns/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/oznu/cloudflare-ddns/\" target=\"_blank\">https://hub.docker.com/r/oznu/cloudflare-ddns/</a><br><br><br>",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Cloudflare DDNS",
            "type": 1
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Eclipse Mosquitto is an open source implementation of a server for versions 5, 3.1.1, and 3.1 of the MQTT protocol.\nYou will need to create /portainer/Files/AppData/Config/Mosquitto/config/mosquitto.conf and if needed your password file.\nHave a look on https://mosquitto.org/man/mosquitto_passwd-1.html",
            "hostname": "rpi-mosquitto",
            "image": "eclipse-mosquitto:latest",
            "logo": "https://raw.githubusercontent.com/docker-library/docs/757578e3a44e5460a8a11d32a81776f8b74231a9/eclipse-mosquitto/logo.png",
            "name": "mosquitto",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://mosquitto.org/\" target=\"_blank\">https://mosquitto.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/_/eclipse-mosquitto\" target=\"_blank\">https://hub.docker.com/_/eclipse-mosquitto</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "1883:1883/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Eclipse Mosquitto",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Mosquitto/config",
                    "container": "/mosquitto/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Mosquitto/data",
                    "container": "/mosquitto/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Mosquitto/log",
                    "container": "/mosquitto/log"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Flame is self-hosted startpage for your server. Its design is inspired (heavily) by SUI. Flame is very easy to setup and use. With built-in editors, it allows you to setup your very own application hub in no time - no file editing necessary.",
            "env": [
                {
                    "default": "",
                    "label": "Flame Password",
                    "name": "PASSWORD"
                }
            ],
            "image": "pawelmalak/flame:multiarch",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/flame.png",
            "name": "Flame",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/flame\" target=\"_blank\">https://github.com/pawelmalak/flame</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/flame#with-docker-recommended\" target=\"_blank\">https://github.com/pawelmalak/flame#with-docker-recommended</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "5005:5005/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Flame",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Flame/data",
                    "container": "/app/data"
                },
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Games"
            ],
            "description": "This docker image provides the FoundryVTT system for hosting your own virtual table top games.",
            "env": [
                {
                    "default": "John",
                    "label": "Foundry Account Name",
                    "name": "FOUNDRY_USERNAME"
                },
                {
                    "default": "password",
                    "label": "Foundry Password",
                    "name": "FOUNDRY_PASSWORD"
                },
                {
                    "default": "changeme",
                    "label": "Instance Admin Password",
                    "name": "FOUNDRY_ADMIN_KEY"
                },
                {
                    "default": "true",
                    "label": "CONTAINER_PRESERVE_CONFIG",
                    "name": "CONTAINER_PRESERVE_CONFIG"
                }
            ],
            "image": "felddy/foundryvtt:release",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/foundrylogo.png",
            "name": "FoundryVTT",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://foundryvtt.com/\" target=\"_blank\">https://foundryvtt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/felddy/foundryvtt\" target=\"_blank\">https://hub.docker.com/r/felddy/foundryvtt</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "30000:30000/tcp"
            ],
            "restart_polocy": "unless-stopped",
            "title": "FoundryVTT Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/foundryvtt",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A simple server for sending and receiving messages",
            "env": [
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "admin",
                    "label": "GOTIFY_DEFAULTUSER_NAME",
                    "name": "GOTIFY_DEFAULTUSER_NAME"
                },
                {
                    "default": "admin123",
                    "label": "GOTIFY_DEFAULTUSER_PASS",
                    "name": "GOTIFY_DEFAULTUSER_PASS"
                }
            ],
            "image": "gotify/server-arm7:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gotify.png",
            "name": "gotify",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gotify.net/\" target=\"_blank\">https://gotify.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://gotify.net/docs/install\" target=\"_blank\">https://gotify.net/docs/install</a><br><br><br>ARM7 Image. Documentation is Available <a href='https://gotify.net/docs/index'>here</a>.",
            "platform": "linux",
            "ports": [
                "9008:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Gotify",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/gotify",
                    "container": "/app/data"
                }
            ]
        },
        {
            "description": "Home Assistant is a free and open-source software for home automation that is designed to be the central control system for smart home devices with focus on local control and privacy.",
            "image": "homeassistant/home-assistant:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homeassistant.png",
            "name": "home-assistant",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.home-assistant.io/\" target=\"_blank\">https://www.home-assistant.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://www.home-assistant.io/installation/raspberrypi#install-home-assistant-container\" target=\"_blank\">https://www.home-assistant.io/installation/raspberrypi#install-home-assistant-container</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8999:8123/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Home Assistant",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/HomeAssistant/assets",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "HomeAutomation"
            ],
            "description": "Debian Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
            "env": [
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1",
                    "label": "HOMEBRIDGE_CONFIG_UI",
                    "name": "HOMEBRIDGE_CONFIG_UI"
                },
                {
                    "default": "8581",
                    "label": "HOMEBRIDGE_CONFIG_UI_PORT",
                    "name": "HOMEBRIDGE_CONFIG_UI_PORT"
                },
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "image": "oznu/homebridge:debian-arm32v7",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/homebridge.png",
            "name": "homebridge-debian",
            "network": "host",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://homebridge.io/\" target=\"_blank\">https://homebridge.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker\" target=\"_blank\">https://github.com/homebridge/homebridge/wiki/Install-Homebridge-on-Docker</a><br><br><br>Bringing HomeKit support where there is none",
            "platform": "linux",
            "privileged": true,
            "restart_policy": "unless-stopped",
            "title": "Homebridge - Debian",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/debian-homebridge",
                    "container": "/homebridge"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "InfluxDB is an open source time series database for recording metrics, events, and analytics. You will need to add /portainer/Files/AppData/Config/Influxdb/config/influxdb.conf",
            "hostname": "rpi-influxdb1810",
            "image": "influxdb:1.8.10",
            "logo": "https://raw.githubusercontent.com/docker-library/docs/43d87118415bb75d7bb107683e79cd6d69186f67/influxdb/logo.png",
            "name": "influxdb1810",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.influxdata.com/\" target=\"_blank\">https://www.influxdata.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker\" target=\"_blank\">https://docs.influxdata.com/influxdb/v2.0/install/?t=Docker</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8086:8086/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Influxdb 1.8.10",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Influxdb/data",
                    "container": "/var/lib/influxdb"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Influxdb/config",
                    "container": "/var/lib/influxdb"
                }
            ]
        },
        {
            "categories": [
                "Downloaders",
                "Tools"
            ],
            "description": "JDownloader docker image",
            "env": [
                {
                    "default": "",
                    "label": "MYJD_DEVICE_NAME",
                    "name": "MYJD_DEVICE_NAME"
                },
                {
                    "default": "",
                    "label": "MYJD_USER",
                    "name": "MYJD_USER"
                },
                {
                    "default": "",
                    "label": "MYJD_PASSWORD",
                    "name": "MYJD_PASSWORD"
                }
            ],
            "image": "jaymoulin/jdownloader:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/jdownloader.png",
            "name": "JDownloader",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://my.jdownloader.org/\" target=\"_blank\">https://my.jdownloader.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/jaymoulin/docker-jdownloader\" target=\"_blank\">https://github.com/jaymoulin/docker-jdownloader</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=30MYRgCObu8&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=4\" target=\"_blank\">Installing JDownloader and File Browser On The Pi Docker Server</a><br><br>",
            "platform": "linux",
            "ports": [
                "3129:3129/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "JDownloader",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/JDownloader",
                    "container": "/opt/JDownloader/cfg"
                },
                {
                    "bind": "/portainer/Downloads",
                    "container": "/opt/JDownloader/Downloads"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "An alternative private front-end to Reddit",
            "image": "spikecodes/libreddit:armv7",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/libreddit.png",
            "name": "libreddit",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://libreddit.silkky.cloud/\" target=\"_blank\">https://libreddit.silkky.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/spikecodes/libreddit#2-docker\" target=\"_blank\">https://github.com/spikecodes/libreddit#2-docker</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8088:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "libreddit",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/libreddit",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Web",
                "Management",
                "Photos"
            ],
            "description": "Lychee With Mariadb is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "lychee",
                    "label": "DATABASE_NAME",
                    "name": "DATABASE_NAME"
                },
                {
                    "default": "lychee",
                    "label": "DATABASE_USER",
                    "name": "DATABASE_USER"
                },
                {
                    "default": "",
                    "label": "DATABASE_PASSWORD",
                    "name": "DATABASE_PASSWORD"
                },
                {
                    "default": "",
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                }
            ],
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/lychee-icon.png",
            "name": "lychee-mariadb",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://lycheeorg.github.io/\" target=\"_blank\">https://lycheeorg.github.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-lychee\" target=\"_blank\">https://docs.linuxserver.io/images/docker-lychee</a><br><br><br>",
            "platform": "linux",
            "repository": {
                "stackfile": "stack/lychee-mariadb.yml",
                "url": "https://github.com/pi-hosted/pi-hosted/"
            },
            "restart_policy": "unless-stopped",
            "title": "Lychee With Mariadb",
            "type": 3
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A self-hosted recipe manager and meal planner",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "2",
                    "label": "WEB_CONCURRENCY",
                    "name": "WEB_CONCURRENCY"
                },
                {
                    "default": "8",
                    "label": "MAX_WORKERS",
                    "name": "MAX_WORKERS"
                },
                {
                    "default": "true",
                    "label": "RECIPE_PUBLIC",
                    "name": "RECIPE_PUBLIC"
                },
                {
                    "default": "true",
                    "label": "RECIPE_SHOW_NUTRITION",
                    "name": "RECIPE_SHOW_NUTRITION"
                },
                {
                    "default": "true",
                    "label": "RECIPE_SHOW_ASSETS",
                    "name": "RECIPE_SHOW_ASSETS"
                },
                {
                    "default": "true",
                    "label": "RECIPE_LANDSCAPE_VIEW",
                    "name": "RECIPE_LANDSCAPE_VIEW"
                },
                {
                    "default": "false",
                    "label": "RECIPE_DISABLE_COMMENTS",
                    "name": "RECIPE_DISABLE_COMMENTS"
                },
                {
                    "default": "false",
                    "label": "RECIPE_DISABLE_AMOUNT",
                    "name": "RECIPE_DISABLE_AMOUNT"
                }
            ],
            "image": "hkotel/mealie:v0.4.3",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/mealie.png",
            "name": "mealie",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://hay-kot.github.io/mealie/\" target=\"_blank\">https://hay-kot.github.io/mealie/</a><br><b>Official Docker Documentation: </b><a href=\"https://hay-kot.github.io/mealie/documentation/getting-started/install/\" target=\"_blank\">https://hay-kot.github.io/mealie/documentation/getting-started/install/</a><br><br><br>Default Credentials: Username: changeme@email.com Password: MyPassword. Documentation is Available <a href='https://hay-kot.github.io/mealie/documentation/getting-started/install/'>here</a>.",
            "platform": "linux",
            "ports": [
                "9925:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Mealie",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/mealie",
                    "container": "/app/data"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools",
                "Games"
            ],
            "description": "This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot. See the Versions section below for more information.",
            "env": [
                {
                    "default": "TRUE",
                    "label": "EULA",
                    "name": "EULA"
                }
            ],
            "image": "itzg/minecraft-server:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/minecraft.png",
            "name": "minecraft",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.minecraft.net/en-us\" target=\"_blank\">https://www.minecraft.net/en-us</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/itzg/docker-minecraft-server#using-docker-compose\" target=\"_blank\">https://github.com/itzg/docker-minecraft-server#using-docker-compose</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "25565:25565/tcp"
            ],
            "restart_polocy": "unless-stopped",
            "title": "Minecraft Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Minecraft-data",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "n8n is an extendable workflow automation tool.",
            "env": [
                {
                    "default": "true",
                    "label": "N8N_BASIC_AUTH_ACTIVE",
                    "name": "N8N_BASIC_AUTH_ACTIVE"
                },
                {
                    "default": "admin",
                    "label": "N8N_BASIC_AUTH_USER",
                    "name": "N8N_BASIC_AUTH_USER"
                },
                {
                    "default": "admin",
                    "label": "N8N_BASIC_AUTH_PASSWORD",
                    "name": "N8N_BASIC_AUTH_PASSWORD"
                }
            ],
            "image": "n8nio/n8n:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/n8n.jpg",
            "name": "n8n",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://n8n.io/\" target=\"_blank\">https://n8n.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.n8n.io/getting-started/installation/#docker\" target=\"_blank\">https://docs.n8n.io/getting-started/installation/#docker</a><br><br><br>Documentation is Available <a href='https://docs.n8n.io/'>here</a>",
            "platform": "linux",
            "ports": [
                "5678:5678/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "n8n",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/n8n",
                    "container": "/home/node/.n8n"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Troubleshoot slowdowns and anomalies in your infrastructure with thousands of per-second metrics, meaningful visualizations, and insightful health alarms with zero configuration.",
            "env": [
                {
                    "default": "1000",
                    "label": "DOCKER_USR",
                    "name": "DOCKER_USR"
                },
                {
                    "default": "1000",
                    "label": "DOCKER_GRP",
                    "name": "DOCKER_GRP"
                }
            ],
            "image": "netdata/netdata:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/netdata.png",
            "name": "netdata",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.netdata.cloud/\" target=\"_blank\">https://www.netdata.cloud/</a><br><b>Official Docker Documentation: </b><a href=\"https://learn.netdata.cloud/docs/agent/packaging/docker\" target=\"_blank\">https://learn.netdata.cloud/docs/agent/packaging/docker</a><br><br><br>Documentation is Available <a href='https://learn.netdata.cloud/'>here</a>.",
            "platform": "linux",
            "ports": [
                "19999:19999/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Netdata",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/netdata/netdataconfig",
                    "container": "/etc/netdata"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/netdata/netdatalib",
                    "container": "/var/lib/netdata"
                },
                {
                    "bind": "/etc/passwd",
                    "container": "/host/etc/passwd:ro"
                },
                {
                    "bind": "/etc/group",
                    "container": "/host/etc/group:ro"
                },
                {
                    "bind": "/proc",
                    "container": "/host/proc:ro"
                },
                {
                    "bind": "/sys",
                    "container": "/host/sys:ro"
                },
                {
                    "bind": "/etc/os-release",
                    "container": "/host/etc/os-release:ro"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Productivity",
                "Tools",
                "Other",
                "Web"
            ],
            "description": "Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "ownyourbits/nextcloudpi",
            "name": "nextcloudpi",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://ownyourbits.com/nextcloudpi/\" target=\"_blank\">https://ownyourbits.com/nextcloudpi/</a><br><b>Official Docker Documentation: </b><a href=\"https://ownyourbits.com/2017/06/08/nextcloudpi-docker-for-raspberry-pi/\" target=\"_blank\">https://ownyourbits.com/2017/06/08/nextcloudpi-docker-for-raspberry-pi/</a><br><br><b>Extra useful script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/reset_premissions_nextcloud.sh\" target=\"_blank\">reset_premissions_nextcloud.sh</a><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=E6IrT3g5Gqc&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=9\" target=\"_blank\">Installing Nextcloud on Raspberry Pi Docker</a><br><br>The database user is nextcloud and the database is nextcloud_db. The host of the database will be located at the bottom of the DB conotainer in portainer.",
            "platform": "linux",
            "ports": [
                "4444:4443/tcp",
                "8443:443/tcp",
                "8480:8480/tcp"
            ],
            "title": "NextcloudPi",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/ncdata",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Web",
                "Tools"
            ],
            "description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.  It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
            "env": [
                {
                    "default": "your_secret_goes_here",
                    "label": "NODE_RED_CREDENTIAL_SECRET",
                    "name": "NODE_RED_CREDENTIAL_SECRET"
                },
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                }
            ],
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/node-red.png",
            "name": "node-red",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://nodered.org/\" target=\"_blank\">https://nodered.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://nodered.org/docs/getting-started/docker\" target=\"_blank\">https://nodered.org/docs/getting-started/docker</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "1880:1880/tcp"
            ],
            "repository": {
                "stackfile": "stack/node-red.yml",
                "url": "https://github.com/pi-hosted/pi-hosted/"
            },
            "restart_policy": "unless-stopped",
            "title": "Node Red",
            "type": 3
        },
        {
            "categories": [
                "Management",
                "Tools"
            ],
            "description": "TP-Link Omada is a software-defined network solution. The EAP Controller is used to manage multiple EAPs. Raspberry Pi 1 and Zero are not supported.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "mbentley/omada-controller:latest-armv7l",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/omada.png",
            "name": "omada-controller",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.tp-link.com/us/business-networking/omada-sdn-controller/\" target=\"_blank\">https://www.tp-link.com/us/business-networking/omada-sdn-controller/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/mbentley/omada-controller\" target=\"_blank\">https://hub.docker.com/r/mbentley/omada-controller</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8088:8088/tcp",
                "8043:8043/tcp",
                "27001:27001/udp",
                "27002:27002/tcp",
                "29810:29810/udp",
                "29811:29811/tcp",
                "29812:29812/tcp",
                "29813:29813/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Omada EAP Controller",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Omada",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Management",
                "Productivity"
            ],
            "description": "Paperless is an application by Daniel Quinn and contributors that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents. https://github.com/jonaswinkler/paperless-ng",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "linuxserver/paperless-ng",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/paperless.png",
            "name": "paperless",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/jonaswinkler/paperless-ng\" target=\"_blank\">https://github.com/jonaswinkler/paperless-ng</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.linuxserver.io/images/docker-paperless-ng\" target=\"_blank\">https://docs.linuxserver.io/images/docker-paperless-ng</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8005:8000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Paperless",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/paperless/config",
                    "container": "/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/paperless/data",
                    "container": "/data"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole with both DoH (DNS over HTTPS) and DoT (DNS over TLS) clients.",
            "image": "oijkn/pihole-doh-dot:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole_doh-dot.png",
            "name": "pihole DoH/DoT",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/oijkn/pihole-doh-dot\" target=\"_blank\">https://hub.docker.com/r/oijkn/pihole-doh-dot</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53.",
            "platform": "linux",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "67:67/udp",
                "1010:80/tcp",
                "4443:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pi-Hole DoH/DoT",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT",
                    "container": "/etc/pihole"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole_DoH-DoT/DNS",
                    "container": "/etc/dnsmasq.d"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Linux network-level advertisement and Internet tracker blocking application which acts as a DNS sinkhole. This version has Ubound software installed on it so you don't need to rely on external DNS providers.",
            "env": [
                {
                    "default": "192.168.0.X",
                    "description": "Insert the Raspberry Pi IP here",
                    "label": "ServerIP",
                    "name": "ServerIP"
                },
                {
                    "default": "Europe\\London",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "label": "DNSSEC",
                    "name": "DNSSEC",
                    "select": [
                        {
                            "default": true,
                            "text": "Enable DNSSEC",
                            "value": "true"
                        },
                        {
                            "text": "Disable DNSSEC",
                            "value": "false"
                        }
                    ]
                },
                {
                    "default": "127.0.0.1#5335",
                    "label": "DNS1",
                    "name": "DNS1",
                    "preset": true
                },
                {
                    "default": "127.0.0.1#5335",
                    "label": "DNS2",
                    "name": "DNS2",
                    "preset": true
                }
            ],
            "image": "cbcrowe/pihole-unbound:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/pihole-unbound.png",
            "name": "pihole-unbound",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://pi-hole.net/\" target=\"_blank\">https://pi-hole.net/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container\" target=\"_blank\">https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/pi-hole.md\" target=\"_blank\">pi-hole.md</a><br><br><br>When the installation is complete, navigate to your.ip.goes.here:1010/admin. Follow the article <a href='https://medium.com/@niktrix/getting-rid-of-systemd-resolved-consuming-port-53-605f0234f32f'>here</a> if you run into issues binding to port 53. For extra information on this container visit the mainteiner <a href='https://github.com/chriscrowe/docker-pihole-unbound/tree/master/one-container'>GitHub Page</a>. You can add ports: 5335 to access Ubound externally; 22 to enable SSH; 67 to use DHCP Server. Add those ports in Show advanced options.",
            "platform": "linux",
            "ports": [
                "53:53/tcp",
                "53:53/udp",
                "1010:80/tcp",
                "4443:443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Pi-Hole-Unbound",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole-Unbound",
                    "container": "/etc/pihole"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/PiHole-Unbound/DNS",
                    "container": "/etc/dnsmasq.d"
                }
            ]
        },
        {
            "categories": [
                "Cloud",
                "Productivity",
                "Tools",
                "Web"
            ],
            "description": "PrivateBin is a minimalist, open source online pastebin where the server has zero knowledge of pasted data!",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "privatebin/nginx-fpm-alpine:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/privatebin.png",
            "name": "privatebin",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://privatebin.info/\" target=\"_blank\">https://privatebin.info/</a><br><b>Official Docker Documentation: </b><a href=\"https://hub.docker.com/r/privatebin/nginx-fpm-alpine\" target=\"_blank\">https://hub.docker.com/r/privatebin/nginx-fpm-alpine</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8080:8080/tcp"
            ],
            "privileged": true,
            "restart_policy": "unless-stopped",
            "title": "PrivateBin",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/PrivateBin",
                    "container": "/srv/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/PrivateBin",
                    "container": "/srv/cfg"
                }
            ]
        },
        {
            "categories": [
                "Monitor",
                "Tools"
            ],
            "description": "Monitor your Raspberry Pi and Dockers using Grafana developed by oijkn. Please download grafana configs from his git https://github.com/oijkn/Docker-Raspberry-PI-Monitoring",
            "env": [
                {
                    "default": "15d",
                    "label": "PROMETHEUS_RETENTION",
                    "name": "PROMETHEUS_RETENTION"
                }
            ],
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/rpi_monitor.png",
            "name": "RaspberryPi-Docker-Monitor",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/rpi_docker_monitor.md\" target=\"_blank\">rpi_docker_monitor.md</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/rpi_docker_monitor.sh\" target=\"_blank\">rpi_docker_monitor.sh</a><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=IoD3vFuep64&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=8\" target=\"_blank\">Raspberry Pi Docker Monitoring</a><br><br>",
            "platform": "linux",
            "ports": [
                "3000:3000/tcp"
            ],
            "repository": {
                "stackfile": "stack/raspberrypi-monitoring.yml",
                "url": "https://github.com/pi-hosted/pi-hosted"
            },
            "restart_policy": "unless-stopped",
            "title": "Raspberry Pi Docker Monitor",
            "type": 3
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "command": "",
            "description": "Samba has provided secure, stable and fast file and print services for all clients using the SMB/CIFS protocol, such as all versions of DOS and Windows, OS/2, Linux and many others.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "1000",
                    "label": "USERID",
                    "name": "USERID"
                },
                {
                    "default": "1000",
                    "label": "GROUPID",
                    "name": "GROUPID"
                },
                {
                    "default": "guest;guest",
                    "label": "USER",
                    "name": "USER"
                },
                {
                    "default": "true",
                    "label": "PERMISSIONS",
                    "name": "PERMISSIONS"
                },
                {
                    "default": "portainer;/share;yes;no;yes;guest",
                    "label": "SHARE",
                    "name": "SHARE"
                }
            ],
            "image": "dperson/samba:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/samba.png",
            "name": "Samba",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://www.samba.org/\" target=\"_blank\">https://www.samba.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/dperson/samba\" target=\"_blank\">https://github.com/dperson/samba</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=2zZ3_1GRWrM&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=11\" target=\"_blank\">Setting up Raspberry Pi Samba Server For File Sharing on Docker</a><br><br>",
            "platform": "linux",
            "ports": [
                "139:139/tcp",
                "445:445/tcp"
            ],
            "privileged": true,
            "restart_policy": "unless-stopped",
            "title": "Samba",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Downloads",
                    "container": "/share"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Open-Source Privacy-respecting metasearch engine",
            "env": [
                {
                    "default": "http://localhost:9017",
                    "label": "BASE_URL",
                    "name": "BASE_URL"
                },
                {
                    "default": "my-instance",
                    "label": "INSTANCE_NAME",
                    "name": "INSTANCE_NAME"
                }
            ],
            "image": "searxng/searxng:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/searx.png",
            "name": "SearXNG",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://docs.searxng.org/\" target=\"_blank\">https://docs.searxng.org/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.searxng.org/admin/installation-docker.html\" target=\"_blank\">https://docs.searxng.org/admin/installation-docker.html</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/searxng.md\" target=\"_blank\">searxng.md</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "9017:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "SearXNG",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/searxng",
                    "container": "/etc/searxng"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "Snippet Box is a simple self-hosted app for organizing your code snippets.",
            "image": "pawelmalak/snippet-box:arm",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/snibox.png",
            "name": "Snippet-box",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/pawelmalak/snippet-box\" target=\"_blank\">https://github.com/pawelmalak/snippet-box</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/pawelmalak/snippet-box#with-docker\" target=\"_blank\">https://github.com/pawelmalak/snippet-box#with-docker</a><br><br><br>Label-oriented interface with search. Supports various programming languages, markdown, plain text.",
            "platform": "linux",
            "ports": [
                "5010:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Snippet-box",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Snippet-box",
                    "container": "/app/data"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Web",
                "Other"
            ],
            "description": "Run a Speedtest every hour and graph the results.  See https://hub.docker.com/r/henrywhitaker3/speedtest-tracker/tags for arch options",
            "env": [
                {
                    "default": "latest-arm",
                    "label": "arch",
                    "name": "arch"
                },
                {
                    "default": "true",
                    "label": "OOKLA_EULA_GDPR",
                    "name": "OOKLA_EULA_GDPR"
                }
            ],
            "image": "henrywhitaker3/speedtest-tracker:dev-arm",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/speedtest-tracker.png",
            "name": "speedtest-tracker",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker\" target=\"_blank\">https://github.com/henrywhitaker3/Speedtest-Tracker#using-docker</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8765:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Speedtest Tracker",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/speedtest-tracker",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Web"
            ],
            "description": "Sshwifty is a SSH and Telnet connector made for the Web. It can be deployed on your computer or server to provide SSH and Telnet access interface for any compatible (standard) web browser.",
            "image": "niruix/sshwifty:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/sshwifty-icon.png",
            "name": "Sshwifty",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://sshwifty.herokuapp.com/\" target=\"_blank\">https://sshwifty.herokuapp.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/nirui/sshwifty#docker-image\" target=\"_blank\">https://github.com/nirui/sshwifty#docker-image</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "8182:8182/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Sshwifty",
            "type": 1
        },
        {
            "categories": [
                "Proxy",
                "Security",
                "Tools"
            ],
            "description": "Cloud-Native Networking Stack That Just Works.",
            "image": "traefik:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/traefik.png",
            "name": "traefik",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://doc.traefik.io/traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/</a><br><b>Official Docker Documentation: </b><a href=\"https://doc.traefik.io/traefik/getting-started/install-traefik/\" target=\"_blank\">https://doc.traefik.io/traefik/getting-started/install-traefik/</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/traefik.sh\" target=\"_blank\">traefik.sh</a><br><br>A simple and lightweight reverse proxy",
            "platform": "linux",
            "ports": [
                "80:80/tcp",
                "443:443/tcp",
                "8080:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Traefik",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/traefik/traefik.yml",
                    "container": "/traefik.yml"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/traefik/config.yml",
                    "container": "/config.yml"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/traefik/acme.json",
                    "container": "/acme.json"
                },
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "VPN",
                "Tools"
            ],
            "description": "This container contains OpenVPN and Transmission with a configuration\nwhere Transmission is running only when OpenVPN has an active tunnel.\nIt bundles configuration files for many popular VPN providers to make the setup easier.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "MULLVAD",
                    "description": "https://haugene.github.io/docker-transmission-openvpn/supported-providers/",
                    "label": "OPENVPN_PROVIDER",
                    "name": "OPENVPN_PROVIDER"
                },
                {
                    "default": "",
                    "description": "Optional. Mostly used to narrow down what location to use by the provider",
                    "label": "OPENVPN_CONFIG",
                    "name": "OPENVPN_CONFIG"
                },
                {
                    "default": "",
                    "label": "OPENVPN_USERNAME",
                    "name": "OPENVPN_USERNAME"
                },
                {
                    "default": "",
                    "label": "OPENVPN_PASSWORD",
                    "name": "OPENVPN_PASSWORD"
                },
                {
                    "default": "192.168.0.0/24",
                    "label": "LOCAL_NETWORK",
                    "name": "LOCAL_NETWORK"
                },
                {
                    "default": "true",
                    "label": "watch-dir-enabled",
                    "name": "TRANSMISSION_WATCH_DIR_ENABLED"
                }
            ],
            "image": "haugene/transmission-openvpn:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/transmission-icon.png",
            "name": "transmission-openvpn-v4",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://transmissionbt.com/\" target=\"_blank\">https://transmissionbt.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://haugene.github.io/docker-transmission-openvpn/run-container/\" target=\"_blank\">https://haugene.github.io/docker-transmission-openvpn/run-container/</a><br><br><br>List of supported providers available <a href='https://haugene.github.io/docker-transmission-openvpn/supported-providers'/>here</a>.",
            "platform": "linux",
            "ports": [
                "9091:9091/tcp"
            ],
            "privileged": true,
            "restart_policy": "unless-stopped",
            "title": "Transmission OpenVPN Version 4",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Downloads",
                    "container": "/data"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime"
                }
            ]
        },
        {
            "categories": [
                "Monitor",
                "Tools"
            ],
            "description": "Monitor your Unifi Controller using Grafana developed by oijkn for the Raspberry Pi Monitor.",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/unpoller-logo.png",
            "name": "UnPoller Unifi Controller Monitor",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://unpoller.com/\" target=\"_blank\">https://unpoller.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/novaspirit/pi-hosted/blob/master/docs/UnPoller-Monitor.md\" target=\"_blank\">https://github.com/novaspirit/pi-hosted/blob/master/docs/UnPoller-Monitor.md</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/UnPoller-Monitor.md\" target=\"_blank\">UnPoller-Monitor.md</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/unpoller-install.sh\" target=\"_blank\">unpoller-install.sh</a><br><br>",
            "platform": "linux",
            "ports": [
                "8086:8086/tcp"
            ],
            "repository": {
                "stackfile": "stack/unpoller-stack.yml",
                "url": "https://github.com/pi-hosted/pi-hosted"
            },
            "restart_policy": "unless-stopped",
            "title": "UnPoller Monitor",
            "type": 3
        },
        {
            "categories": [
                "Cloud",
                "Web",
                "Management",
                "todo"
            ],
            "description": "Vikunja With Frontend.  The to-do app to organize your life.  Must run tools/install_vikunja.sh before installing the template.  More informantion at https://vikunja.io/",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "vikunja",
                    "label": "DATABASE_NAME",
                    "name": "DATABASE_NAME"
                },
                {
                    "default": "vikunja",
                    "label": "DATABASE_USER",
                    "name": "DATABASE_USER"
                },
                {
                    "default": "",
                    "label": "DATABASE_PASSWORD",
                    "name": "DATABASE_PASSWORD"
                },
                {
                    "default": "",
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                }
            ],
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/vikunja.png",
            "name": "vikunja",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://vikunja.io/\" target=\"_blank\">https://vikunja.io/</a><br><b>Official Docker Documentation: </b><a href=\"https://vikunja.io/docs/full-docker-example/#example-with-nginx-as-proxy\" target=\"_blank\">https://vikunja.io/docs/full-docker-example/#example-with-nginx-as-proxy</a><br><br><b>Pre-installation script: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/tools/install_vikunja.sh\" target=\"_blank\">install_vikunja.sh</a><br><br>",
            "platform": "linux",
            "repository": {
                "stackfile": "stack/vikunja.yml",
                "url": "https://github.com/pi-hosted/pi-hosted/"
            },
            "restart_policy": "unless-stopped",
            "title": "Vikunja With Frontend",
            "type": 3
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Docker image for Windows 2000 Advanced Server with SP4.",
            "image": "hectormolinero/qemu-win2000:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/win2000.png",
            "name": "win2000",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/hectorm/docker-qemu-win2000\" target=\"_blank\">https://github.com/hectorm/docker-qemu-win2000</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/hectorm/docker-qemu-win2000#start-an-instance\" target=\"_blank\">https://github.com/hectorm/docker-qemu-win2000#start-an-instance</a><br><br><br><b>Youtube Video: </b><a href=\"https://www.youtube.com/watch?v=57Gnp0424Qc&list=PL846hFPMqg3jwkxcScD1xw2bKXrJVvarc&index=13\" target=\"_blank\">Checking out Windows 2000 Docker</a><br><br>Why? Your scientists were so preoccupied with whether or not they could, that they didn't stop to think if they should. -- Dr. Ian Malcolm",
            "platform": "linux",
            "ports": [
                "3389:3389/tcp",
                "5900:5900/tcp",
                "6080:6080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Windows 2000",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Win2000/zdrive",
                    "container": "/mnt"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "VPN"
            ],
            "description": "Fast VPN Server with easy to use User Interface",
            "env": [
                {
                    "default": "example.domain.com",
                    "description": "Set here your DDNS domain",
                    "label": "WG_HOST",
                    "name": "WG_HOST"
                },
                {
                    "default": "ENTER AN ADMIN PASSWORD",
                    "description": "Leave blank to access WebUI without loggin",
                    "label": "PASSWORD",
                    "name": "PASSWORD"
                },
                {
                    "default": "51820",
                    "label": "WG_PORT",
                    "name": "WG_PORT"
                },
                {
                    "default": "1.1.1.1",
                    "label": "WG_DEFAULT_DNS",
                    "name": "WG_DEFAULT_DNS"
                },
                {
                    "default": "0.0.0.0/0, ::/0",
                    "label": "WG_ALLOWED_IPS",
                    "name": "WG_ALLOWED_IPS"
                }
            ],
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/wireguard.png",
            "name": "wg-easy",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/WeeJeWel/wg-easy/\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/WeeJeWel/wg-easy/#1-install-docker\" target=\"_blank\">https://github.com/WeeJeWel/wg-easy/#1-install-docker</a><br><b>Pi-Hosted dedicated documentation: </b><a href=\"https://github.com/pi-hosted/pi-hosted/blob/master/docs/wireguard-install.md\" target=\"_blank\">wireguard-install.md</a><br><br><br>",
            "platform": "linux",
            "repository": {
                "stackfile": "stack/wireguard-easy.yml",
                "url": "https://github.com/pi-hosted/pi-hosted"
            },
            "title": "Wireguard Server",
            "type": 3
        },
        {
            "categories": [
                "Music"
            ],
            "description": "Airsonic Advanced is a free, web-based media streamer, providing ubiqutious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                },
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "airsonic",
                    "label": "CONTEXT_PATH",
                    "name": "CONTEXT_PATH"
                },
                {
                    "default": "-Xms256m -Xmx512m",
                    "label": "JAVA_OPTS",
                    "name": "JAVA_OPTS"
                }
            ],
            "image": "linuxserver/airsonic-advanced:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/airsonic-logo.png",
            "name": "airsonic-advanced",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://github.com/airsonic-advanced/airsonic-advanced\" target=\"_blank\">https://github.com/airsonic-advanced/airsonic-advanced</a><br><b>Official Docker Documentation: </b><a href=\"https://github.com/linuxserver/docker-airsonic-advanced\" target=\"_blank\">https://github.com/linuxserver/docker-airsonic-advanced</a><br><br><br>",
            "platform": "linux",
            "ports": [
                "4040:4040/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Airsonic Advanced",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Music",
                    "container": "/music"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/Playlists",
                    "container": "/playlists"
                },
                {
                    "bind": "/portainer/Podcasts",
                    "container": "/podcasts"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/Media",
                    "container": "/media"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/Airsonic-Advanced/config/",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "SCM",
                "Tools"
            ],
            "description": "A painless self-hosted Git service.",
            "env": [
                {
                    "default": "1000",
                    "label": "USER_UID",
                    "name": "USER_UID"
                },
                {
                    "default": "1000",
                    "label": "USER_GID",
                    "name": "USER_GID"
                }
            ],
            "image": "gitea/gitea:latest",
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gitea.png",
            "name": "gitea",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gitea.com/\" target=\"_blank\">https://gitea.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.gitea.io/en-us/install-with-docker/\" target=\"_blank\">https://docs.gitea.io/en-us/install-with-docker/</a><br><br><br>More possible Environment Variables: https://docs.gitea.io/en-us/install-with-docker/#managing-deployments-with-environment-variables",
            "platform": "linux",
            "ports": [
                "8124:3000/tcp",
                "222:22/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Gitea",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/Gitea",
                    "container": "/data"
                },
                {
                    "bind": "/etc/timezone",
                    "container": "/etc/timezone:ro"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime:ro"
                }
            ]
        },
        {
            "categories": [
                "SCM",
                "Tools"
            ],
            "description": "Gitea with Mariadb: A painless self-hosted Git service.",
            "env": [
                {
                    "default": "1000",
                    "label": "USER_UID",
                    "name": "USER_UID"
                },
                {
                    "default": "1000",
                    "label": "USER_GID",
                    "name": "USER_GID"
                },
                {
                    "default": "America/New_York",
                    "label": "TZ",
                    "name": "TZ"
                },
                {
                    "default": "gitea",
                    "label": "DATABASE_NAME",
                    "name": "DATABASE_NAME"
                },
                {
                    "default": "gitea",
                    "label": "DATABASE_USER",
                    "name": "DATABASE_USER"
                },
                {
                    "default": "",
                    "label": "DATABASE_PASSWORD",
                    "name": "DATABASE_PASSWORD"
                },
                {
                    "default": "",
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                }
            ],
            "logo": "https://raw.githubusercontent.com/pi-hosted/pi-hosted/master/images/gitea.png",
            "name": "gitea-mysql",
            "note": "<h3>Template created by Pi-Hosted Series</h3><b>Check our Github page: <a href=\"https://github.com/pi-hosted/pi-hosted\" target=\"_blank\">https://github.com/pi-hosted/pi-hosted</a></b><br><br><b>Official Webpage: </b><a href=\"https://gitea.com/\" target=\"_blank\">https://gitea.com/</a><br><b>Official Docker Documentation: </b><a href=\"https://docs.gitea.io/en-us/install-with-docker/#mysql-database\" target=\"_blank\">https://docs.gitea.io/en-us/install-with-docker/#mysql-database</a><br><br><br>More possible Environment Variables: https://docs.gitea.io/en-us/install-with-docker/#managing-deployments-with-environment-variables",
            "platform": "linux",
            "repository": {
                "stackfile": "stack/gitea-mariadb.yml",
                "url": "https://github.com/pi-hosted/pi-hosted/"
            },
            "restart_policy": "unless-stopped",
            "title": "Gitea with Mariadb",
            "type": 3
        },
        {
            "category": [
                "Downloaders",
                "Other",
                "Tools"
            ],
            "description": "NZBHydra is a meta search for NZB indexers and the \"spiritual successor\" to NZBmegasearcH. It provides easy access to a number of raw and newznab based indexers.",
            "env": [
                {
                    "label": "PUID",
                    "name": "PUID",
                    "set": "1000"
                },
                {
                    "label": "PGID",
                    "name": "PGID",
                    "set": "1000"
                },
                {
                    "label": "TZ",
                    "name": "TZ",
                    "set": "America/Chicago"
                }
            ],
            "image": "linuxserver/hydra2:latest",
            "logo": "https://raw.githubusercontent.com/thesugarat/portainer_templates-1/master/Images/hydra-icon.png",
            "platform": "linux",
            "ports": [
                "5076/tcp"
            ],
            "title": "hydra2",
            "type": 1,
            "volumes": [
                {
                    "container": "/config"
                },
                {
                    "container": "/downloads"
                }
            ]
        },
        {
            "categories": [
                "Web",
                "Proxy"
            ],
            "description": "Nginx is a web server with a strong focus on high concurrency, performance and low memory usage. It can also act as a reverse proxy server for HTTP, HTTPS, SMTP, POP3, and IMAP protocols, as well as a load balancer and an HTTP cache.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "nginx:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/nginx-icon.png",
            "name": "nginx-offical",
            "platform": "linux",
            "ports": [
                "80/tcp",
                "443/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Nginx Official",
            "type": 1
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Docker container for Firefox V2.",
            "env": [
                {
                    "default": "5800",
                    "label": "WEB_PORT",
                    "name": "WEB_PORT"
                },
                {
                    "default": "5900",
                    "label": "VNC_PORT",
                    "name": "VNC_PORT"
                },
                {
                    "default": "1",
                    "label": "Keep App Running",
                    "name": "KEEP_APP_RUNNING"
                },
                {
                    "default": "1280",
                    "label": "Display Width",
                    "name": "DISPLAY_WIDTH"
                },
                {
                    "default": "768",
                    "label": "Display Height",
                    "name": "DISPLAY_HEIGHT"
                },
                {
                    "default": "0",
                    "label": "Secure Connection",
                    "name": "SECURE_CONNECTION"
                },
                {
                    "label": "VNC Password",
                    "name": "VNC_PASSWORD",
                    "description": "Note: Password is limited to 8 characters"
                },
                {
                    "default": "1000",
                    "label": "User ID",
                    "name": "USER_ID"
                },
                {
                    "default": "1000",
                    "label": "Group ID",
                    "name": "GROUP_ID"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                },
                {
                    "default": "2g",
                    "label": "Shared Memory Size",
                    "name": "SHM_SIZE"
                },
                {
                    "default": "-nocursor",
                    "label": "X11VNC Extra Options",
                    "name": "X11VNC_EXTRA_OPTS"
                },
                {
                    "default": "0",
                    "label": "Kiosk Mode",
                    "name": "KIOSK_MODE"
                },
                {
                    "default": "olivercullimore/docker-firefox:master",
                    "label": "Docker Image",
                    "name": "DOCKER_IMAGE"
                },
                {
                    "default": "/portainer/Files/AppData/Config/FirefoxV2",
                    "label": "Volume Path",
                    "name": "VOLUME_PATH"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/firefox.png",
            "name": "firefoxv2",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/firefox.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "FirefoxV2",
            "type": 3
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "A Docker container for Chrome.",
            "env": [
                {
                    "default": "5800",
                    "label": "WEB_PORT",
                    "name": "WEB_PORT"
                },
                {
                    "default": "5900",
                    "label": "VNC_PORT",
                    "name": "VNC_PORT"
                },
                {
                    "default": "1",
                    "label": "Keep App Running",
                    "name": "KEEP_APP_RUNNING"
                },
                {
                    "default": "1280",
                    "label": "Display Width",
                    "name": "DISPLAY_WIDTH"
                },
                {
                    "default": "768",
                    "label": "Display Height",
                    "name": "DISPLAY_HEIGHT"
                },
                {
                    "default": "0",
                    "label": "Secure Connection",
                    "name": "SECURE_CONNECTION"
                },
                {
                    "label": "VNC Password",
                    "name": "VNC_PASSWORD",
                    "description": "Note: Password is limited to 8 characters"
                },
                {
                    "default": "1000",
                    "label": "User ID",
                    "name": "USER_ID"
                },
                {
                    "default": "1000",
                    "label": "Group ID",
                    "name": "GROUP_ID"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                },
                {
                    "default": "2GB",
                    "label": "Shared Memory Size",
                    "name": "SHM_SIZE"
                },
                {
                    "default": "-nocursor",
                    "label": "X11VNC Extra Options",
                    "name": "X11VNC_EXTRA_OPTS"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/chrome.png",
            "name": "googlechrome",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/chrome.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Google Chrome",
            "type": 3
        },
        {
            "categories": [
                "Video",
                "Other"
            ],
            "description": "Tvheadend is a small flask app to proxy requests between Plex Media Server and Tvheadend.",
            "env": [
                {
                    "default": "",
                    "label": "TVH_BINDADDR",
                    "name": "TVH_BINDADDR"
                },
                {
                    "default": "http://test:test@localhost:9981",
                    "label": "TVH_URL",
                    "name": "TVH_URL"
                },
                {
                    "default": "http://localhost",
                    "label": "TVH_PROXY_URL",
                    "name": "TVH_PROXY_URL"
                },
                {
                    "default": "6",
                    "description": "Number of tuners in TVHeadend",
                    "label": "TVH_TUNER_COUNT",
                    "name": "TVH_TUNER_COUNT"
                },
                {
                    "default": "300",
                    "description": "Subscription priority",
                    "label": "TVH_WEIGHT",
                    "name": "TVH_WEIGHT"
                },
                {
                    "default": "pass",
                    "description": "Stream profile for adhoc transcoding in TVHeadend, e.g. mp4",
                    "label": "TVH_PROFILE",
                    "name": "TVH_PROFILE"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "christoefar/tvhproxy:latest",
            "name": "tvhproxy",
            "platform": "linux",
            "ports": [
                "5004:5004/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Tvhproxy",
            "type": 1
        },
        {
            "categories": [
                "Video",
                "Other"
            ],
            "description": "An app to emulate the HDHomeRun API which allows Plex Media Server's DVR feature to connect to EETV Boxes.",
            "env": [
                {
                    "default": "localhost",
                    "description": "Specify the host domain/IP to use e.g. 192.168.1.50",
                    "label": "PROXY_HOST",
                    "name": "PROXY_HOST"
                },
                {
                    "default": "5004",
                    "description": "Specify the port to use e.g. 5004",
                    "label": "PROXY_PORT",
                    "name": "PROXY_PORT"
                },
                {
                    "default": "192.168.1.52",
                    "description": "Specify the IP of the EETV Box e.g. 192.168.1.50",
                    "label": "EETV_IP",
                    "name": "EETV_IP"
                },
                {
                    "default": "",
                    "description": "Specify the AppKey for the EETV Box. Leave blank to use default AppKey",
                    "label": "EETV_APP_KEY",
                    "name": "EETV_APP_KEY"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "olivercullimore/eetv-plex-proxy:latest",
            "name": "eetv-plex-proxy",
            "platform": "linux",
            "ports": [
                "5004:5004/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "EETV Plex Proxy",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/EETVPlexProxy",
                    "container": "/config"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Downloaders"
            ],
            "description": "Web GUI for youtube-dl with playlist support. Allows you to download videos from YouTube and dozens of other sites (https://ytdl-org.github.io/youtube-dl/supportedsites.html).",
            "image": "alexta69/metube:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/ytdlm.png",
            "name": "metube-youtubedl",
            "platform": "linux",
            "ports": [
                "8081:8081/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "MeTube (YouTubeDL)",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/MeTube/Downloads",
                    "container": "/downloads"
                }
            ]
        },
        {
            "categories": [
                "Other",
                "Tools"
            ],
            "description": "NOTE: Once you deploy your GoPhish instance, please navigate to the logs section in Portainer and acquire your 'admin' credentials for login. Gophish is an open-source phishing toolkit designed for businesses and penetration testers. It provides the ability to quickly and easily setup and execute phishing engagements and security awareness training.",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "gophish/gophish:latest",
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/gophish.png",
            "name": "gophish",
            "platform": "linux",
            "ports": [
                "3333:3333/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "GOPHISH",
            "type": 1
        },
        {
            "categories": [
                "Cloud",
                "Other"
            ],
            "description": "Seafile is an open-source, cross-platform file-hosting software system. Files are stored on a central server and can be synchronized with personal computers and mobile devices through apps. Files on the Seafile server can also be accessed directly via the server's web interface.",
            "env": [
                {
                    "default": "Etc/UTC",
                    "label": "Time Zone",
                    "name": "TIME_ZONE"
                },
                {
                    "default": "password",
                    "label": "Database Password",
                    "name": "MYSQL_ROOT_PASSWORD"
                },
                {
                    "default": "me@example.com",
                    "label": "Administrator Email",
                    "name": "ADMIN_EMAIL"
                },
                {
                    "default": "asecret",
                    "label": "Administrator Password",
                    "name": "ADMIN_PASSWORD"
                },
                {
                    "default": "docs.seafile.com",
                    "label": "Domain Name",
                    "name": "SERVER_HOSTNAME"
                },
                {
                    "label": "Enable HTTPS?",
                    "name": "ENABLE_HTTPS",
                    "select": [
                        {
                            "default": true,
                            "text": "Yes",
                            "value": "true"
                        },
                        {
                            "text": "No",
                            "value": "false"
                        }
                    ]
                }
            ],
            "logo": "https://raw.githubusercontent.com/SelfhostedPro/selfhosted_templates/master/Images/seafile.png",
            "name": "seafile",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/seafile.yml",
                "url": "https://github.com/SelfhostedPro/selfhosted_templates"
            },
            "title": "Seafile",
            "type": 3
        },
        {
            "categories": [
                "Tools",
                "Productivity",
                "Web",
                "Other"
            ],
            "description": "wallabag is a self hostable application for saving web pages: Save and classify articles. Read them later. Freely.",
            "env": [
                {
                    "default": "ovmpmAWXRCabNlMgzlzFXDYmCFfzGv",
                    "description": "This should be set to a random string of characters.",
                    "label": "Secret",
                    "name": "SYMFONY__ENV__SECRET"
                },
                {
                    "default": "https://wallabag.example.com",
                    "label": "Domain Name",
                    "name": "SYMFONY__ENV__DOMAIN_NAME"
                },
                {
                    "default": "127.0.0.1",
                    "label": "SMTP Host",
                    "name": "SYMFONY__ENV__MAILER_HOST"
                },
                {
                    "default": "~",
                    "label": "SMTP Username",
                    "name": "SYMFONY__ENV__MAILER_USER"
                },
                {
                    "default": "~",
                    "label": "SMTP Password",
                    "name": "SYMFONY__ENV__MAILER_PASSWORD"
                },
                {
                    "default": "wallabag@example.com",
                    "label": "SMTP From Email",
                    "name": "SYMFONY__ENV__FROM_EMAIL"
                },
                {
                    "label": "Enable public user registration?",
                    "name": "SYMFONY__ENV__FOSUSER_REGISTRATION",
                    "select": [
                        {
                            "default": true,
                            "text": "Yes",
                            "value": "true"
                        },
                        {
                            "text": "No",
                            "value": "false"
                        }
                    ]
                },
                {
                    "label": "Require registration confirmation?",
                    "name": "SYMFONY__ENV__FOSUSER_CONFIRMATION",
                    "select": [
                        {
                            "default": true,
                            "text": "Yes",
                            "value": "true"
                        },
                        {
                            "text": "No",
                            "value": "false"
                        }
                    ]
                }
            ],
            "image": "wallabag/wallabag:latest",
            "logo": "https://raw.githubusercontent.com/jake-walker/selfhosted_templates/wallabag/Images/wallabag.png",
            "name": "wallabag",
            "platform": "linux",
            "ports": [
                "80:80/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Wallbag",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Wallabag/data",
                    "container": "/var/www/wallabag/data"
                },
                {
                    "bind": "/portainer/Files/AppData/Wallabag/images",
                    "container": "/var/www/wallabag/web/assets/images"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "GitLab runner",
            "image": "gitlab/gitlab-runner:alpine",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/gitlab-runner-icon.png",
            "name": "gitlab-runner",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "GitLab Runner",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/gitlab-runner/config",
                    "container": "/etc/gitlab-runner"
                },
                {
                    "bind": "/var/run/docker.sock",
                    "container": "/var/run/docker.sock"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "Jetbrains TeamCity Server",
            "image": "jetbrains/teamcity-server",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-server",
            "platform": "linux",
            "ports": [
                "8111:8111/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Jetbrains TeamCity Server",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/teamcity-server/data",
                    "container": "/data/teamcity_server/datadir"
                },
                {
                    "bind": "/portainer/Files/AppData/teamcity-server/logs",
                    "container": "/opt/teamcity/logs"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "Jetbrains TeamCity Agent",
            "env": [
                {
                    "description": "URL of the TeamCity server agent will connect to.",
                    "label": "Server URL",
                    "name": "SERVER_URL",
                    "default": ""
                }
            ],
            "image": "jetbrains/teamcity-agent",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-agent",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "Jetbrains TeamCity Agent",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/teamcity-agent/data",
                    "container": "/data/teamcity_agent/conf"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "Jetbrains TeamCity Agent (Docker in Docker)",
            "env": [
                {
                    "description": "URL of the TeamCity server agent will connect to.",
                    "label": "Server URL",
                    "name": "SERVER_URL",
                    "default": ""
                },
                {
                    "description": "Start Docker within the Docker container.",
                    "label": "Docker in Docker",
                    "name": "DOCKER_IN_DOCKER",
                    "default": "start"
                }
            ],
            "image": "jetbrains/teamcity-agent:2020.2.4-linux-sudo",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-agent",
            "platform": "linux",
            "privileged": true,
            "restart_policy": "unless-stopped",
            "title": "Jetbrains TeamCity Agent Docker",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/teamcity-agent/data",
                    "container": "/data/teamcity_agent/conf"
                },
                {
                    "container": "/var/lib/docker"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Media",
                "Other"
            ],
            "description": "Jetbrains TeamCity Server with 3 Jetbrains TeamCity Agents (Docker in Docker).",
            "env": [
                {
                    "default": "8111",
                    "label": "TeamCity Server Port",
                    "name": "SERVER_PORT"
                },
                {
                    "default": "-Xmx2g -XX:ReservedCodeCacheSize=350m",
                    "label": "TeamCity Server Memory Options",
                    "name": "SERVER_MEM_OPTS"
                },
                {
                    "description": "Start Docker within the Agent Docker container.",
                    "label": "Agent Docker in Docker",
                    "name": "AGENT_DOCKER_IN_DOCKER",
                    "default": "start"
                },
                {
                    "label": "MySQL Root Password",
                    "name": "MYSQL_ROOT_PASSWORD",
                    "set": ""
                },
                {
                    "default": "teamcity",
                    "label": "MYSQL_DATABASE",
                    "name": "MYSQL_DATABASE"
                },
                {
                    "default": "teamcity",
                    "label": "MYSQL_USER",
                    "name": "MYSQL_USER"
                },
                {
                    "label": "MYSQL_PASSWORD",
                    "name": "MYSQL_PASSWORD"
                },
                {
                    "default": "Europe/London",
                    "label": "Timezone",
                    "name": "TZ"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/teamcity.png",
            "name": "teamcity-stack",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/teamcity-server-agents.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Jetbrains TeamCity Stack",
            "type": 3
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "TestProject Agent with headless Chrome & Firefox browsers.",
            "env": [
                {
                    "label": "TestProject API Key",
                    "name": "TP_API_KEY"
                },
                {
                    "default": "docker-agent-1",
                    "label": "TestProject Agent Alias",
                    "name": "TP_AGENT_ALIAS"
                },
                {
                    "label": "Chrome SMH Size",
                    "name": "CHROME_SMH_SIZE",
                    "default": "1g"
                },
                {
                    "label": "Firefox SMH Size",
                    "name": "FIREFOX_SMH_SIZE",
                    "default": "1g"
                }
            ],
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/testproject.png",
            "name": "testproject-chrome-firefox",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/testproject-chrome-firefox.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "TestProject Agent Browser Stack",
            "type": 3
        },
        {
            "categories": [
                "Tools",
                "Media",
                "Other"
            ],
            "description": "Refer to https://github.com/OliverCullimore/media-grabber-worker for documentation.",
            "env": [
                {
                    "default": "redis",
                    "label": "REDIS_HOST",
                    "name": "REDIS_HOST"
                },
                {
                    "default": "6379",
                    "label": "REDIS_PORT",
                    "name": "REDIS_PORT"
                },
                {
                    "default": "1",
                    "label": "REDIS_DATABASE",
                    "name": "REDIS_DATABASE"
                },
                {
                    "label": "REDIS_PASSWORD",
                    "name": "REDIS_PASSWORD"
                },
                {
                    "default": "best",
                    "label": "YTDL_FORMAT",
                    "name": "YTDL_FORMAT"
                },
                {
                    "default": "",
                    "label": "YTDL_PROXY",
                    "name": "YTDL_PROXY"
                },
                {
                    "default": true,
                    "label": "YTDL_WRITEINFOJSON",
                    "name": "YTDL_WRITEINFOJSON",
                    "select": [
                        {
                            "text": "Enabled",
                            "value": true,
                            "default": true
                        },
                        {
                            "text": "Disabled",
                            "value": false
                        }
                    ]
                },
                {
                    "default": false,
                    "label": "YTDL_VERBOSE",
                    "name": "YTDL_VERBOSE",
                    "select": [
                        {
                            "text": "Disabled",
                            "value": false,
                            "default": true
                        },
                        {
                            "text": "Enabled",
                            "value": true
                        }
                    ]
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/media-grabber-worker-redis.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Media Grabber Worker with Redis",
            "name": "Media Grabber Worker with Redis",
            "type": 3
        },
        {
            "categories": [
                "Tools",
                "Media",
                "Other"
            ],
            "description": "Refer to https://github.com/OliverCullimore/media-grabber-worker for documentation.",
            "env": [
                {
                    "default": "redis",
                    "label": "REDIS_HOST",
                    "name": "REDIS_HOST"
                },
                {
                    "default": "6379",
                    "label": "REDIS_PORT",
                    "name": "REDIS_PORT"
                },
                {
                    "default": "1",
                    "label": "REDIS_DATABASE",
                    "name": "REDIS_DATABASE"
                },
                {
                    "label": "REDIS_PASSWORD",
                    "name": "REDIS_PASSWORD"
                },
                {
                    "default": "best",
                    "label": "YTDL_FORMAT",
                    "name": "YTDL_FORMAT"
                },
                {
                    "default": "%(title)s-%(id)s.%(ext)s",
                    "label": "YTDL_OUTPUT_TEMPLATE",
                    "name": "YTDL_OUTPUT_TEMPLATE"
                },
                {
                    "default": "socks5h://proxy:1080",
                    "label": "YTDL_PROXY",
                    "name": "YTDL_PROXY"
                },
                {
                    "default": true,
                    "label": "YTDL_WRITEINFOJSON",
                    "name": "YTDL_WRITEINFOJSON",
                    "select": [
                        {
                            "text": "Enabled",
                            "value": true,
                            "default": true
                        },
                        {
                            "text": "Disabled",
                            "value": false
                        }
                    ]
                },
                {
                    "default": false,
                    "label": "YTDL_VERBOSE",
                    "name": "YTDL_VERBOSE",
                    "select": [
                        {
                            "text": "Disabled",
                            "value": false,
                            "default": true
                        },
                        {
                            "text": "Enabled",
                            "value": true
                        }
                    ]
                },
                {
                    "default": "us-sfo.prod.surfshark.com",
                    "label": "PROXY_SERVER",
                    "name": "PROXY_SERVER"
                },
                {
                    "default": "",
                    "label": "PROXY_SERVER_PORT",
                    "name": "PROXY_SERVER_PORT"
                },
                {
                    "default": "",
                    "label": "PROXY_SERVER_PASSWORD",
                    "name": "PROXY_SERVER_PASSWORD"
                },
                {
                    "default": "1080",
                    "label": "PROXY_PORT",
                    "name": "PROXY_PORT"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/media-grabber-worker-proxy.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Media Grabber Worker with Proxy",
            "name": "Media Grabber Worker with Proxy",
            "type": 3
        },
        {
            "categories": [
                "Docker",
                "Tools",
                "Other"
            ],
            "description": "Docker image registry",
            "env": [
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "registry:latest",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
            "name": "docker-registry",
            "platform": "linux",
            "ports": [
                "5000:5000/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "Docker Registry",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/DockerRegistry",
                    "container": "/var/lib/registry"
                }
            ]
        },
        {
            "categories": [
                "Database",
                "Tools",
                "Other"
            ],
            "description": "Open-source document-oriented database",
            "env": [
                {
                    "description": "Automatically initializes a database with the name of this environment variable.",
                    "label": "InfluxDB Database Name",
                    "name": "INFLUXDB_DB"
                },
                {
                    "default": "true",
                    "description": "Enables authentication. Either this must be set or auth-enabled = true must be set within the configuration file for any authentication related options below to work.",
                    "label": "InfluxDB HTTP Auth Enabled",
                    "name": "INFLUXDB_HTTP_AUTH_ENABLED"
                },
                {
                    "description": "The name of the admin user to be created. If this is unset, no admin user is created.",
                    "label": "InfluxDB Admin User",
                    "name": "INFLUXDB_ADMIN_USER"
                },
                {
                    "description": "The password for the admin user configured with INFLUXDB_ADMIN_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB Admin Password",
                    "name": "INFLUXDB_ADMIN_PASSWORD"
                },
                {
                    "description": "The name of a user to be created with no privileges. If INFLUXDB_DB is set, this user will be granted read and write permissions for that database.",
                    "label": "InfluxDB User",
                    "name": "INFLUXDB_USER"
                },
                {
                    "description": "The password for the user configured with INFLUXDB_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB User Password",
                    "name": "INFLUXDB_USER_PASSWORD"
                },
                {
                    "description": "The name of a user to be created with read privileges on INFLUXDB_DB. If INFLUXDB_DB is not set, this user will have no granted permissions.",
                    "label": "InfluxDB Read User",
                    "name": "INFLUXDB_READ_USER"
                },
                {
                    "description": "The password for the user configured with INFLUXDB_READ_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB Read User Password",
                    "name": "INFLUXDB_READ_USER_PASSWORD"
                },
                {
                    "description": "The name of a user to be created with write privileges on INFLUXDB_DB. If INFLUXDB_DB is not set, this user will have no granted permissions.",
                    "label": "InfluxDB Write User",
                    "name": "INFLUXDB_WRITE_USER"
                },
                {
                    "description": "The password for the user configured with INFLUXDB_WRITE_USER. If this is unset, a random password is generated and printed to standard out.",
                    "label": "InfluxDB Write User Password",
                    "name": "INFLUXDB_WRITE_USER_PASSWORD"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "quay.io/influxdb/influxdb:v2.0.3",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/influxdb.png",
            "name": "influxdb",
            "platform": "linux",
            "ports": [
                "8086:8086/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "InfluxDB",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/InfluxDB",
                    "container": "/var/lib/influxdb"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Productivity",
                "Web",
                "Other"
            ],
            "description": "Strapi CMS.",
            "env": [
                {
                    "default": "1337",
                    "label": "Strapi Port",
                    "name": "STRAPI_PORT"
                },
                {
                    "label": "Strapi JWT Secret",
                    "name": "STRAPI_JWT_SECRET"
                },
                {
                    "default": "27017",
                    "label": "MongoDB Port",
                    "name": "MONGODB_PORT"
                },
                {
                    "default": "strapi",
                    "label": "MongoDB Root Username",
                    "name": "MONGODB_USER"
                },
                {
                    "label": "MongoDB Root Password",
                    "name": "MONGODB_PASS"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/strapi.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Strapi",
            "name": "strapi",
            "type": 3
        },
        {
            "categories": [
                "Tools",
                "Productivity",
                "Web",
                "Other"
            ],
            "description": "Miniflux.",
            "env": [
                {
                    "default": "8080",
                    "label": "Miniflux Port",
                    "name": "MINIFLUX_PORT"
                },
                {
                    "default": "admin",
                    "label": "Miniflux Username",
                    "name": "MINIFLUX_USERNAME"
                },
                {
                    "label": "Miniflux Password",
                    "name": "MINIFLUX_PASSWORD"
                },
                {
                    "label": "Postgres Password",
                    "name": "POSTGRES_PASSWORD"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/miniflux.yml",
                "url": "https://github.com/OliverCullimore/portainer-templates"
            },
            "title": "Miniflux",
            "name": "miniflux",
            "type": 3
        },
        {
            "categories": [
                "Web",
                "Tools",
                "Productivity",
                "Other"
            ],
            "description": "MagicMirror\u00b2 is an open source modular smart mirror platform. With a growing list of installable modules, the MagicMirror\u00b2 allows you to convert your hallway or bathroom mirror into your personal assistant.",
            "env": [
                {
                    "default": "Europe/London",
                    "description": "Specify the Timezone",
                    "label": "Timezone",
                    "name": "TZ"
                }
            ],
            "image": "bastilimbach/docker-magicmirror:latest",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/magicmirror2.png",
            "name": "magicmirror2",
            "platform": "linux",
            "ports": [
                "80:8080/tcp"
            ],
            "restart_policy": "unless-stopped",
            "title": "MagicMirror\u00b2",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/MagicMirror2/config",
                    "container": "/opt/magic_mirror/config"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/MagicMirror2/modules",
                    "container": "/opt/magic_mirror/modules"
                },
                {
                    "bind": "/portainer/Files/AppData/Config/MagicMirror2/css/custom.css",
                    "container": "/opt/magic_mirror/css/custom.css"
                },
                {
                    "bind": "/etc/localtime",
                    "container": "/etc/localtime:ro"
                }
            ]
        },
        {
            "categories": [
                "Tools",
                "Other"
            ],
            "description": "An app that periodically gets energy data from the geotogether.com API and stores it in an InfluxDB database.",
            "env": [
                {
                    "default": "10",
                    "description": "Specify the fetch interval for live meter data",
                    "label": "Live Meter Data Fetch Interval (seconds)",
                    "name": "LIVE_DATA_FETCH_INTERVAL"
                },
                {
                    "default": "300",
                    "description": "Specify the fetch interval for periodic meter data",
                    "label": "Periodic Meter Data Fetch Interval (seconds)",
                    "name": "PERIODIC_DATA_FETCH_INTERVAL"
                },
                {
                    "description": "Specify the geo Home username",
                    "label": "geo User",
                    "name": "GEO_USER"
                },
                {
                    "description": "Specify the geo Home password",
                    "label": "geo Pass",
                    "name": "GEO_PASS"
                },
                {
                    "description": "Specify the InfluxDB host",
                    "label": "InfluxDB Host",
                    "name": "INFLUXDB_HOST"
                },
                {
                    "default": "8086",
                    "description": "Specify the InfluxDB port",
                    "label": "InfluxDB Port",
                    "name": "INFLUXDB_PORT"
                },
                {
                    "description": "Specify the InfluxDB organization",
                    "label": "InfluxDB Organization",
                    "name": "INFLUXDB_ORG"
                },
                {
                    "description": "Specify the InfluxDB Bucket",
                    "label": "InfluxDB Bucket",
                    "name": "INFLUXDB_BUCKET"
                },
                {
                    "description": "Specify the InfluxDB Token",
                    "label": "InfluxDB Token",
                    "name": "INFLUXDB_TOKEN"
                },
                {
                    "default": "/config/config.json",
                    "description": "Specify the config filepath",
                    "label": "Config Filepath",
                    "name": "CONFIG_FILE"
                },
                {
                    "default": "1000",
                    "label": "PUID",
                    "name": "PUID"
                },
                {
                    "default": "1000",
                    "label": "PGID",
                    "name": "PGID"
                }
            ],
            "image": "olivercullimore/geo-energy-data:v2.0.0",
            "logo": "https://raw.githubusercontent.com/OliverCullimore/portainer-templates/master/images/geo-energy-data.png",
            "name": "geo-energy-data",
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "title": "geo Energy Data",
            "type": 1,
            "volumes": [
                {
                    "bind": "/portainer/Files/AppData/Config/geoEnergyData",
                    "container": "/config"
                }
            ]
        },
        {
            "type": 1,
            "name": "changedetection",
            "title": "ChangeDetection",
            "description": "changedetection.io - The best and simplest self-hosted open source website change detection monitoring and notification service. An alternative to Visualping, Watchtower",
            "logo": "https://mediadepot.github.io/templates/img/changedetection.jpg",
            "image": "ghcr.io/dgtlmoon/changedetection.io:latest",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/datastore",
                    "bind": "/opt/mediadepot/apps/changedetection"
                }
            ],
            "env": [],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.changedetection.loadbalancer.server.port",
                    "value": "5000"
                },
                {
                    "name": "traefik.http.routers.changedetection.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.changedetection.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 1,
            "name": "cloudcmd",
            "title": "Cloud Commander",
            "description": "Cloud Commander a file manager for the web with console and editor.",
            "logo": "https://mediadepot.github.io/templates/img/cloudcmd-logo.png",
            "image": "coderaiser/cloudcmd",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "8000/tcp"
            ],
            "volumes": [
                {
                    "container": "/media/host/opt/mediadepot",
                    "bind": "/opt/mediadepot/apps"
                },
                {
                    "container": "/media/host/media/storage",
                    "bind": "/media/storage"
                },
                {
                    "container": "/media/host/media/temp",
                    "bind": "/media/temp"
                }
            ],
            "env": [],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.cloudcmd.loadbalancer.server.port",
                    "value": "8000"
                },
                {
                    "name": "traefik.http.routers.cloudcmd.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.cloudcmd.tls.certresolver",
                    "value": "mydnschallenge"
                },
                {
                    "name": "traefik.http.routers.cloudcmd.middlewares",
                    "value": "authme"
                },
                {
                    "name": "traefik.http.middlewares.authme.forwardauth.address",
                    "value": "http://authelia:9091/api/verify?rd=https://login.${DEPOT_DOMAIN_NAME}/"
                },
                {
                    "name": "traefik.http.middlewares.authme.forwardauth.trustforwardheader",
                    "value": "true"
                }
            ]
        },
        {
            "type": 1,
            "name": "duplicacy",
            "title": "Duplicacy",
            "description": "Duplicacy backs up your files to many cloud storages with client-side encryption and the highest level of deduplication",
            "logo": "https://mediadepot.github.io/templates/img/duplicacy-icon.png",
            "image": "mediadepot/duplicacy:latest",
            "categories": [
                "Utility:Backup"
            ],
            "ports": [
                "3875/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/duplicacy/config"
                },
                {
                    "container": "/logs",
                    "bind": "/opt/mediadepot/apps/duplicacy/logs"
                },
                {
                    "container": "/cache",
                    "bind": "/opt/mediadepot/apps/duplicacy/cache"
                },
                {
                    "container": "/source/apps",
                    "bind": "/opt/mediadepot/apps/"
                },
                {
                    "container": "/source/storage",
                    "bind": "/media/storage/"
                }
            ],
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.duplicacy.loadbalancer.server.port",
                    "value": "3875"
                },
                {
                    "name": "traefik.http.routers.duplicacy.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.duplicacy.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 1,
            "name": "droppy",
            "title": "Droppy",
            "description": "Droppy is a self-hosted file storage server",
            "logo": "https://mediadepot.github.io/templates/img/filebrowser-icon.png",
            "image": "silverwind/droppy:latest",
            "categories": [
                "Tools:",
                "Network:Web",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "8989/tcp"
            ],
            "volumes": [
                {
                    "container": "/files/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/files/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/files/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/files/photos",
                    "bind": "/media/storage/photos"
                },
                {
                    "container": "/files/ebooks",
                    "bind": "/media/storage/ebooks"
                },
                {
                    "container": "/files/documents",
                    "bind": "/media/storage/documents"
                },
                {
                    "container": "/files/software",
                    "bind": "/media/storage/software"
                },
                {
                    "container": "/files/downloads",
                    "bind": "/media/storage/downloads"
                },
                {
                    "container": "/files/blackhole",
                    "bind": "/media/temp/blackhole"
                },
                {
                    "container": "/files/processing",
                    "bind": "/media/temp/processing"
                },
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/droppy"
                }
            ],
            "env": [
                {
                    "name": "GID",
                    "label": "GID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "UID",
                    "label": "UID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.droppy.loadbalancer.server.port",
                    "value": "8989"
                },
                {
                    "name": "traefik.http.routers.droppy.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.droppy.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 3,
            "name": "filerun",
            "title": "Filerun",
            "description": "access your files anywhere through self-hosted secure cloud storage, file backup and sharing for your photos, videos, files and more.",
            "logo": "https://mediadepot.github.io/templates/img/filerun-logo.png",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "env": [],
            "repository": {
                "url": "https://github.com/mediadepot/templates",
                "stackfile": "stacks/filerun/docker-compose.yml"
            }
        },
        {
            "type": 1,
            "name": "gaps",
            "title": "Gaps",
            "description": "Gaps searches through your Plex Server or local folders for all movies, then queries for known movies in the same collection.",
            "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
            "image": "housewrecker/gaps:latest",
            "categories": [
                "Tools:",
                "Network:Web",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "8484/tcp"
            ],
            "volumes": [],
            "env": [
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.gaps.loadbalancer.server.port",
                    "value": "8484"
                },
                {
                    "name": "traefik.http.routers.gaps.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.gaps.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 3,
            "name": "klaxon",
            "title": "Klaxon",
            "description": "Klaxon is a free, quick to set up and easy to use robot that checks websites regularly so you don't have to.",
            "logo": "https://mediadepot.github.io/templates/img/klaxon-logo.png",
            "categories": [
                "Documents:",
                "Network:Other",
                "Tools:"
            ],
            "env": [
                {
                    "name": "SMTP_PROVIDER",
                    "label": "SMTP_PROVIDER",
                    "default": "SENDGRID"
                },
                {
                    "name": "SENDGRID_USERNAME",
                    "label": "SENDGRID_USERNAME",
                    "default": ""
                },
                {
                    "name": "SENDGRID_PASSWORD",
                    "label": "SENDGRID_PASSWORD",
                    "default": ""
                },
                {
                    "name": "ADMIN_EMAILS",
                    "label": "ADMIN_EMAILS",
                    "default": ""
                }
            ],
            "repository": {
                "url": "https://github.com/mediadepot/templates",
                "stackfile": "stacks/klaxon/docker-compose.yml"
            }
        },
        {
            "type": 1,
            "name": "logzio-logs-collector",
            "title": "Logzio Logs Collector",
            "description": "Docker container that uses Filebeat to collect logs from other Docker containers and forward those logs to your Logz.io account.",
            "logo": "https://mediadepot.github.io/templates/img/logzio-icon.png",
            "image": "logzio/docker-collector-logs",
            "categories": [
                "Tools:"
            ],
            "ports": [],
            "privileged": true,
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock",
                    "readonly": true
                },
                {
                    "container": "/var/lib/docker/containers",
                    "bind": "/var/lib/docker/containers"
                }
            ],
            "env": [
                {
                    "name": "LOGZIO_TOKEN",
                    "label": "LOGZIO_TOKEN",
                    "default": "REPLACE-LOGZIO-TOKEN-HERE"
                },
                {
                    "name": "LOGZIO_URL",
                    "label": "LOGZIO_URL",
                    "default": "listener.logz.io:5015"
                }
            ],
            "labels": []
        },
        {
            "type": 1,
            "name": "logzio-metrics-collector",
            "title": "Logzio Metrics Collector",
            "description": "Docker Metrics Collector is a container that runs Metricbeat with the modules you enable at runtime.",
            "logo": "https://mediadepot.github.io/templates/img/logzio-icon.png",
            "image": "logzio/docker-collector-metrics",
            "categories": [
                "Tools:"
            ],
            "ports": [],
            "privileged": true,
            "volumes": [
                {
                    "container": "/var/run/docker.sock",
                    "bind": "/var/run/docker.sock",
                    "readonly": true
                },
                {
                    "container": "/hostfs/sys/fs/cgroup",
                    "bind": "/sys/fs/cgroup",
                    "readonly": true
                },
                {
                    "container": "/hostfs/proc",
                    "bind": "/proc",
                    "readonly": true
                },
                {
                    "container": "/hostfs",
                    "bind": "/",
                    "readonly": true
                }
            ],
            "env": [
                {
                    "name": "LOGZIO_TOKEN",
                    "label": "LOGZIO_TOKEN",
                    "default": "REPLACE-LOGZIO-TOKEN-HERE"
                },
                {
                    "name": "LOGZIO_MODULES",
                    "label": "LOGZIO_MODULES",
                    "default": "system,docker"
                }
            ],
            "labels": []
        },
        {
            "type": 3,
            "name": "mayan",
            "title": "Mayan EDMS",
            "description": "Mayan EDMS is an electronic vault for your documents.",
            "logo": "https://mediadepot.github.io/templates/img/mayan-logo.png",
            "categories": [
                "Documents:",
                "Tools:"
            ],
            "repository": {
                "url": "https://github.com/mediadepot/templates",
                "stackfile": "stacks/mayan/docker-compose.yml"
            }
        },
        {
            "type": 1,
            "name": "netbootxyz",
            "title": "Netboot.xyz",
            "description": "Netbootxyz is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool",
            "logo": "https://mediadepot.github.io/templates/img/netbootxyz.jpg",
            "image": "linuxserver/netbootxyz:latest",
            "categories": [
                "Downloaders:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [
                "3000/tcp",
                "69/udp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/netbootxyz"
                },
                {
                    "container": "/assets",
                    "bind": "/media/storage/software/netbootxyz"
                },
                {
                    "container": "/etc/localtime",
                    "bind": "/etc/localtime",
                    "readonly": true
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.netbootxyz.loadbalancer.server.port",
                    "value": "3000"
                },
                {
                    "name": "traefik.http.routers.netbootxyz.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.netbootxyz.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 1,
            "name": "plex",
            "title": "Plex Media Server",
            "description": "Plex organizes your video, music, and photo collections and streams them to all of your screens.",
            "logo": "https://mediadepot.github.io/templates/img/plex-icon.png",
            "image": "linuxserver/plex:latest",
            "network": "host",
            "categories": [
                "MediaServer:Video",
                "MediaServer:Music",
                "MediaServer:Photos"
            ],
            "privileged": true,
            "ports": [],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/plex"
                },
                {
                    "container": "/data/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/data/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/data/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/transcode"
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney"
                },
                {
                    "name": "VERSION",
                    "label": "VERSION",
                    "default": "latest"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.plex.loadbalancer.server.port",
                    "value": "32400"
                }
            ]
        },
        {
            "type": 1,
            "name": "pureftp",
            "title": "Pure-FTP Server",
            "description": "Pure-FTPd is a free (BSD), secure, production-quality and standard-conformant FTP server. ",
            "logo": "https://mediadepot.github.io/templates/img/pureftpd-icon.jpg",
            "image": "stilliard/pure-ftpd:hardened",
            "network": "host",
            "categories": [
                "Network:Other",
                "Utilities:"
            ],
            "ports": [
                "21/tcp",
                "30000/tcp",
                "30001/tcp",
                "30002/tcp",
                "30003/tcp",
                "30004/tcp",
                "30005/tcp",
                "30006/tcp",
                "30007/tcp",
                "30008/tcp",
                "30009/tcp"
            ],
            "volumes": [
                {
                    "container": "/etc/pure-ftpd/passwd",
                    "bind": "/opt/mediadepot/apps/pureftp"
                },
                {
                    "container": "/data/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/data/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/data/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/data/ebooks",
                    "bind": "/media/storage/ebooks"
                },
                {
                    "container": "/data/photos",
                    "bind": "/media/storage/photos"
                },
                {
                    "container": "/data/documents",
                    "bind": "/media/storage/documents"
                },
                {
                    "container": "/data/downloads",
                    "bind": "/media/storage/downloads"
                },
                {
                    "container": "/data/software",
                    "bind": "/media/storage/software"
                },
                {
                    "container": "/data/blackhole",
                    "bind": "/media/temp/blackhole"
                },
                {
                    "container": "/data/processing",
                    "bind": "/media/temp/processing"
                }
            ],
            "env": [
                {
                    "name": "FTP_USER_NAME",
                    "label": "FTP_USER_NAME",
                    "default": "depot",
                    "preset": true
                },
                {
                    "name": "FTP_USER_PASS",
                    "label": "FTP_USER_PASS",
                    "default": "badpass"
                },
                {
                    "name": "FTP_USER_HOME",
                    "label": "FTP_USER_HOME",
                    "default": "/data",
                    "preset": true
                },
                {
                    "name": "FTP_USER_GID",
                    "label": "FTP_USER_GID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "FTP_USER_UID",
                    "label": "FTP_USER_UID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney"
                },
                {
                    "name": "PUBLICHOST",
                    "label": "PUBLICHOST",
                    "default": "localhost"
                }
            ],
            "labels": []
        },
        {
            "type": 1,
            "name": "rclone",
            "title": "Rclone Config Backup",
            "description": "Rclone is a command line program to sync files and directories to and from cloud providers (Dropbox, GDrive, Box, etc)",
            "logo": "https://mediadepot.github.io/templates/img/rclone.png",
            "image": "mediadepot/rclone:latest",
            "categories": [
                "Backup:",
                "Cloud:",
                "Network:Other",
                "Tools:"
            ],
            "ports": [],
            "volumes": [
                {
                    "container": "/srv/rclone/config",
                    "bind": "/opt/mediadepot/apps/rclone"
                },
                {
                    "container": "/mnt/data",
                    "bind": "/opt/mediadepot/apps"
                }
            ]
        },
        {
            "type": 1,
            "name": "sickrage",
            "title": "SickRage",
            "description": "Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
            "logo": "https://mediadepot.github.io/templates/img/sickrage-icon.png",
            "image": "linuxserver/sickrage:latest",
            "categories": [
                "Downloaders:",
                "MediaApp:Video"
            ],
            "ports": [
                "8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/config",
                    "bind": "/opt/mediadepot/apps/sickrage"
                },
                {
                    "container": "/downloads",
                    "bind": "/media/storage/downloads/tvshows"
                },
                {
                    "container": "/tv",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/blackhole",
                    "bind": "/media/temp/blackhole/tvshows"
                }
            ],
            "env": [
                {
                    "name": "PGID",
                    "label": "PGID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "PUID",
                    "label": "PUID",
                    "default": "15000",
                    "preset": true
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Australia/Sydney"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.sickrage.loadbalancer.server.port",
                    "value": "8081"
                },
                {
                    "name": "traefik.http.routers.sickrage.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.sickrage.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 1,
            "name": "syncserver",
            "title": "Mozilla Syncserver",
            "description": "Run-Your-Own Firefox Sync Server",
            "logo": "https://mediadepot.github.io/templates/img/firefox-logo.png",
            "image": "mozilla/syncserver:latest",
            "categories": [
                "Tools:"
            ],
            "ports": [
                "5000/tcp"
            ],
            "volumes": [
                {
                    "container": "/data",
                    "bind": "/opt/mediadepot/apps/syncserver"
                }
            ],
            "env": [
                {
                    "name": "SYNCSERVER_PUBLIC_URL",
                    "label": "SYNCSERVER_PUBLIC_URL",
                    "default": "https://syncserver.depot.lan"
                },
                {
                    "name": "SYNCSERVER_SECRET_FILE",
                    "label": "SYNCSERVER_SECRET_FILE",
                    "default": "/data/secret_key"
                },
                {
                    "name": "SYNCSERVER_SQLURI",
                    "label": "SYNCSERVER_SQLURI",
                    "default": "sqlite:////data/syncserver.db"
                },
                {
                    "name": "SYNCSERVER_BATCH_UPLOAD_ENABLED",
                    "label": "SYNCSERVER_BATCH_UPLOAD_ENABLED",
                    "default": "true"
                },
                {
                    "name": "SYNCSERVER_FORCE_WSGI_ENVIRON",
                    "label": "SYNCSERVER_FORCE_WSGI_ENVIRON",
                    "default": "false"
                },
                {
                    "name": "PORT",
                    "label": "PORT",
                    "default": "5000"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.syncservere.loadbalancer.server.port",
                    "value": "5000"
                },
                {
                    "name": "traefik.http.routers.syncserver.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.syncserver.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 1,
            "name": "urlwatch",
            "title": "UrlWatch",
            "description": "A tool for monitoring webpages for updates",
            "logo": "https://mediadepot.github.io/templates/img/urlwatch.png",
            "image": "mediadepot/urlwatch:master",
            "categories": [
                "Tools:"
            ],
            "ports": [
                "8081/tcp"
            ],
            "volumes": [
                {
                    "container": "/srv/urlwatch/config",
                    "bind": "/opt/mediadepot/apps/urlwatch"
                },
                {
                    "container": "/etc/localtime",
                    "bind": "/etc/localtime",
                    "readonly": true
                }
            ],
            "env": [],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.http.services.urlwatch.loadbalancer.server.port",
                    "value": "8081"
                },
                {
                    "name": "traefik.http.routers.urlwatch.entrypoints",
                    "value": "websecure"
                },
                {
                    "name": "traefik.http.routers.urlwatch.tls.certresolver",
                    "value": "mydnschallenge"
                }
            ]
        },
        {
            "type": 1,
            "name": "vsftpd",
            "title": "vsftpd FTP Server",
            "description": "Secure, fast FTP server for UNIX-like systems",
            "logo": "https://mediadepot.github.io/templates/img/pureftpd-icon.jpg",
            "image": "delfer/alpine-ftp-server",
            "network": "host",
            "categories": [
                "Network:Other",
                "Utilities:"
            ],
            "ports": [
                "21/tcp",
                "21000/tcp",
                "21001/tcp",
                "21002/tcp",
                "21003/tcp",
                "21004/tcp",
                "21005/tcp",
                "21006/tcp",
                "21007/tcp",
                "21008/tcp",
                "21009/tcp",
                "21010/tcp"
            ],
            "volumes": [
                {
                    "container": "/home/depot/tvshows",
                    "bind": "/media/storage/tvshows"
                },
                {
                    "container": "/home/depot/movies",
                    "bind": "/media/storage/movies"
                },
                {
                    "container": "/home/depot/music",
                    "bind": "/media/storage/music"
                },
                {
                    "container": "/home/depot/ebooks",
                    "bind": "/media/storage/ebooks"
                },
                {
                    "container": "/home/depot/photos",
                    "bind": "/media/storage/photos"
                },
                {
                    "container": "/home/depot/documents",
                    "bind": "/media/storage/documents"
                },
                {
                    "container": "/home/depot/downloads",
                    "bind": "/media/storage/downloads"
                },
                {
                    "container": "/home/depot/software",
                    "bind": "/media/storage/software"
                },
                {
                    "container": "/home/depot/blackhole",
                    "bind": "/media/temp/blackhole"
                },
                {
                    "container": "/home/depot/processing",
                    "bind": "/media/temp/processing"
                }
            ],
            "env": [
                {
                    "name": "ADDRESS",
                    "label": "ADDRESS"
                },
                {
                    "name": "USERS",
                    "label": "USERS",
                    "default": "depot|badpass|/home/depot|15000"
                }
            ],
            "labels": []
        },
        {
            "categories": [
                "Social"
            ],
            "description": "https://github.com/pablouser1/ProxiTok",
            "logo": "",
            "name": "proxitok",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/proxitok.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "ProxiTok",
            "type": 3
        },
        {
            "categories": [
                "Multimedia"
            ],
            "description": "Tdarr is a popular conditional transcoding application for processing large (or small) media libraries.",
            "logo": "https://tdarr.io/static/media/logo3.02a3f4a3.png",
            "name": "tdarr",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/tdarr.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Tdarr",
            "type": 3
        },
        {
            "categories": [
                "Messenger"
            ],
            "description": "Ferdium is a messaging browser that allows you to combine your favourite messaging services into one application",
            "logo": "https://github.com/ferdium/ferdium-server/raw/main/logo.png",
            "name": "ferdium",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/ferdium.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Ferdium",
            "type": 3
        },
        {
            "categories": [
                "Time Tracking"
            ],
            "description": "Traggo is a tag-based time tracking tool. In Traggo there are no tasks, only tagged time spans.",
            "logo": "https://traggo.net/images/favicon.png",
            "name": "traggo",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/traggo.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Traggo",
            "type": 3
        },
        {
            "categories": [
                "Learning"
            ],
            "description": "Moodle is a learning platform designed to provide educators, administrators and learners with a single robust, secure and integrated system to create personalised learning environments.",
            "logo": "https://download.moodle.org/theme/moodleorgcleaned/pix/moodle_logo_TM.svg",
            "name": "moodle",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/moodle.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Moodle",
            "type": 3
        },
        {
            "categories": [
                "Helpdesk"
            ],
            "description": "FreeScout\u00a0is the super lightweight free open source help desk and shared inbox written in PHP (Laravel framework) \u2013 self hosted clone of HelpScout.",
            "logo": "https://raw.githubusercontent.com/freescout-helpdesk/freescout/master/public/img/logo-300.png",
            "name": "freescout",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/freescout.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Freescout",
            "type": 3
        },
        {
            "categories": [
                "Fitness"
            ],
            "description": "Self hosted FLOSS fitness/workout, nutrition and weight tracker written with Django",
            "logo": "https://raw.githubusercontent.com/wger-project/wger/master/wger/core/static/images/logos/logo.png",
            "name": "wger",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/wger.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Wger",
            "type": 3
        },
        {
            "categories": [
                "Docker"
            ],
            "description": "Docker Container Stats is a web interface for viewing historical and current statistics per docker container (cpu, mem, net i/o, block i/o) - in a docker container.",
            "logo": "",
            "name": "Docker Container Stats",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/docker-container-stats.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Docker Container Stats",
            "type": 3
        },
        {
            "categories": [
                "ebooks"
            ],
            "description": "Codex is a web server comic book browser and reader.",
            "logo": "https://github.com/ajslater/codex/raw/main/codex/static_src/img/logo.svg",
            "name": "codex",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/codex.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Codex",
            "type": 3
        },
        {
            "categories": [
                "Messaging"
            ],
            "description": "A TLS proxy relay for the Signal privacy messenger app.",
            "logo": "https://avatars.githubusercontent.com/u/702459?s=200&v=4",
            "name": "signal",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/signal.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Signal Proxy",
            "type": 3
        },
        {
            "categories": [
                "Employee"
            ],
            "description": "ChiefOnboarding is a free and open source employee onboarding platform. You can onboarding new hires through Slack or the dashboard.",
            "logo": "https://chiefonboarding.com/wp-content/uploads/2022/07/ChiefOnBoarding-768x138.png",
            "name": "chiefonboarding",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/chiefonboarding.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Chiefonboarding",
            "type": 3
        },
        {
            "categories": [
                "Podcast"
            ],
            "description": "Castopod is a free and open-source hosting platform made for podcasters.",
            "logo": "https://pbs.twimg.com/profile_images/1313854745161932800/w_qe6Qq6_400x400.png",
            "name": "castopod",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/castopod.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Castopod",
            "type": 3
        },
        {
            "categories": [
                "Music",
                "Monitoring"
            ],
            "description": "YourSpotify is a self-hosted application that tracks what you listen and offers you a dashboard to explore statistics about it!",
            "logo": "",
            "name": "your_spotify",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/your_spotify.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Your_spotify",
            "type": 3
        },
        {
            "categories": [
                "Database",
                "Metrics"
            ],
            "description": "InfluxDB is an open source time series database for recording metrics, events, and analytics. Telegraf is an agent for collecting metrics and writing them to InfluxDB or other outputs.",
            "logo": "https://raw.githubusercontent.com/xneo1/portainer_templates/master/Images/influxdb_telegraf.jpg",
            "name": "influxdb-telegraf",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/influxdb2_telegraf.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Influxdb & Telegraf",
            "type": 3
        },
        {
            "categories": [
                "Files"
            ],
            "description": "A Dropbox-like file manager that let you manage your data anywhere it is located.",
            "logo": "https://downloads.filestash.app/brand/logo_white.svg",
            "name": "filestash",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/filestash.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Filestash",
            "type": 3
        },
        {
            "categories": [
                "CMS"
            ],
            "description": "Silverstripe CMS is a free and open source Content Management System (CMS) and Framework for creating and maintaining websites and web applications.",
            "logo": "https://github.com/brettt89/silverstripe-docker/raw/master/docs/logo.png",
            "name": "silverstripe",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/silverstripe.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Silverstripe",
            "type": 3
        },
        {
            "categories": [
                "Adult"
            ],
            "description": "Whisparr is an adult movie collection manager for Usenet and BitTorrent users.",
            "logo": "https://whisparr.com/logo/256.png",
            "name": "whisparr",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/whisparr.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Whisparr",
            "type": 3
        },
        {
            "categories": [
                "Multimedia"
            ],
            "description": "Your media enjoyed through a minimal lightweight media server.",
            "logo": "https://github.com/midarrlabs/midarr-server/raw/master/priv/static/logo.svg",
            "name": "midarr",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/midarr.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Midarr",
            "type": 3
        },
        {
            "categories": [
                "Development"
            ],
            "description": "Appwrite is a self-hosted backend-as-a-service platform that provides developers with all the core APIs required to build any application.",
            "logo": "https://appwrite.io/images/appwrite.svg",
            "name": "appwrite",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/appwrite.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Appwrite",
            "type": 3
        },
        {
            "categories": [
                "email"
            ],
            "description": "Mailpile is an e-mail client!/search engine and a personal webmail server/easy way to encrypt your e-mail/easy way to encrypt your e-mail ",
            "logo": "https://www.mailpile.is/img/icon-512x512.png",
            "name": "mailpile",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/mailpile.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Mailpile",
            "type": 3
        },
        {
            "categories": [
                "Mail"
            ],
            "description": "Full stack mailserver solution with  TLS support. POP3s, SMTP(s), IMAPs, RSPAMD, Clamav, Roundcube(HTTPS), SPF, DKIM with simple installation and web administration.",
            "logo": "",
            "name": "poste.io",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/posteio.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "Poste.io",
            "type": 3
        },
        {
            "categories": [
                "Productivity"
            ],
            "description": "Turns any MySQL, PostgreSQL, SQL Server, SQLite & MariaDB into a smart-spreadsheet.",
            "logo": "https://github.com/nocodb/nocodb/raw/develop/packages/nc-gui/assets/img/icons/512x512.png",
            "name": "NocoDB",
            "platform": "linux",
            "repository": {
                "stackfile": "Template/Stack/nocodb.yml",
                "url": "https://github.com/xneo1/portainer_templates"
            },
            "title": "NocoDB",
            "type": 3
        },
        {
            "title": "Wizarr",
            "name": "wizarr",
            "image": "ghcr.io/wizarrrr/wizarr",
            "description": "Wizarr is a automatic user invitation system for Plex. Create a unique link and share it to a user and they will automatically be invited to your Plex Server! They will even be guided to download the Plex client and instructions on how to use your requests software!",
            "categories": [
                "Media"
            ],
            "platform": "linux",
            "restart_policy": "unless-stopped",
            "ports": [
                "5890:5690/tcp"
            ],
            "volumes": [
                {
                    "container": "/data/database",
                    "bind": "/portainer/Files/AppData/Config/wizarr/data"
                }
            ],
            "env": [
                {
                    "name": "APP_URL",
                    "default": "https://wizarr.domain.com",
                    "label": "APP_URL"
                },
                {
                    "name": "DISABLE_BUILTIN_AUTH",
                    "default": "false",
                    "label": "DISABLE_BUILTIN_AUTH",
                    "description": "Set to true ONLY if you are using another auth provider (Authelia, Authentik, etc)"
                },
                {
                    "name": "TZ",
                    "default": "Australia/Sydney",
                    "label": "TZ"
                }
            ],
            "logo": "https://github.com/Wizarrrr/wizarr/blob/master/screenshots/wizard.png?raw=true",
            "network_mode": "bridge",
            "type": 1
        }
    ]
}